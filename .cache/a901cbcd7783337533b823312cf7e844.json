{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\tsconfig.json","includedInParent":true,"mtime":1521243480000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\package.json","includedInParent":true,"mtime":1531327400610},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790},{"name":"vector_class","loc":{"line":3,"column":29},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\RigidBody.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\vector_class\\src\\index.ts"}],"generated":{"js":"\"use strict\";\r\nexports.__esModule = true;\r\nvar vector_class_1 = require(\"vector_class\");\r\nvar RigidBody = /** @class */ (function () {\r\n    function RigidBody(position, restitution, mass) {\r\n        if (mass === void 0) { mass = 1; }\r\n        this.velocity = new vector_class_1.Vector2D(0, 0);\r\n        this.position = new vector_class_1.Vector2D(0, 0);\r\n        this.acceleration = new vector_class_1.Vector2D(0, 0);\r\n        this.position = position;\r\n        this.restitution = restitution;\r\n        this.mass = mass;\r\n    }\r\n    RigidBody.prototype.addForce = function (force) {\r\n        this.acceleration.add(force);\r\n    };\r\n    RigidBody.prototype.momentum = function () {\r\n        return vector_class_1.Vector2D.mult(this.velocity, this.mass);\r\n    };\r\n    RigidBody.prototype.inelasticCollision = function (other) {\r\n        var velocity1 = this.velocity;\r\n        var velocity2 = other.velocity;\r\n        var totalMomentum = other.momentum();\r\n        totalMomentum.add(this.momentum());\r\n        var totalMass = this.mass + other.mass;\r\n        // This velocity\r\n        this.velocity = vector_class_1.Vector2D.sub(velocity2, velocity1);\r\n        this.velocity.mult(this.restitution * other.mass);\r\n        this.velocity.add(totalMomentum);\r\n        this.velocity.div(totalMass);\r\n        // Other velocity\r\n        other.velocity = vector_class_1.Vector2D.sub(velocity1, velocity2);\r\n        other.velocity.mult(other.restitution * this.mass);\r\n        other.velocity.add(totalMomentum);\r\n        other.velocity.div(totalMass);\r\n    };\r\n    RigidBody.prototype.update = function () {\r\n        this.acceleration.div(this.mass);\r\n        this.velocity.add(this.acceleration);\r\n        this.position.add(this.velocity);\r\n        this.acceleration.zero();\r\n    };\r\n    return RigidBody;\r\n}());\r\nexports[\"default\"] = RigidBody;\r\n","map":{"version":3,"file":"RigidBody.js","sourceRoot":"","sources":["node_modules\\fisica\\src\\RigidBody.ts"],"names":[],"mappings":";;AACA,6CAAuC;AAEvC;IAQI,mBAAY,QAAQ,EAAE,WAAW,EAAE,IAAQ;QAAR,qBAAA,EAAA,QAAQ;QAJpC,aAAQ,GAAa,IAAI,uBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACvC,aAAQ,GAAa,IAAI,uBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACvC,iBAAY,GAAa,IAAI,uBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAG9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IACpB,CAAC;IAED,4BAAQ,GAAR,UAAS,KAAe;QACpB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;IAChC,CAAC;IAED,4BAAQ,GAAR;QACI,OAAO,uBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;IAClD,CAAC;IAED,sCAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC/B,IAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAA;QAChC,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAA;QACtC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;QAExC,gBAAgB;QAChB,IAAI,CAAC,QAAQ,GAAG,uBAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;QACjD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QAE5B,iBAAiB;QACjB,KAAK,CAAC,QAAQ,GAAG,uBAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;QACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;QAClD,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QACjC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IACjC,CAAC;IAED,0BAAM,GAAN;QACI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC;IACL,gBAAC;AAAD,CAAC,AAhDD,IAgDC;AAED,qBAAe,SAAS,CAAA","sourcesContent":["\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass RigidBody {\r\n\r\n    public mass: number\r\n    public restitution: number\r\n    public velocity: Vector2D = new Vector2D(0, 0)\r\n    public position: Vector2D = new Vector2D(0, 0)\r\n    public acceleration: Vector2D = new Vector2D(0, 0)\r\n\r\n    constructor(position, restitution, mass = 1) {\r\n        this.position = position\r\n        this.restitution = restitution\r\n        this.mass = mass\r\n    }\r\n\r\n    addForce(force: Vector2D): void {\r\n        this.acceleration.add(force)\r\n    }\r\n\r\n    momentum(): Vector2D {\r\n        return Vector2D.mult(this.velocity, this.mass)\r\n    }\r\n\r\n    inelasticCollision(other): void {\r\n        const velocity1 = this.velocity\r\n        const velocity2 = other.velocity\r\n        const totalMomentum = other.momentum()\r\n        totalMomentum.add(this.momentum())\r\n        const totalMass = this.mass + other.mass\r\n\r\n        // This velocity\r\n        this.velocity = Vector2D.sub(velocity2, velocity1)\r\n        this.velocity.mult(this.restitution * other.mass)\r\n        this.velocity.add(totalMomentum)\r\n        this.velocity.div(totalMass)\r\n\r\n        // Other velocity\r\n        other.velocity = Vector2D.sub(velocity1, velocity2)\r\n        other.velocity.mult(other.restitution * this.mass)\r\n        other.velocity.add(totalMomentum)\r\n        other.velocity.div(totalMass)\r\n    }\r\n\r\n    update(): void {\r\n        this.acceleration.div(this.mass)\r\n        this.velocity.add(this.acceleration)\r\n        this.position.add(this.velocity)\r\n        this.acceleration.zero()\r\n    }\r\n}\r\n\r\nexport default RigidBody\r\n"]}},"hash":"9b17a1c1a0fd6657565e9789eb33b35e","cacheData":{"env":{}},"id":136}