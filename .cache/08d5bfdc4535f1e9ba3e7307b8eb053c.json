{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\tsconfig.json","includedInParent":true,"mtime":1522616336000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\package.json","includedInParent":true,"mtime":1531260914979},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531259444264},{"name":"./Graphic","loc":{"line":16,"column":40},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Text.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Graphic.ts"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar Graphic_1 = __importDefault(require(\"./Graphic\"));\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        _this.fontConfig = '';\r\n        _this.lineHeight = 12;\r\n        _this.maxWidth = 500;\r\n        if (configuration) {\r\n            _this.content = configuration.content ? configuration.content : '';\r\n        }\r\n        return _this;\r\n    }\r\n    Text.prototype.wrapText = function () {\r\n        var x = this.position.x;\r\n        var y = this.position.y;\r\n        var words = this.content.split(' ');\r\n        var line = '';\r\n        for (var n = 0; n < words.length; n++) {\r\n            var testLine = line + words[n] + ' ';\r\n            var metrics = this.context.measureText(testLine);\r\n            var testWidth = metrics.width;\r\n            if (testWidth > this.maxWidth && n > 0) {\r\n                this.context.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += this.lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.context.fillText(line, x, y);\r\n    };\r\n    Text.prototype.render = function () {\r\n        this.context.fillStyle = this.color;\r\n        this.context.font = this.weight + \" \" + this.size + \"px \" + this.family;\r\n        this.context.textAlign = this.textAlign;\r\n        this.context.textBaseline = this.textBaseline;\r\n        if (this.stroke) {\r\n            this.context.strokeText(this.content, this.position.x, this.position.y);\r\n        }\r\n        this.context.fillText(this.content, this.position.x, this.position.y);\r\n    };\r\n    return Text;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Text;\r\n","map":{"version":3,"file":"Text.js","sourceRoot":"","sources":["node_modules\\dibujo\\src\\graphics\\Text.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sDAA+B;AAE/B;IAAmB,wBAAO;IAMxB,cAAY,aAAkB;QAA9B,YACE,kBAAM,aAAa,CAAC,SAIrB;QATM,gBAAU,GAAW,EAAE,CAAA;QACvB,gBAAU,GAAW,EAAE,CAAA;QACvB,cAAQ,GAAW,GAAG,CAAA;QAI3B,IAAI,aAAa,EAAE;YACjB,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAA;SAClE;;IACH,CAAC;IAED,uBAAQ,GAAR;QACE,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA;QACvB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,IAAI,IAAI,GAAG,EAAE,CAAA;QAEb,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,QAAQ,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;YACpC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;YAChD,IAAI,SAAS,GAAG,OAAO,CAAC,KAAK,CAAA;YAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;gBACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBACjC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBACrB,CAAC,IAAI,IAAI,CAAC,UAAU,CAAA;aACrB;iBACI;gBACH,IAAI,GAAG,QAAQ,CAAA;aAChB;SACF;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnC,CAAC;IAED,qBAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAA;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAM,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,IAAI,WAAM,IAAI,CAAC,MAAQ,CAAA;QAClE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;QACvC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QAC7C,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;SACxE;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IACvE,CAAC;IACH,WAAC;AAAD,CAAC,AA7CD,CAAmB,oBAAO,GA6CzB;AAED,qBAAe,IAAI,CAAA","sourcesContent":["import Graphic from './Graphic'\r\n\r\nclass Text extends Graphic {\r\n  public content: string\r\n  public fontConfig: string = ''\r\n  public lineHeight: number = 12\r\n  public maxWidth: number = 500\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.content = configuration.content ? configuration.content : ''\r\n    }\r\n  }\r\n\r\n  wrapText() {\r\n    let x = this.position.x\r\n    let y = this.position.y\r\n    var words = this.content.split(' ')\r\n    var line = ''\r\n  \r\n    for(var n = 0; n < words.length; n++) {\r\n      var testLine = line + words[n] + ' '\r\n      var metrics = this.context.measureText(testLine)\r\n      var testWidth = metrics.width\r\n      if (testWidth > this.maxWidth && n > 0) {\r\n        this.context.fillText(line, x, y)\r\n        line = words[n] + ' '\r\n        y += this.lineHeight\r\n      }\r\n      else {\r\n        line = testLine\r\n      }\r\n    }\r\n    this.context.fillText(line, x, y)\r\n  }\r\n\r\n  render(): void {\r\n    this.context.fillStyle = this.color\r\n    this.context.font = `${this.weight} ${this.size}px ${this.family}`\r\n    this.context.textAlign = this.textAlign\r\n    this.context.textBaseline = this.textBaseline\r\n    if (this.stroke) {\r\n      this.context.strokeText(this.content, this.position.x, this.position.y)\r\n    }\r\n    this.context.fillText(this.content, this.position.x, this.position.y)\r\n  }\r\n}\r\n\r\nexport default Text\r\n"]}},"hash":"7b4b7f1e9bdf37555441eae176bb2c62","cacheData":{"env":{}},"id":58}