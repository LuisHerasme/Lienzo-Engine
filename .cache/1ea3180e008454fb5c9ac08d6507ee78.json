{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\tsconfig.json","includedInParent":true,"mtime":1522616336000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\package.json","includedInParent":true,"mtime":1531328541070},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790},{"name":"./Camera","loc":{"line":6,"column":39},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Scene.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Camera.ts"},{"name":"./Media/Picture","loc":{"line":7,"column":40},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Scene.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Media\\Picture.ts"},{"name":"./Media/Video","loc":{"line":8,"column":38},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Scene.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\Media\\Video.ts"}],"generated":{"js":"\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar Camera_1 = __importDefault(require(\"./Camera\"));\r\nvar Picture_1 = __importDefault(require(\"./Media/Picture\"));\r\nvar Video_1 = __importDefault(require(\"./Media/Video\"));\r\n/**\r\n * This is the detail about the constructor\r\n * @class This is the detail about the class\r\n * @memberOf namespace\r\n * @param {Render} renderer The first argument\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    function Scene(renderer) {\r\n        this.backgroundColor = 'black';\r\n        this.childs = [];\r\n        this.frameRate = 0;\r\n        this.ready = false;\r\n        this.renderer = renderer;\r\n        this.context = this.renderer.context;\r\n        this.camera = new Camera_1[\"default\"](this.context);\r\n    }\r\n    Scene.prototype.dataLoaded = function () {\r\n        // Gets all the pictures and videos from the scene.\r\n        var elements = this.childs.filter(function (child) {\r\n            if (child instanceof Picture_1[\"default\"])\r\n                return true;\r\n            if (child instanceof Video_1[\"default\"])\r\n                return true;\r\n            return false;\r\n        });\r\n        // If there is an image that is not loaded returns false\r\n        return !elements.some(function (element) { return !element.ready; });\r\n    };\r\n    /**\r\n     * This method adds one element to the scene\r\n     * @param {Graphic} element any graphic object\r\n     * @returns {void}\r\n     */\r\n    Scene.prototype.add = function (element) {\r\n        element.context = this.context;\r\n        this.childs.push(element);\r\n        this.organizeByZindex();\r\n    };\r\n    /**\r\n     * Removes an element from the scene\r\n     * @param {Graphic} element any graphic object\r\n     * @returns {void}\r\n     */\r\n    Scene.prototype.remove = function (element) {\r\n        var index = this.childs.indexOf(element);\r\n        if (index >= 0) {\r\n            this.childs.splice(index, 1);\r\n        }\r\n    };\r\n    /**\r\n     * This method clears the screen\r\n     */\r\n    Scene.prototype.clearScreen = function () {\r\n        this.context.save();\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n        this.context.fillStyle = this.backgroundColor;\r\n        this.context.fillRect(0, 0, window.innerWidth, window.innerHeight);\r\n        this.context.restore();\r\n    };\r\n    /**\r\n     * This method enables or disables the image smoothing\r\n     * @param {boolean} state enable or disable\r\n     */\r\n    Scene.prototype.smoth = function (state) {\r\n        if (this.context.imageSmoothingEnabled) {\r\n            this.context.imageSmoothingEnabled = state;\r\n        }\r\n        else if (this.context.mozImageSmoothingEnabled) {\r\n            this.context.mozImageSmoothingEnabled = state;\r\n        }\r\n        else if (this.context.webkitImageSmoothingEnabled) {\r\n            this.context.webkitImageSmoothingEnabled = state;\r\n        }\r\n    };\r\n    /**\r\n     * This method organizes the childs of the scene by their property z_indez\r\n     */\r\n    Scene.prototype.organizeByZindex = function () {\r\n        this.childs.sort(function (a, b) { return a.z_index - b.z_index; });\r\n    };\r\n    /**\r\n     * This method renders the screne ultil you call stopAutoRender\r\n     */\r\n    Scene.prototype.autoRender = function (func) {\r\n        var _this = this;\r\n        this.interval = setInterval(function () {\r\n            if (func)\r\n                func();\r\n            _this.render();\r\n        }, this.frameRate);\r\n    };\r\n    /**\r\n     * This method stops autoRender\r\n     */\r\n    Scene.prototype.stopAutoRender = function () {\r\n        clearInterval(this.interval);\r\n    };\r\n    /**\r\n     * This method renders the screne\r\n     */\r\n    Scene.prototype.render = function () {\r\n        if (!this.dataLoaded()) {\r\n            console.info('Waiting for images to load...');\r\n            setTimeout(this.render.bind(this), 100);\r\n        }\r\n        else {\r\n            this.clearScreen();\r\n            this.childs.forEach(function (child) { return child.render(); });\r\n            this.camera.update();\r\n        }\r\n    };\r\n    return Scene;\r\n}());\r\nexports[\"default\"] = Scene;\r\n","map":{"version":3,"file":"Scene.js","sourceRoot":"","sources":["node_modules\\dibujo\\src\\Scene.ts"],"names":[],"mappings":"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","sourcesContent":["import Render from './Render'\r\nimport Graphic from './graphics/Graphic'\r\nimport Camera from './Camera'\r\nimport Picture from './Media/Picture'\r\nimport Video from './Media/Video'\r\n\r\n/**\r\n * This is the detail about the constructor\r\n * @class This is the detail about the class\r\n * @memberOf namespace\r\n * @param {Render} renderer The first argument\r\n */\r\nclass Scene {\r\n\r\n  public context: CanvasRenderingContext2D\r\n  public backgroundColor: string = 'black'\r\n  public camera: Camera\r\n  public renderer: Render\r\n  public childs: Array<any> = []\r\n  public frameRate: number = 0\r\n  public ready: boolean = false\r\n  public interval: any\r\n\r\n  constructor(renderer: Render) {\r\n    this.renderer = renderer\r\n    this.context = this.renderer.context\r\n    this.camera = new Camera(this.context)\r\n  }\r\n\r\n  dataLoaded(): boolean {\r\n    // Gets all the pictures and videos from the scene.\r\n    const elements = this.childs.filter((child) => {\r\n      if (child instanceof Picture) return true\r\n      if (child instanceof Video) return true\r\n      return false\r\n    })\r\n\r\n    // If there is an image that is not loaded returns false\r\n    return !elements.some((element) => !element.ready)\r\n  }\r\n\r\n  /**\r\n   * This method adds one element to the scene\r\n   * @param {Graphic} element any graphic object\r\n   * @returns {void}\r\n   */\r\n  add(element: any): void {\r\n    element.context = this.context\r\n    this.childs.push(element)\r\n    this.organizeByZindex()\r\n  }\r\n\r\n  /**\r\n   * Removes an element from the scene\r\n   * @param {Graphic} element any graphic object\r\n   * @returns {void}\r\n   */\r\n  remove(element: Graphic): void {\r\n    let index = this.childs.indexOf(element)\r\n    if (index >= 0) {\r\n      this.childs.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method clears the screen\r\n   */\r\n  clearScreen(): void {\r\n    this.context.save()\r\n    this.context.setTransform(1, 0, 0, 1, 0, 0)\r\n    this.context.fillStyle = this.backgroundColor\r\n    this.context.fillRect(0, 0, window.innerWidth, window.innerHeight)\r\n    this.context.restore()\r\n  }\r\n\r\n  /**\r\n   * This method enables or disables the image smoothing\r\n   * @param {boolean} state enable or disable\r\n   */\r\n  smoth(state: boolean): void {\r\n    if (this.context.imageSmoothingEnabled) {\r\n      this.context.imageSmoothingEnabled = state\r\n    } else if (this.context.mozImageSmoothingEnabled) {\r\n      this.context.mozImageSmoothingEnabled = state\r\n    } else if (this.context.webkitImageSmoothingEnabled) {\r\n      this.context.webkitImageSmoothingEnabled = state\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method organizes the childs of the scene by their property z_indez\r\n   */\r\n  organizeByZindex(): void {\r\n    this.childs.sort((a, b) => a.z_index - b.z_index)\r\n  }\r\n\r\n  /**\r\n   * This method renders the screne ultil you call stopAutoRender\r\n   */\r\n  autoRender(func?: Function): void {\r\n    this.interval = setInterval(() => {\r\n      if (func) func()\r\n      this.render()\r\n    }, this.frameRate)\r\n  }\r\n\r\n  /**\r\n   * This method stops autoRender\r\n   */\r\n  stopAutoRender(): void {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  /**\r\n   * This method renders the screne\r\n   */\r\n  render(): void {\r\n    if (!this.dataLoaded()) {\r\n      console.info('Waiting for images to load...')\r\n      setTimeout(this.render.bind(this), 100)\r\n    } else {\r\n      this.clearScreen()\r\n      this.childs.forEach(child => child.render())\r\n      this.camera.update()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scene\r\n"]}},"hash":"ea943193f22984547acee4fd08503594","cacheData":{"env":{}},"id":34}