{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\tsconfig.json","includedInParent":true,"mtime":1521243480000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\package.json","includedInParent":true,"mtime":1531327400610},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790}],"generated":{"js":"\"use strict\";\r\nexports.__esModule = true;\r\nvar Collider = /** @class */ (function () {\r\n    function Collider(position, size) {\r\n        this.position = position;\r\n        this.size = size;\r\n    }\r\n    Collider.prototype.collidesWith = function (other) {\r\n        return (this.position.x < other.position.x + other.size.x &&\r\n            this.position.x + this.size.x > other.position.x &&\r\n            this.position.y < other.position.y + other.size.y &&\r\n            this.size.y + this.position.y > other.position.y);\r\n    };\r\n    return Collider;\r\n}());\r\nexports[\"default\"] = Collider;\r\n/*\r\nfloat w = 0.5 * (A.width() + B.width());\r\nfloat h = 0.5 * (A.height() + B.height());\r\nfloat dx = A.centerX() - B.centerX();\r\nfloat dy = A.centerY() - B.centerY();\r\n\r\nif (abs(dx) <= w && abs(dy) <= h)\r\n{\r\n    // collision!\r\n    float wy = w * dy;\r\n    float hx = h * dx;\r\n\r\n    if (wy > hx)\r\n        if (wy > -hx)\r\n            //collision at the top\r\n        else\r\n            // on the left\r\n    else\r\n        if (wy > -hx)\r\n            // on the right\r\n        else\r\n            // at the bottom\r\n}\r\n*/ \r\n","map":{"version":3,"file":"Collider.js","sourceRoot":"","sources":["node_modules\\fisica\\src\\Rect\\Collider.ts"],"names":[],"mappings":";;AAKA;IAUI,kBAAY,QAAkB,EAAE,IAAc;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;IACpB,CAAC;IAED,+BAAY,GAAZ,UAAa,KAA2B;QACpC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IACzD,CAAC;IAaL,eAAC;AAAD,CAAC,AAjCD,IAiCC;AAED,qBAAe,QAAQ,CAAA;AACvB;;;;;;;;;;;;;;;;;;;;;;;EAuBE","sourcesContent":["\r\nimport { Vector2D } from 'vector_class'\r\nimport RigidBody from './RigidBody'\r\nimport World from '../World'\r\n\r\nclass Collider {\r\n\r\n    public position: Vector2D\r\n    public size: Vector2D\r\n    public onCollision: Function\r\n    public onTriggerEnter: Function\r\n    public onTriggerStay: Function\r\n    public onTriggerExit: Function\r\n    public World: World\r\n\r\n    constructor(position: Vector2D, size: Vector2D) {\r\n        this.position = position\r\n        this.size = size\r\n    }\r\n\r\n    collidesWith(other: Collider | RigidBody): boolean {\r\n        return (this.position.x < other.position.x + other.size.x &&\r\n            this.position.x + this.size.x > other.position.x &&\r\n            this.position.y < other.position.y + other.size.y &&\r\n            this.size.y + this.position.y > other.position.y)\r\n    }\r\n/*\r\n    translate(movement: Vector2D) {\r\n        this.World.particles.forEach((particle) => {\r\n            \r\n            if (this.collidesWith(particle)) {\r\n                this.position.add(direction)\r\n            }\r\n        })\r\n        \r\n        this.position.add(movement)\r\n    }\r\n*/\r\n}\r\n\r\nexport default Collider\r\n/*\r\nfloat w = 0.5 * (A.width() + B.width());\r\nfloat h = 0.5 * (A.height() + B.height());\r\nfloat dx = A.centerX() - B.centerX();\r\nfloat dy = A.centerY() - B.centerY();\r\n\r\nif (abs(dx) <= w && abs(dy) <= h)\r\n{\r\n    // collision! \r\n    float wy = w * dy;\r\n    float hx = h * dx;\r\n\r\n    if (wy > hx)\r\n        if (wy > -hx)\r\n            //collision at the top \r\n        else\r\n            // on the left \r\n    else\r\n        if (wy > -hx)\r\n            // on the right \r\n        else\r\n            // at the bottom \r\n}\r\n*/"]}},"hash":"906492b3d40b25ea355ea12f3c71df4e","cacheData":{"env":{}},"id":84}