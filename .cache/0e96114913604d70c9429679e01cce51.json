{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\tsconfig.json","includedInParent":true,"mtime":1522616336000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\package.json","includedInParent":true,"mtime":1531328541070},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790},{"name":"./Graphic","loc":{"line":16,"column":40},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Ellipse.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Graphic.ts"},{"name":"vector_class","loc":{"line":17,"column":29},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Ellipse.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\vector_class\\src\\index.ts"},{"name":"../LinearGradient","loc":{"line":18,"column":47},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Ellipse.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\LinearGradient.ts"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar Graphic_1 = __importDefault(require(\"./Graphic\"));\r\nvar vector_class_1 = require(\"vector_class\");\r\nvar LinearGradient_1 = __importDefault(require(\"../LinearGradient\"));\r\nvar Ellipse = /** @class */ (function (_super) {\r\n    __extends(Ellipse, _super);\r\n    function Ellipse(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        _this.radiusX = 10;\r\n        _this.radiusY = 5;\r\n        if (configuration) {\r\n            _this.lineWidth = configuration.lineWidth ? configuration.lineWidth : _this.lineWidth;\r\n            _this.lineColor = configuration.lineColor ? configuration.lineColor : _this.lineColor;\r\n            _this.radiusX = configuration.radiusX ? configuration.radiusX : _this.radiusX;\r\n            _this.radiusY = configuration.radiusY ? configuration.radiusY : _this.radiusY;\r\n            _this.stroke = configuration.stroke ? configuration.stroke : _this.stroke;\r\n            _this.color = configuration.color ? configuration.color : _this.color;\r\n            _this.fill = configuration.fill ? configuration.fill : _this.fill;\r\n            if (configuration.linearGradient) {\r\n                _this.linearGradient = configuration.linearGradient;\r\n                // this.render = this.renderGradient\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Ellipse.prototype.renderGradient = function () {\r\n        this.color = new LinearGradient_1[\"default\"]({\r\n            context: this.context,\r\n            colors: this.linearGradient,\r\n            size: new vector_class_1.Vector2D(this.position.x, this.position.y + this.radiusY),\r\n            position: new vector_class_1.Vector2D(this.position.x, this.position.y - this.radiusY / 2)\r\n        }).gradient;\r\n        if (this.fill) {\r\n            this.context.beginPath();\r\n            this.context.fillStyle = this.color;\r\n            this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI);\r\n            this.context.fill();\r\n        }\r\n        if (this.stroke) {\r\n            this.context.lineWidth = this.lineWidth;\r\n            this.context.strokeStyle = this.lineColor;\r\n            this.context.stroke();\r\n        }\r\n    };\r\n    Ellipse.prototype.render = function () {\r\n        this.renderGradient();\r\n        /*\r\n        if (this.fill) {\r\n          this.context.beginPath()\r\n          this.context.fillStyle = this.color\r\n          this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n          this.context.fill()\r\n        }\r\n        if (this.stroke) {\r\n          this.context.lineWidth = this.lineWidth\r\n          this.context.strokeStyle = this.lineColor\r\n          this.context.stroke()\r\n        }\r\n        */\r\n    };\r\n    return Ellipse;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Ellipse;\r\n","map":{"version":3,"file":"Ellipse.js","sourceRoot":"","sources":["node_modules\\dibujo\\src\\graphics\\Ellipse.ts"],"names":[],"mappings":"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","sourcesContent":["import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\nimport LinearGradient from '../LinearGradient'\r\n\r\nclass Ellipse extends Graphic {\r\n  public radiusX: number = 10\r\n  public radiusY: number = 5\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.lineWidth = configuration.lineWidth ? configuration.lineWidth : this.lineWidth\r\n      this.lineColor = configuration.lineColor ? configuration.lineColor : this.lineColor\r\n      this.radiusX = configuration.radiusX ? configuration.radiusX : this.radiusX\r\n      this.radiusY = configuration.radiusY ? configuration.radiusY : this.radiusY\r\n      this.stroke = configuration.stroke ? configuration.stroke : this.stroke\r\n      this.color = configuration.color ? configuration.color : this.color\r\n      this.fill = configuration.fill ? configuration.fill : this.fill\r\n      if (configuration.linearGradient) {\r\n        this.linearGradient = configuration.linearGradient\r\n        // this.render = this.renderGradient\r\n      }\r\n    }\r\n  }\r\n\r\n  renderGradient () {\r\n    this.color = new LinearGradient({\r\n      context: this.context,\r\n      colors: this.linearGradient,\r\n      size: new Vector2D(this.position.x, this.position.y + this.radiusY),\r\n      position: new Vector2D(this.position.x, this.position.y - this.radiusY / 2)\r\n    }).gradient\r\n\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this.renderGradient()\r\n    /*\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n    */\r\n  }\r\n}\r\n\r\nexport default Ellipse\r\n"]}},"hash":"f02c22ad5f6dca6a1fa9c8b38716f7ed","cacheData":{"env":{}},"id":41}