{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\tsconfig.json","includedInParent":true,"mtime":1522616336000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\package.json","includedInParent":true,"mtime":1531328541070},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790},{"name":"./Graphic","loc":{"line":16,"column":40},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Poligon.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Graphic.ts"},{"name":"vector_class","loc":{"line":17,"column":29},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\dibujo\\src\\graphics\\Poligon.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\vector_class\\src\\index.ts"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar Graphic_1 = __importDefault(require(\"./Graphic\"));\r\nvar vector_class_1 = require(\"vector_class\");\r\nvar Poligon = /** @class */ (function (_super) {\r\n    __extends(Poligon, _super);\r\n    function Poligon(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        if (configuration.color)\r\n            _this.color = configuration.color;\r\n        if (configuration.stroke)\r\n            _this.stroke = configuration.stroke;\r\n        if (configuration.cords)\r\n            _this.cords = configuration.cords.slice(1, configuration.cords.length);\r\n        if (configuration.fill)\r\n            _this.fill = configuration.fill;\r\n        _this.position = configuration.cords.slice[0];\r\n        _this.cords.filter(function (pnt) {\r\n            return new vector_class_1.Vector2D(pnt.x - _this.position.x, pnt.y - _this.position.y);\r\n        });\r\n        return _this;\r\n    }\r\n    Poligon.prototype.render = function () {\r\n        this.context.beginPath();\r\n        this.context.strokeStyle = this.lineColor;\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.fillStyle = this.color;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.moveTo(this.cords[0].x, this.cords[0].y);\r\n        for (var i = 0; i < this.cords.length; i++) {\r\n            this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y);\r\n        }\r\n        this.context.closePath();\r\n        this.context.fill();\r\n        if (this.stroke)\r\n            this.context.stroke;\r\n    };\r\n    return Poligon;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Poligon;\r\n","map":{"version":3,"file":"Poligon.js","sourceRoot":"","sources":["node_modules\\dibujo\\src\\graphics\\Poligon.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sDAA+B;AAC/B,6CAAuC;AAEvC;IAAsB,2BAAO;IAG3B,iBAAY,aAAkB;QAA9B,YACE,kBAAM,aAAa,CAAC,SASrB;QARC,IAAI,aAAa,CAAC,KAAK;YAAE,KAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAA;QACzD,IAAI,aAAa,CAAC,MAAM;YAAE,KAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAA;QAC5D,IAAI,aAAa,CAAC,KAAK;YAAE,KAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAC9F,IAAI,aAAa,CAAC,IAAI;YAAE,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAA;QACtD,KAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAC5C,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,GAAG;YACpB,OAAO,IAAI,uBAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACvE,CAAC,CAAC,CAAA;;IACJ,CAAC;IAED,wBAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAA;QACxB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAA;QACzC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;QACnC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAA;QACnC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QACrC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;SAC1F;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAA;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAA;QACnB,IAAI,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;IACtC,CAAC;IACH,cAAC;AAAD,CAAC,AA9BD,CAAsB,oBAAO,GA8B5B;AAED,qBAAe,OAAO,CAAA","sourcesContent":["import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Poligon extends Graphic {\r\n  public cords: Array<Vector2D>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration.color) this.color = configuration.color\r\n    if (configuration.stroke) this.stroke = configuration.stroke\r\n    if (configuration.cords) this.cords = configuration.cords.slice(1, configuration.cords.length)\r\n    if (configuration.fill) this.fill = configuration.fill\r\n    this.position = configuration.cords.slice[0]\r\n    this.cords.filter((pnt) => {\r\n      return new Vector2D(pnt.x - this.position.x, pnt.y - this.position.y)\r\n    })\r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineCap = this.lineCap\r\n    this.context.fillStyle = this.color\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.moveTo(this.cords[0].x, this.cords[0].y)\r\n    for (var i = 0; i < this.cords.length; i++) {\r\n      this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y)\r\n    }\r\n\r\n    this.context.closePath()\r\n    this.context.fill()\r\n    if (this.stroke) this.context.stroke\r\n  }\r\n}\r\n\r\nexport default Poligon\r\n"]}},"hash":"f74066dc68694277d351e162387a5d96","cacheData":{"env":{}},"id":42}