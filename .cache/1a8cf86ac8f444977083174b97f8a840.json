{"dependencies":[{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\tsconfig.json","includedInParent":true,"mtime":1521243480000},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\package.json","includedInParent":true,"mtime":1531327400610},{"name":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\package.json","includedInParent":true,"mtime":1531329788790},{"name":"vector_class","loc":{"line":16,"column":29},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\Circle\\RigidBody.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\vector_class\\src\\index.ts"},{"name":"./../RigidBody","loc":{"line":17,"column":42},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\Circle\\RigidBody.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\RigidBody.ts"},{"name":"./Collider","loc":{"line":18,"column":41},"parent":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\Circle\\RigidBody.ts","resolved":"C:\\Users\\Luis Herasme\\Desktop\\LienzoEngine\\node_modules\\fisica\\src\\Circle\\Collider.ts"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nexports.__esModule = true;\r\nvar vector_class_1 = require(\"vector_class\");\r\nvar RigidBody_1 = __importDefault(require(\"./../RigidBody\"));\r\nvar Collider_1 = __importDefault(require(\"./Collider\"));\r\nvar RigidBody = /** @class */ (function (_super) {\r\n    __extends(RigidBody, _super);\r\n    function RigidBody(position, radius, restitution) {\r\n        if (position === void 0) { position = new vector_class_1.Vector2D(0, 0); }\r\n        if (radius === void 0) { radius = 5; }\r\n        if (restitution === void 0) { restitution = 1; }\r\n        var _this = _super.call(this, position, restitution) || this;\r\n        _this.radius = radius;\r\n        _this.mass = Math.PI * Math.pow(_this.radius, 2);\r\n        return _this;\r\n    }\r\n    RigidBody.prototype.collidesWith = function (other) {\r\n        var distance = vector_class_1.Vector2D.distance(this.position, other.position);\r\n        if (distance.mag() < this.radius + other.radius) {\r\n            var direction = vector_class_1.Vector2D.normalize(distance);\r\n            direction.mult(this.radius + other.radius);\r\n            this.position.add(direction);\r\n            if (this.onCollision) {\r\n                this.onCollision(other);\r\n            }\r\n            if (other.onCollision) {\r\n                other.onCollision(this);\r\n            }\r\n            if (other instanceof RigidBody) {\r\n                this.inelasticCollision(other);\r\n            }\r\n            if (other instanceof Collider_1[\"default\"]) {\r\n                this.velocity.inverse();\r\n                this.velocity.mult(this.restitution);\r\n            }\r\n        }\r\n    };\r\n    return RigidBody;\r\n}(RigidBody_1[\"default\"]));\r\nexports[\"default\"] = RigidBody;\r\n","map":{"version":3,"file":"RigidBody.js","sourceRoot":"","sources":["node_modules\\fisica\\src\\Circle\\RigidBody.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,6CAAuC;AACvC,6DAAuC;AACvC,wDAAiC;AAEjC;IAAwB,6BAAU;IAQhC,mBAAY,QAA6B,EAAE,MAAU,EAAE,WAAe;QAA1D,yBAAA,EAAA,eAAe,uBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QAAE,uBAAA,EAAA,UAAU;QAAE,4BAAA,EAAA,eAAe;QAAtE,YACE,kBAAM,QAAQ,EAAE,WAAW,CAAC,SAG7B;QAFC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;;IAChD,CAAC;IAED,gCAAY,GAAZ,UAAa,KAA2B;QACtC,IAAM,QAAQ,GAAG,uBAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAA;QAEjE,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE;YAC/C,IAAM,SAAS,GAAG,uBAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAC9C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;YAC1C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;YAE5B,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;aACxB;YACD,IAAI,KAAK,CAAC,WAAW,EAAE;gBACrB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;aACxB;YAED,IAAI,KAAK,YAAY,SAAS,EAAE;gBAC9B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;aAC/B;YAED,IAAI,KAAK,YAAY,qBAAQ,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAA;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;aACrC;SAEF;IACH,CAAC;IACH,gBAAC;AAAD,CAAC,AAxCD,CAAwB,sBAAU,GAwCjC;AAED,qBAAe,SAAS,CAAA","sourcesContent":["\r\nimport { Vector2D } from 'vector_class'\r\nimport _RigidBody from './../RigidBody'\r\nimport Collider from './Collider'\r\n\r\nclass RigidBody extends _RigidBody {\r\n\r\n  public radius: number\r\n  public onCollision: Function\r\n  public onTriggerEnter: Function\r\n  public onTriggerStay: Function\r\n  public onTriggerExit: Function\r\n\r\n  constructor(position = new Vector2D(0, 0), radius = 5, restitution = 1) {\r\n    super(position, restitution)\r\n    this.radius = radius\r\n    this.mass = Math.PI * Math.pow(this.radius, 2)\r\n  }\r\n\r\n  collidesWith(other: RigidBody | Collider) {\r\n    const distance = Vector2D.distance(this.position, other.position)\r\n\r\n    if (distance.mag() < this.radius + other.radius) {\r\n      const direction = Vector2D.normalize(distance)\r\n      direction.mult(this.radius + other.radius)\r\n      this.position.add(direction)\r\n\r\n      if (this.onCollision) {\r\n        this.onCollision(other)\r\n      }\r\n      if (other.onCollision) {\r\n        other.onCollision(this)\r\n      }\r\n\r\n      if (other instanceof RigidBody) {\r\n        this.inelasticCollision(other)\r\n      }\r\n\r\n      if (other instanceof Collider) {\r\n        this.velocity.inverse()\r\n        this.velocity.mult(this.restitution)\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default RigidBody\r\n"]}},"hash":"145ea0904c192e4d127b846a37b19ac3","cacheData":{"env":{}},"id":81}