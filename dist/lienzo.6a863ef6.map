{"version":3,"sources":["node_modules\\dibujo\\dist\\bundle.js","src\\components\\ScriptComponent.ts","src\\components\\AnimationComponent.ts","src\\components\\IdentifierComponent.ts","node_modules\\vector_class\\dist\\bundle.js","src\\components\\TransformComponent.ts","src\\components\\SpriteComponent.ts","node_modules\\fisica\\dist\\bundle.js","src\\components\\ColliderComponent.ts","src\\components\\components.ts","src\\Components\\TransformComponent.ts","src\\Components\\IdentifierComponent.ts","src\\Components\\ScriptComponent.ts","src\\Managers\\GameObject.ts","src\\loader.ts","src\\Managers\\GameScene.ts","src\\Managers\\GameManager.ts","src\\lienzo.ts"],"names":[],"mappingsehhEA,IAAA,WAAA,gBAAA,QAAA,WAAA,CAAA,CAAA;AACA,IAAA,WAAA,QAAA,QAAA,CAAA;AACA,IAAA,SAAA,aAAA,QAAA,QAAA,CAAA,CAAA;AAGA,IAAA,YAAA,aAAA,YAAA;AAQE,aAAA,SAAA,CAAY,aAAZ,EAA0B;AAJlB,aAAA,MAAA,GAAkB,KAAlB;AACA,aAAA,UAAA,GAAqB,SAArB;AACA,aAAA,WAAA,GAAiC,EAAjC;AAGN,aAAK,KAAL,GAAa,IAAI,OAAO,IAAP,CAAY,KAAhB,CAAsB,OAAO,OAA7B,CAAb;AACA,YAAI,MAAJ,EAAY;AACV,gBAAI,OAAO,UAAX,EAAuB;AACrB,qBAAK,UAAL,GAAkB,OAAO,UAAzB;AACD;AACD,gBAAI,OAAO,OAAX,EAAoB;AAClB,qBAAK,KAAL,GAAa,IAAI,SAAA,KAAJ,CAAU,OAAO,OAAjB,CAAb;AACD;AACD,gBAAI,OAAO,MAAX,EAAmB;AACjB,qBAAK,KAAL,CAAW,SAAX,CAAqB,OAAO,MAA5B;AACD;AACD,gBAAI,OAAO,WAAX,EAAwB;AACtB,qBAAK,GAAL,CAAS,OAAO,WAAhB;AACD;AACF;AACF;AAED,cAAA,SAAA,CAAA,GAAA,GAAA,UAAI,WAAJ,EAAe;AACb,aAAuB,IAAA,KAAA,CAAA,EAAA,gBAAA,WAAvB,EAAuB,KAAA,cAAA,MAAvB,EAAuB,IAAvB,EAAoC;AAA/B,gBAAI,aAAU,cAAA,EAAA,CAAd;AACH,gBAAM,SAAS,SAAA,SAAA,EAAK,UAAL,CAAf;AACA,iBAAK,aAAL,CAAmB,MAAnB;AACD;AACF,KALD;AAOA,cAAA,SAAA,CAAA,aAAA,GAAA,UAAc,UAAd,EAAoC;AAClC,mBAAW,KAAX,GAAmB,IAAnB;AAEA,aAAK,IAAI,SAAT,IAAsB,WAAW,UAAjC,EAA6C;AAC3C,gBAAM,QAAQ,WAAW,UAAX,CAAsB,SAAtB,CAAd;AACA,gBAAI,MAAM,IAAV,EAAgB;AACd,sBAAM,IAAN,CAAW,UAAX,EAAuB,IAAvB;AACD;AACF;AAED,mBAAW,GAAX,CAAe,MAAf;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,UAAtB;AACD,KAZD;AAcA,cAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAuB,KAAvB,EAAoC;AAClC,YAAI,QAAQ,EAAZ;AACA,aAAuB,IAAA,KAAA,CAAA,EAAA,KAAA,KAAK,WAA5B,EAAuB,KAAA,GAAA,MAAvB,EAAuB,IAAvB,EAAyC;AAApC,gBAAI,aAAU,GAAA,EAAA,CAAd;AACH,gBAAI,WAAW,UAAf,EAA2B;AACzB,oBAAI,WAAW,UAAX,CAAsB,QAAtB,MAAoC,KAAxC,EAA+C;AAC7C,0BAAM,IAAN,CAAW,UAAX;AACD;AACF;AACF;AACD,eAAO,KAAP;AACD,KAVD;AAYA,cAAA,SAAA,CAAA,MAAA,GAAA,UAAO,UAAP,EAA6B;AAC3B,aAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,UAAA,KAAA,EAAK;AAC9C,mBAAO,WAAW,UAAX,CAAsB,EAAtB,KAA6B,MAAM,UAAN,CAAiB,EAArD;AACD,SAFkB,CAAnB;AAGD,KAJD;AAMA,cAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAoB,MAApB,EAAuC;AACrC,aAAuB,IAAA,KAAA,CAAA,EAAA,KAAA,KAAK,WAA5B,EAAuB,KAAA,GAAA,MAAvB,EAAuB,IAAvB,EAAyC;AAApC,gBAAI,aAAU,GAAA,EAAA,CAAd;AACH,uBAAW,GAAX,CAAe,MAAf,EAAuB,MAAvB;AACD;AACF,KAJD;AAMA,cAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,aAAK,KAAL,CAAW,KAAX,CAAiB,KAAK,UAAtB;AACA,aAAK,KAAL,CAAW,MAAX;AACA,aAAK,KAAL,CAAW,MAAX;AACA,aAAK,GAAL,CAAS,QAAT;AACD,KALD;AAMF,WAAA,SAAA;AA7EA,CAAA,EAAA;AA+EA,QAAA,SAAA,IAAe,SAAf;;;;;;;;ACpFA,IAAA,WAAA,QAAA,QAAA,CAAA;AACA,IAAA,cAAA,gBAAA,QAAA,aAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA;;;;;AAKA,IAAA,cAAA,aAAA,YAAA;AAKE,aAAA,WAAA,CAAY,aAAZ,EAAyB;AACvB,YAAM,KAAK,cAAc,EAAd,GAAmB,cAAc,EAAjC,GAAsC,SAAjD;AACA,YAAM,QAAQ,cAAc,KAAd,GAAsB,cAAc,KAApC,GAA4C,SAA1D;AACA,YAAM,SAAS,cAAc,MAAd,GAAuB,cAAc,MAArC,GAA8C,SAA7D;AAEA,aAAK,MAAL,GAAc,IAAI,SAAA,MAAJ,CAAW,EAAX,EAAe,KAAf,EAAsB,MAAtB,CAAd;AACA,aAAK,SAAL,GAAiB,IAAI,YAAA,SAAA,CAAJ,CAAc,KAAK,MAAnB,CAAjB;AACA,aAAK,UAAL;AACD;AAED,gBAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACE,YAAI,OAAO,EAAX;AAEA,oBAAY,YAAA;AACV,mBAAO,IAAP,CAAY,IAAZ,EAAkB,IAAlB,CAAuB,UAAC,GAAD,EAAI;AACzB,oBAAI,KAAK,GAAL,CAAJ,EAAe;AACb,wBAAI,CAAC,MAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,8BAAK,SAAL,CAAe,GAAf,CAAmB,UAAnB,EAA+B,CAAC,IAAD,CAA/B;AACD;AACD,2BAAO,IAAP;AACD;AACF,aAPD;AAQD,SATD,EASG,EATH;AAWA,iBAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAU,KAAV,EAAe;AACpD,gBAAI,CAAC,KAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,qBAAK,SAAL,CAAe,GAAf,CAAmB,iBAAnB,EAAsC,CAAC,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAD,CAAtC;AACA,qBAAK,SAAL,CAAe,YAAf,CAA4B,KAA5B,EAAmC,CAAC,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAD,CAAnC;AACD;AACF,SALD;AAOA,iBAAS,gBAAT,CAA0B,WAA1B,EAAuC,UAAU,KAAV,EAAe;AACpD,gBAAI,CAAC,KAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,qBAAK,SAAL,CAAe,GAAf,CAAmB,iBAAnB,EAAsC,CAAC,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAD,CAAtC;AACD;AACF,SAJD;AAMA,iBAAS,gBAAT,CAA0B,SAA1B,EAAqC,UAAU,KAAV,EAAe;AAClD,gBAAI,CAAC,KAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,qBAAK,SAAL,CAAe,GAAf,CAAmB,eAAnB,EAAoC,CAAC,IAAI,eAAA,QAAJ,CAAa,MAAM,OAAnB,EAA4B,MAAM,OAAlC,CAAD,CAApC;AACD;AACF,SAJD;AAMA,iBAAS,gBAAT,CAA0B,SAA1B,EAAqC,UAAU,KAAV,EAAe;AAClD,iBAAK,MAAM,GAAX,IAAkB,IAAlB;AACA,gBAAI,CAAC,KAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,qBAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,CAAC,MAAM,GAAP,CAA9B;AACD;AACF,SALD;AAOA,iBAAS,gBAAT,CAA0B,OAA1B,EAAmC,UAAU,KAAV,EAAe;AAChD,iBAAK,MAAM,GAAX,IAAkB,KAAlB;AACA,gBAAI,CAAC,KAAK,SAAL,CAAe,MAApB,EAA4B;AAC1B,qBAAK,SAAL,CAAe,GAAf,CAAmB,OAAnB,EAA4B,CAAC,MAAM,GAAP,CAA5B;AACD;AACF,SALD;AAMD,KA9CD;AA+CF,WAAA,WAAA;AA9DA,CAAA,EAAA;AAgEE;;;;;;;;;;;AAeF,SAAA,SAAA,CAAmB,OAAnB,EAAyC,KAAzC,EAAwD;AACtD,QAAM,cAAc,QAAQ,SAAR,CAAkB,KAAlB,CAAwB,WAA5C;AACA,SAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAA,UAAA,EAAU;AACjC,YAAI,WAAW,QAAf,EAAyB;AACvB,gBAAI,MAAM,CAAN,GAAU,WAAW,SAAX,CAAqB,QAArB,CAA8B,CAA9B,GAAkC,YAAY,CAAxD,IACF,MAAM,CAAN,GAAU,WAAW,SAAX,CAAqB,QAArB,CAA8B,CAA9B,GAAkC,YAAY,CAA9C,GAAkD,WAAW,QAAX,CAAoB,IAApB,CAAyB,CADnF,IAEF,MAAM,CAAN,GAAU,WAAW,SAAX,CAAqB,QAArB,CAA8B,CAA9B,GAAkC,YAAY,CAFtD,IAGF,MAAM,CAAN,GAAU,WAAW,SAAX,CAAqB,QAArB,CAA8B,CAA9B,GAAkC,YAAY,CAA9C,GAAkD,WAAW,QAAX,CAAoB,IAApB,CAAyB,CAHvF,EAG0F;AACxF,2BAAW,GAAX,CAAe,WAAf,EAA4B,KAA5B;AACD;AACF;AACF,KATD;AAUD;AAED,QAAA,SAAA,IAAe,WAAffpGA,IAAA,gBAAA,aAAA,YAAA;AAIE,aAAA,aAAA,CAAa,UAAb,EAAmC;AAH3B,aAAA,OAAA,GAAqB,EAArB;AAIN,aAAK,UAAL,GAAkB,UAAlB;AACD;AAED,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,OAAL,EAA2B;AACzB,aAAmB,IAAA,KAAA,CAAA,EAAA,YAAA,OAAnB,EAAmB,KAAA,UAAA,MAAnB,EAAmB,IAAnB,EAA4B;AAAvB,gBAAI,SAAM,UAAA,EAAA,CAAV;AACH,iBAAK,GAAL,CAAS,MAAT;AACD;AACF,KAJD;AAMA,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,MAAL,EAAW;AACT,aAAmB,IAAA,KAAA,CAAA,EAAA,KAAA,OAAO,IAAP,CAAY,MAAZ,CAAnB,EAAmB,KAAA,GAAA,MAAnB,EAAmB,IAAnB,EAAwC;AAAnC,gBAAI,SAAM,GAAA,EAAA,CAAV;AACH,gBAAI,CAAC,KAAK,OAAL,CAAa,MAAb,CAAL,EAA2B;AACzB,qBAAK,OAAL,CAAa,MAAb,IAAuB,EAAvB;AACD;AACD,iBAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,CAA0B,OAAO,MAAP,EAAe,IAAf,CAAoB,KAAK,UAAzB,CAA1B;AACD;AACF,KAPD;AASA,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,IAAL,EAAW,MAAX,EAAiB;AACf,YAAI,KAAK,OAAL,CAAa,IAAb,CAAJ,EAAwB;AACtB,iBAAmB,IAAA,KAAA,CAAA,EAAA,KAAA,KAAK,OAAL,CAAa,IAAb,CAAnB,EAAmB,KAAA,GAAA,MAAnB,EAAmB,IAAnB,EAAuC;AAAlC,oBAAI,SAAM,GAAA,EAAA,CAAV;AACH,uBAAM,KAAN,CAAM,KAAA,CAAN,EAAU,MAAV;AACD;AACF;AACF,KAND;AAOF,WAAA,aAAA;AA9BA,CAAA,EAAA;AAgCA,QAAA,SAAA,IAAe,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA,IAAA,WAAA,QAAA,QAAA,CAAA;AAGA,IAAA,qBAAA,aAAA,YAAA;AAOE,aAAA,kBAAA,CAAY,MAAZ,EAAkB;AAChB,aAAK,GAAL,GAAW,OAAO,GAAlB;AACA,aAAK,IAAL,GAAY,OAAO,IAAnB;AACA,aAAK,IAAL,GAAY,OAAO,IAAP,GAAc,OAAO,IAArB,GAA4B,GAAxC;AACA,aAAK,SAAL,GAAiB,OAAO,SAAP,GAAmB,OAAO,SAA1B,GAAsC,OAAO,EAA9D;AACD;AAED,uBAAA,SAAA,CAAA,IAAA,GAAA,UAAK,UAAL,EAAiB,KAAjB,EAAsB;AACpB,YAAM,YAAY,IAAI,SAAA,SAAJ,CAChB,KAAK,GADW,EAEhB,WAAW,SAAX,CAAqB,KAFL,EAGhB,WAAW,SAAX,CAAqB,QAHL,EAIhB,KAAK,SAJW,EAKhB,KAAK,IALW,CAAlB;AAMA,cAAM,KAAN,CAAY,GAAZ,CAAgB,SAAhB;AACD,KARD;AASF,WAAA,kBAAA;AAvBA,CAAA,EAAA;AAyBA,QAAA,SAAA,IAAe,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;;;AAEA,IAAA,aAAA,aAAA,YAAA;AAKE,aAAA,UAAA,CAAa,IAAb,EAAoB,IAApB,EAAyB;AACvB,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,IAAL,GAAY,IAAZ;AACD;AACH,WAAA,UAAA;AATA,CAAA,EAAA;AAWA,QAAA,SAAA,IAAe,UAAfbA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,YAAA,aAAA,YAAA;AAKE,aAAA,SAAA,CAAY,aAAZ,EAA0B;AAJnB,aAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,aAAA,KAAA,GAAkB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACA,aAAA,QAAA,GAAmB,CAAnB;AAGL,YAAI,aAAJ,EAAmB;AACjB,gBAAI,cAAc,QAAlB,EAA4B,KAAK,QAAL,GAAgB,cAAc,QAA9B;AAC5B,gBAAI,cAAc,QAAlB,EAA4B,KAAK,QAAL,GAAgB,cAAc,QAA9B;AAC5B,gBAAI,cAAc,KAAlB,EAAyB,KAAK,KAAL,GAAa,cAAc,KAA3B;AAC1B;AACF;AAED,cAAA,SAAA,CAAA,MAAA,GAAA,UAAO,QAAP,EAAe;AACb,aAAK,QAAL,IAAiB,QAAjB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,WAAA,GAAA,UAAY,CAAZ,EAAe,CAAf,EAAgB;AACd,aAAK,QAAL,GAAgB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,CAAhB,EAAmB,CAAnB,EAAoB;AAClB,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,SAAA,GAAA,UAAU,CAAV,EAAa,CAAb,EAAc;AACZ,YAAM,eAAe,eAAA,QAAA,CAAS,cAAT,CAAwB,KAAK,QAA7B,EAAuC,CAAvC,CAArB;AACA,YAAM,eAAe,eAAA,QAAA,CAAS,cAAT,CAAwB,KAAK,QAAL,GAAgB,KAAK,EAAL,GAAU,CAAlD,EAAqD,CAArD,CAArB;AACA,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,aAAa,CAAb,CAAb,EAA8B,aAAa,CAAb,CAA9B,CAAlB;AACA,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,aAAa,CAAb,CAAb,EAA8B,aAAa,CAAb,CAA9B,CAAlB;AACD,KALD;AAMF,WAAA,SAAA;AA/BA,CAAA,EAAA;AAiCA,QAAA,SAAA,IAAe,SAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA,IAAA,WAAA,gBAAA,QAAA,QAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,cAAA,CAAA;AAIA,IAAA,kBAAA,aAAA,YAAA;AAIE,aAAA,eAAA,CAAY,GAAZ,EAAe;AACb,aAAK,GAAL,GAAW,GAAX;AACD;AAED,oBAAA,SAAA,CAAA,IAAA,GAAA,UAAK,UAAL,EAA6B,KAA7B,EAA6C;AAC3C,gBAAQ,GAAR,CAAY,KAAK,GAAjB,EACE,WAAW,SAAX,CAAqB,QADvB,EAEE,WAAW,SAAX,CAAqB,KAFvB,EAGE,WAAW,SAAX,CAAqB,QAHvB;AAIA,aAAK,MAAL,GAAc,IAAI,SAAA,SAAA,CAAJ,CACZ,KAAK,GADO,EAEZ,WAAW,SAAX,CAAqB,QAFT,EAGZ,WAAW,SAAX,CAAqB,KAHT,EAIZ,WAAW,SAAX,CAAqB,QAJT,EAKZ,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CALY,CAAd;AAMA,cAAM,KAAN,CAAY,GAAZ,CAAgB,KAAK,MAArB;AACD,KAZD;AAaF,WAAA,eAAA;AArBA,CAAA,EAAA;AAuBA,QAAA,SAAA,IAAe,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;;;;;;;;;;;ACCA,IAAA,iBAAA,QAAA,cAAA,CAAA;AACA,IAAA,WAAA,QAAA,QAAA,CAAA;AAIA,IAAA,WAAA,aAAA,YAAA;AASE,aAAA,QAAA,CAAY,aAAZ,EAAyB;AACvB,aAAK,WAAL,GAAmB,cAAc,WAAjC;AACA,aAAK,IAAL,GAAY,cAAc,IAA1B;AACA,aAAK,MAAL,GAAc,cAAc,MAA5B;AACD;AAED,aAAA,SAAA,CAAA,IAAA,GAAA,UAAK,UAAL,EAA6B,KAA7B,EAA6C;AAC3C,YAAI,KAAK,IAAL,KAAc,KAAlB,EAAyB;AACvB,gBAAI,KAAK,MAAT,EAAiB;AACf,oBAAI,WAAW,UAAX,CAAsB,MAA1B,EAAkC;AAChC,yBAAK,QAAL,GAAgB,IAAI,SAAA,IAAA,CAAK,QAAT,CACd,WAAW,SAAX,CAAqB,QADP,EAEd,WAAW,SAAX,CAAqB,KAFP,CAAhB;AAGD,iBAJD,MAIO;AACL,yBAAK,QAAL,GAAgB,IAAI,SAAA,IAAA,CAAK,QAAT,CACd,WAAW,SAAX,CAAqB,QADP,EAEd,IAAI,eAAA,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAFc,CAEM;+JAFN,CAAhB;AAKD;AACF,aAZD,MAaK;AACH,qBAAK,QAAL,GAAgB,IAAI,SAAA,IAAA,CAAK,OAAT,CACd,WAAW,SAAX,CAAqB,QADP,EAEd,KAAK,WAFS,EAGd,IAAI,eAAA,QAAJ,CAAa,EAAb,EAAiB,EAAjB;AACA;;;AAJc,iBAAhB;AAQD;AACF,SAxBD,MA0BK;AACH,gBAAI,KAAK,MAAT,EAAiB;AACf,qBAAK,QAAL,GAAgB,IAAI,SAAA,IAAA,CAAK,QAAT,CACd,WAAW,SAAX,CAAqB,QADP,EAEd,KAAK,IAFS,CAAhB;AAID,aALD,MAMK;AACH,qBAAK,QAAL,GAAgB,IAAI,SAAA,IAAA,CAAK,OAAT,CACd,WAAW,SAAX,CAAqB,QADP,EAEd,KAAK,WAFS,EAGd,KAAK,IAHS,CAAhB;AAKD;AACF;AACD;;;;;;;AAOA,aAAK,SAAL,GAAiB,UAAC,KAAD,EAAM;AACrB,uBAAW,GAAX,CAAe,WAAf,EAA4B,CAAC,KAAD,CAA5B;AACD,SAFD;AAGA;AAEA;AACA;AACA,cAAM,KAAN,CAAY,GAAZ,CAAgB,KAAK,QAArB;AACA;AAED,KA3DD;AA4DF,WAAA,QAAA;AA3EA,CAAA,EAAA;AA6EA,QAAA,SAAA,IAAe,QAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA,IAAA,oBAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AASE,QAAA,MAAA,GATK,kBAAA,SAAA,CASL;AARF,IAAA,uBAAA,gBAAA,QAAA,sBAAA,CAAA,CAAA;AAOE,QAAA,SAAA,GAPK,qBAAA,SAAA,CAOL;AANF,IAAA,wBAAA,gBAAA,QAAA,uBAAA,CAAA,CAAA;AAQE,QAAA,UAAA,GARK,sBAAA,SAAA,CAQL;AAPF,IAAA,uBAAA,gBAAA,QAAA,sBAAA,CAAA,CAAA;AAQE,QAAA,SAAA,GARK,qBAAA,SAAA,CAQL;AAPF,IAAA,oBAAA,gBAAA,QAAA,mBAAA,CAAA,CAAA;AAQE,QAAA,MAAA,GARK,kBAAA,SAAA,CAQL;AAPF,IAAA,sBAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AAQE,QAAA,QAAA,GARK,oBAAA,SAAA,CAQL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZF,IAAA,iBAAA,QAAA,cAAA,CAAA;AAEA,IAAA,YAAA,aAAA,YAAA;AAKE,aAAA,SAAA,CAAY,aAAZ,EAA0B;AAJnB,aAAA,QAAA,GAAqB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAArB;AACA,aAAA,KAAA,GAAkB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACA,aAAA,QAAA,GAAmB,CAAnB;AAGL,YAAI,aAAJ,EAAmB;AACjB,gBAAI,cAAc,QAAlB,EAA4B,KAAK,QAAL,GAAgB,cAAc,QAA9B;AAC5B,gBAAI,cAAc,QAAlB,EAA4B,KAAK,QAAL,GAAgB,cAAc,QAA9B;AAC5B,gBAAI,cAAc,KAAlB,EAAyB,KAAK,KAAL,GAAa,cAAc,KAA3B;AAC1B;AACF;AAED,cAAA,SAAA,CAAA,MAAA,GAAA,UAAO,QAAP,EAAe;AACb,aAAK,QAAL,IAAiB,QAAjB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,WAAA,GAAA,UAAY,CAAZ,EAAe,CAAf,EAAgB;AACd,aAAK,QAAL,GAAgB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAhB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,CAAhB,EAAmB,CAAnB,EAAoB;AAClB,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACD,KAFD;AAIA,cAAA,SAAA,CAAA,SAAA,GAAA,UAAU,CAAV,EAAa,CAAb,EAAc;AACZ,YAAM,eAAe,eAAA,QAAA,CAAS,cAAT,CAAwB,KAAK,QAA7B,EAAuC,CAAvC,CAArB;AACA,YAAM,eAAe,eAAA,QAAA,CAAS,cAAT,CAAwB,KAAK,QAAL,GAAgB,KAAK,EAAL,GAAU,CAAlD,EAAqD,CAArD,CAArB;AACA,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,aAAa,CAAb,CAAb,EAA8B,aAAa,CAAb,CAA9B,CAAlB;AACA,aAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,eAAA,QAAJ,CAAa,aAAa,CAAb,CAAb,EAA8B,aAAa,CAAb,CAA9B,CAAlB;AACD,KALD;AAMF,WAAA,SAAA;AA/BA,CAAA,EAAA;AAiCA,QAAA,SAAA,IAAe,SAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;AAEA,IAAA,aAAA,aAAA,YAAA;AAKE,aAAA,UAAA,CAAa,IAAb,EAAoB,IAApB,EAAyB;AACvB,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,IAAL,GAAY,IAAZ;AACD;AACH,WAAA,UAAA;AATA,CAAA,EAAA;AAWA,QAAA,SAAA,IAAe,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA,IAAA,gBAAA,aAAA,YAAA;AAIE,aAAA,aAAA,CAAa,UAAb,EAAmC;AAH3B,aAAA,OAAA,GAAqB,EAArB;AAIN,aAAK,UAAL,GAAkB,UAAlB;AACD;AAED,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,OAAL,EAA2B;AACzB,aAAmB,IAAA,KAAA,CAAA,EAAA,YAAA,OAAnB,EAAmB,KAAA,UAAA,MAAnB,EAAmB,IAAnB,EAA4B;AAAvB,gBAAI,SAAM,UAAA,EAAA,CAAV;AACH,iBAAK,GAAL,CAAS,MAAT;AACD;AACF,KAJD;AAMA,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,MAAL,EAAW;AACT,aAAmB,IAAA,KAAA,CAAA,EAAA,KAAA,OAAO,IAAP,CAAY,MAAZ,CAAnB,EAAmB,KAAA,GAAA,MAAnB,EAAmB,IAAnB,EAAwC;AAAnC,gBAAI,SAAM,GAAA,EAAA,CAAV;AACH,gBAAI,CAAC,KAAK,OAAL,CAAa,MAAb,CAAL,EAA2B;AACzB,qBAAK,OAAL,CAAa,MAAb,IAAuB,EAAvB;AACD;AACD,iBAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,CAA0B,OAAO,MAAP,EAAe,IAAf,CAAoB,KAAK,UAAzB,CAA1B;AACD;AACF,KAPD;AASA,kBAAA,SAAA,CAAA,GAAA,GAAA,UAAK,IAAL,EAAW,MAAX,EAAiB;AACf,YAAI,KAAK,OAAL,CAAa,IAAb,CAAJ,EAAwB;AACtB,iBAAmB,IAAA,KAAA,CAAA,EAAA,KAAA,KAAK,OAAL,CAAa,IAAb,CAAnB,EAAmB,KAAA,GAAA,MAAnB,EAAmB,IAAnB,EAAuC;AAAlC,oBAAI,SAAM,GAAA,EAAA,CAAV;AACH,uBAAM,KAAN,CAAM,KAAA,CAAN,EAAU,MAAV;AACD;AACF;AACF,KAND;AAOF,WAAA,aAAA;AA9BA,CAAA,EAAA;AAgCA,QAAA,SAAA,IAAe,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA,QAAQ,GAAR,CAAY,YAAZ;AAGA,QAAQ,GAAR,CAAY,SAAZ;AACA,IAAA,uBAAA,gBAAA,QAAA,kCAAA,CAAA,CAAA;AACA,QAAQ,GAAR,CAAY,SAAZ;AACA,IAAA,wBAAA,gBAAA,QAAA,mCAAA,CAAA,CAAA;AACA,QAAQ,GAAR,CAAY,SAAZ;AACA,IAAA,oBAAA,gBAAA,QAAA,+BAAA,CAAA,CAAA;AACA,QAAQ,GAAR,CAAY,SAAZ;AAEA,IAAA,aAAA,aAAA,YAAA;AAOE,aAAA,UAAA,CAAY,UAAZ,EAAsB;AANf,aAAA,SAAA,GAAgC,IAAI,qBAAA,SAAA,CAAJ,EAAhC;AACA,aAAA,UAAA,GAAkC,IAAI,sBAAA,SAAA,CAAJ,EAAlC;AACA,aAAA,MAAA,GAA0B,IAAI,kBAAA,SAAA,CAAJ,CAAoB,IAApB,CAA1B;AAKL,aAAK,UAAL,GAAkB,UAAlB;AACD;AAED,eAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAkB,MAAlB,EAAqC;AACnC,aAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,EAAsB,MAAtB;AACD,KAFD;AAIA,eAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,aAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAA,SAAA,EAAS;AAC/B,sBAAU,OAAV;AACD,SAFD;AAGA,aAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB;AACD,KALD;AAMF,WAAA,UAAA;AArBA,CAAA,EAAA;AAuBA,QAAA,SAAA,IAAe,UAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA,IAAA,YAAA,aAAA,QAAA,yBAAA,CAAA,CAAA;AACA,IAAA,eAAA,gBAAA,QAAA,uBAAA,CAAA,CAAA;AAEA,SAAA,IAAA,CAAc,aAAd,EAA2B;AACzB,QAAI,SAAS,EAAb;AACA,QAAI,SAAJ;AACA,QAAI,MAAJ;AACA,QAAI,aAAJ,EAAmB;AACjB,aAAsB,IAAA,KAAA,CAAA,EAAA,KAAA,OAAO,IAAP,CAAY,aAAZ,CAAtB,EAAsB,KAAA,GAAA,MAAtB,EAAsB,IAAtB,EAAkD;AAA7C,gBAAI,YAAS,GAAA,EAAA,CAAb;AACH,gBAAI,cAAc,WAAlB,EAA+B;AAC7B,4BAAY,IAAI,UAAU,SAAV,CAAJ,CAAyB,cAAc,SAAd,CAAzB,CAAZ;AACD,aAFD,MAEO,IAAI,cAAc,QAAlB,EAA4B;AACjC,yBAAS,cAAc,SAAd,CAAT;AACD,aAFM,MAEA;AACL,uBAAO,SAAP,IAAoB,IAAI,UAAU,SAAV,CAAJ,CAAyB,cAAc,SAAd,CAAzB,CAApB;AACD;AACF;AACF;AACD,QAAM,KAAK,IAAI,aAAA,SAAA,CAAJ,CAAe,MAAf,CAAX;AACA,OAAG,WAAH,EAAgB,QAAhB,GAA2B,UAAU,QAArC;AACA,OAAG,WAAH,EAAgB,QAAhB,GAA2B,UAAU,QAArC;AACA,OAAG,WAAH,EAAgB,KAAhB,GAAwB,UAAU,KAAlC;AACA,QAAI,MAAJ,EAAY;AACV,WAAG,MAAH,CAAU,GAAV,CAAc,MAAd;AACD;AACD,WAAO,EAAP;AACD;AAED,QAAA,SAAA,IAAe,IAAfarUA,QAAQ,GAAR,CAAY,MAAZ;AAKA,IAAA,gBAAA,gBAAA,QAAA,wBAAA,CAAA,CAAA;AAKA,IAAM,KAAK,IAAI,cAAA,SAAA,CAAJ,EAAX;AACA,QAAQ,GAAR,CAAY,EAAZ;AAEA","file":"lienzo.6a863ef6.map","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dibujo\"] = factory();\n\telse\n\t\troot[\"dibujo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Vector = /** @class */ (function () {\r\n    function Vector(x, y) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Vector.prototype.add = function (vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n    };\r\n    Vector.prototype.sub = function (vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n    };\r\n    Vector.prototype.mult = function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n    };\r\n    Vector.prototype.div = function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n    };\r\n    Vector.prototype.inverse = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n    };\r\n    Vector.prototype.mag = function () {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    };\r\n    Vector.prototype.dot = function (vector) {\r\n        return this.x * vector.x + this.y * vector.y;\r\n    };\r\n    Vector.prototype.distance = function (vector) {\r\n        return Vector.sub(this, vector).mag();\r\n    };\r\n    Vector.prototype.angle = function () {\r\n        return Math.atan2(this.y, this.x);\r\n    };\r\n    Vector.prototype.copy = function () {\r\n        return new Vector(this.x, this.y);\r\n    };\r\n    Vector.prototype.normalize = function () {\r\n        this.div(this.mag());\r\n    };\r\n    Vector.prototype.setMag = function (mag) {\r\n        this.normalize();\r\n        this.mult(mag);\r\n    };\r\n    Vector.prototype.setAngle = function (angle) {\r\n        var magnitude = this.mag();\r\n        this.x = magnitude * Math.cos(angle);\r\n        this.y = magnitude * Math.sin(angle);\r\n    };\r\n    Vector.prototype.addAngle = function (angle) {\r\n        this.setAngle(this.angle() + angle);\r\n    };\r\n    Vector.prototype.limit = function (scalar) {\r\n        if (this.mag() > scalar) {\r\n            this.setMag(scalar);\r\n        }\r\n    };\r\n    Vector.prototype.moveTowards = function (vector, speed, stop) {\r\n        if (speed === void 0) { speed = 1; }\r\n        if (stop === void 0) { stop = 1; }\r\n        if (this.distance(vector) > stop) {\r\n            var unit = Vector.normalize(Vector.sub(vector, this));\r\n            unit.mult(speed);\r\n            this.add(unit);\r\n        }\r\n    };\r\n    Vector.prototype.zero = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    };\r\n    Vector.add = function (vector1, vector2) {\r\n        return new Vector(vector1.x + vector2.x, vector1.y + vector2.y);\r\n    };\r\n    Vector.sub = function (vector1, vector2) {\r\n        return new Vector(vector1.x - vector2.x, vector1.y - vector2.y);\r\n    };\r\n    Vector.mult = function (vector, scalar) {\r\n        return new Vector(vector.x * scalar, vector.y * scalar);\r\n    };\r\n    Vector.div = function (vector, scalar) {\r\n        return new Vector(vector.x / scalar, vector.y / scalar);\r\n    };\r\n    Vector.inverse = function (vector) {\r\n        return new Vector(vector.x * -1, vector.y * -1);\r\n    };\r\n    Vector.distance = function (vector1, vector2) {\r\n        return this.sub(vector1, vector2).mag();\r\n    };\r\n    Vector.normalize = function (vector) {\r\n        return this.div(vector, vector.mag());\r\n    };\r\n    Vector.cross = function (vector1, vector2) {\r\n        return vector1.x * vector2.y - vector2.x * vector1.y;\r\n    };\r\n    Vector.randomP = function (x, y) {\r\n        return new Vector(x * Math.random(), y * Math.random());\r\n    };\r\n    Vector.random = function (x, y) {\r\n        var s1 = 1;\r\n        var s2 = 1;\r\n        if (Math.random() > 0.5)\r\n            s1 = -1;\r\n        if (Math.random() > 0.5)\r\n            s2 = -1;\r\n        return new Vector(x * Math.random() * s1, y * Math.random() * s2);\r\n    };\r\n    return Vector;\r\n}());\r\nexports[\"default\"] = Vector;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Properties_1 = __webpack_require__(10);\r\nvar Graphic = /** @class */ (function () {\r\n    function Graphic(data) {\r\n        this.weight = Properties_1.weights.normal;\r\n        this.fill = true;\r\n        this.stroke = false;\r\n        this.anchor = new Vector_1[\"default\"](0.5, 0.5);\r\n        this.position = new Vector_1[\"default\"](0, 0);\r\n        this.color = 'grey';\r\n        this.family = 'Arial';\r\n        this.lineCap = Properties_1.LineCap.round;\r\n        this.lineJoin = Properties_1.LineJoin.round;\r\n        this.lineColor = 'rgb(0, 0, 0)';\r\n        this.textAlign = 'center';\r\n        this.shadowColor = 'rgba(0, 0, 0, 0)';\r\n        this.textBaseline = 'middle';\r\n        this.size = 12;\r\n        this.rotation = 0;\r\n        this.z_index = 1;\r\n        this.lineWidth = 1;\r\n        this.miterLimit = 10;\r\n        this.shadowBlur = 0;\r\n        this.shadowOffsetX = 0;\r\n        this.shadowOffsetY = 0;\r\n        this.childs = [];\r\n        if (data) {\r\n            if (data.stroke !== undefined) {\r\n                if (typeof data.stroke === 'boolean') {\r\n                    this.stroke = data.stroke;\r\n                }\r\n                else {\r\n                    console.error(\"Type of stroke is not boolean\");\r\n                }\r\n            }\r\n            else {\r\n                this.stroke = false;\r\n            }\r\n            if (data.fill !== undefined) {\r\n                if (typeof data.fill === 'boolean') {\r\n                    this.fill = data.fill;\r\n                }\r\n                else {\r\n                    console.error(\"Type of fill is not boolean\");\r\n                }\r\n            }\r\n            else {\r\n                this.fill = true;\r\n            }\r\n            this.weight = data.weights ? data.weights : Properties_1.weights.normal;\r\n            this.anchor = data.anchor ? data.anchor : new Vector_1[\"default\"](0.5, 0.5);\r\n            this.position = data.position ? data.position : new Vector_1[\"default\"](0, 0);\r\n            this.z_index = data.z_index ? data.z_index : 1;\r\n            this.shadowBlur = data.shadowBlur ? data.shadowBlur : 0;\r\n            this.shadowOffsetX = data.shadowOffsetX ? data.shadowOffsetX : 0;\r\n            this.shadowOffsetY = data.shadowOffsetY ? data.shadowOffsetY : 0;\r\n            this.shadowColor = data.shadowColor ? data.shadowColor : 'rgba(0,0,0,0)';\r\n            this.miterLimit = data.miterLimit ? data.miterLimit : 10;\r\n            this.lineCap = data.lineCap ? data.lineCap : Properties_1.LineCap.round;\r\n            this.color = data.color ? data.color : 'grey';\r\n            this.family = data.family ? data.family : 'Arial';\r\n            this.lineJoin = data.lineJoin ? data.lineJoin : Properties_1.LineJoin.round;\r\n            this.lineColor = data.lineColor ? data.lineColor : 'rgb(0, 0, 0)';\r\n            this.textAlign = data.textAlign ? data.textAlign : 'center';\r\n            this.textBaseline = data.textBaseline ? data.textBaseline : 'middle';\r\n            this.size = data.size ? data.size : 12;\r\n            this.rotation = data.rotation ? data.rotation : 0;\r\n            this.lineWidth = data.lineWidth ? data.lineWidth : 1;\r\n        }\r\n    }\r\n    Graphic.prototype.add = function (child) {\r\n        child.context = this.context;\r\n        this.childs.push(child);\r\n    };\r\n    Graphic.prototype.remove = function (child) {\r\n        this.childs.push(child);\r\n    };\r\n    Graphic.prototype.font = function () {\r\n        return this.weight + \" \" + this.size + \"px \" + this.family;\r\n    };\r\n    Graphic.prototype.setStyle = function () {\r\n        this.context.font = this.font();\r\n        this.context.fillStyle = this.color;\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.lineColor = this.lineColor;\r\n        this.context.lineWidth = this.lineWidth;\r\n        this.context.textAlign = this.textAlign;\r\n        this.context.shadowColor = this.shadowColor;\r\n        this.context.textBaseline = this.textBaseline;\r\n        this.context.miterLimit = this.miterLimit;\r\n        this.context.shadowBlur = this.shadowBlur;\r\n        this.context.shadowOffsetX = this.shadowOffsetX;\r\n        this.context.shadowOffsetY = this.shadowOffsetY;\r\n    };\r\n    Graphic.prototype.render = function () {\r\n        this.context.save();\r\n        this.context.beginPath();\r\n        if (this.context.fill || this.context.stroke) {\r\n            this.setStyle();\r\n            this.selfRender();\r\n        }\r\n        this.context.restore();\r\n    };\r\n    Graphic.prototype.selfRender = function () { };\r\n    return Graphic;\r\n}());\r\nexports[\"default\"] = Graphic;\r\n/*\r\nlocate() {\r\n  // this.context.anchor:         Vector = new Vector(0.5, 0.5)\r\n  this.context.translate(this.position.x, this.position.y)\r\n  this.context.rotate(this.rotation)\r\n}\r\n\r\nvar pat=ctx.createPattern(img,\"repeat\");\r\nctx.fillStyle=pat;\r\n// this.context.linearGradient: any\r\npublic linearGradient: any\r\n\r\n// renderChild() { }\r\n*/\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar defaultCss = document.createElement('style');\r\ndefaultCss.type = 'text/css';\r\ndefaultCss.innerHTML = \"\\n* {\\n  margin:0%;\\n  padding: 0%;\\n}\\ncanvas {\\n  display: block;\\n}\\n\";\r\ndocument.head.appendChild(defaultCss);\r\nvar Scene_1 = __webpack_require__(3);\r\nexports.Scene = Scene_1[\"default\"];\r\nvar Render_1 = __webpack_require__(11);\r\nexports.Render = Render_1[\"default\"];\r\nvar LinearGradient_1 = __webpack_require__(6);\r\nexports.LinearGradient = LinearGradient_1[\"default\"];\r\nvar Group_1 = __webpack_require__(12);\r\nexports.Group = Group_1[\"default\"];\r\nvar Vector_1 = __webpack_require__(0);\r\nexports.Vector = Vector_1[\"default\"];\r\nvar Color_1 = __webpack_require__(13);\r\nexports.Color = Color_1[\"default\"];\r\n// Graphics\r\nvar Animation_1 = __webpack_require__(14);\r\nexports.Animation = Animation_1[\"default\"];\r\nvar Graphic_1 = __webpack_require__(1);\r\nexports.Graphic = Graphic_1[\"default\"];\r\nvar Ellipse_1 = __webpack_require__(15);\r\nexports.Ellipse = Ellipse_1[\"default\"];\r\nvar Poligon_1 = __webpack_require__(16);\r\nexports.Poligon = Poligon_1[\"default\"];\r\nvar Picture_1 = __webpack_require__(4);\r\nexports.Picture = Picture_1[\"default\"];\r\nvar Circle_1 = __webpack_require__(17);\r\nexports.Circle = Circle_1[\"default\"];\r\nvar Video_1 = __webpack_require__(5);\r\nexports.Video = Video_1[\"default\"];\r\nvar Rect_1 = __webpack_require__(18);\r\nexports.Rect = Rect_1[\"default\"];\r\nvar Line_1 = __webpack_require__(19);\r\nexports.Line = Line_1[\"default\"];\r\nvar Text_1 = __webpack_require__(20);\r\nexports.Text = Text_1[\"default\"];\r\nvar Arc_1 = __webpack_require__(21);\r\nexports.Arc = Arc_1[\"default\"];\r\nvar BezierCurve_1 = __webpack_require__(22);\r\nexports.BezierCurve = BezierCurve_1[\"default\"];\r\nvar QuadraticCurve_1 = __webpack_require__(23);\r\nexports.QuadraticCurve = QuadraticCurve_1[\"default\"];\r\n// Events\r\nvar Mouse_1 = __webpack_require__(24);\r\nvar KeyBoard_1 = __webpack_require__(25);\r\nvar mouse = new Mouse_1[\"default\"]();\r\nexports.mouse = mouse;\r\nvar keyboard = new KeyBoard_1[\"default\"]();\r\nexports.keyboard = keyboard;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Camera_1 = __webpack_require__(9);\r\nvar Picture_1 = __webpack_require__(4);\r\nvar Video_1 = __webpack_require__(5);\r\n/**\r\n * This is the detail about the constructor\r\n * @class This is the detail about the class\r\n * @memberOf namespace\r\n * @param {Render} renderer The first argument\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    function Scene(renderer) {\r\n        this.backgroundColor = 'black';\r\n        this.childs = [];\r\n        this.frameRate = 0;\r\n        this.ready = false;\r\n        this.renderer = renderer;\r\n        this.context = this.renderer.context;\r\n        this.camera = new Camera_1[\"default\"](this.context);\r\n    }\r\n    Scene.prototype.dataLoaded = function () {\r\n        // Gets all the pictures and videos from the scene.\r\n        var elements = this.childs.filter(function (child) {\r\n            if (child instanceof Picture_1[\"default\"])\r\n                return true;\r\n            if (child instanceof Video_1[\"default\"])\r\n                return true;\r\n            return false;\r\n        });\r\n        // If there is an image that is not loaded returns false\r\n        return !elements.some(function (element) { return !element.ready; });\r\n    };\r\n    /**\r\n     * This method adds one element to the scene\r\n     * @param {Graphic} element any graphic object\r\n     * @returns {void}\r\n     */\r\n    Scene.prototype.add = function (element) {\r\n        element.context = this.context;\r\n        this.childs.push(element);\r\n        this.organizeByZindex();\r\n    };\r\n    /**\r\n     * Removes an element from the scene\r\n     * @param {Graphic} element any graphic object\r\n     * @returns {void}\r\n     */\r\n    Scene.prototype.remove = function (element) {\r\n        var index = this.childs.indexOf(element);\r\n        if (index >= 0) {\r\n            this.childs.splice(index, 1);\r\n        }\r\n    };\r\n    /**\r\n     * This method clears the screen\r\n     */\r\n    Scene.prototype.clearScreen = function () {\r\n        this.context.save();\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n        this.context.fillStyle = this.backgroundColor;\r\n        this.context.fillRect(0, 0, window.innerWidth, window.innerHeight);\r\n        this.context.restore();\r\n    };\r\n    /**\r\n     * This method enables or disables the image smoothing\r\n     * @param {boolean} state enable or disable\r\n     */\r\n    Scene.prototype.smoth = function (state) {\r\n        if (this.context.imageSmoothingEnabled) {\r\n            this.context.imageSmoothingEnabled = state;\r\n        }\r\n        else if (this.context.mozImageSmoothingEnabled) {\r\n            this.context.mozImageSmoothingEnabled = state;\r\n        }\r\n        else if (this.context.webkitImageSmoothingEnabled) {\r\n            this.context.webkitImageSmoothingEnabled = state;\r\n        }\r\n    };\r\n    /**\r\n     * This method organizes the childs of the scene by their property z_indez\r\n     */\r\n    Scene.prototype.organizeByZindex = function () {\r\n        this.childs.sort(function (a, b) { return a.z_index - b.z_index; });\r\n    };\r\n    /**\r\n     * This method renders the screne ultil you call stopAutoRender\r\n     */\r\n    Scene.prototype.autoRender = function (func) {\r\n        var _this = this;\r\n        this.interval = setInterval(function () {\r\n            if (func)\r\n                func();\r\n            _this.render();\r\n        }, this.frameRate);\r\n    };\r\n    /**\r\n     * This method stops autoRender\r\n     */\r\n    Scene.prototype.stopAutoRender = function () {\r\n        clearInterval(this.interval);\r\n    };\r\n    /**\r\n     * This method renders the screne\r\n     */\r\n    Scene.prototype.render = function () {\r\n        if (!this.dataLoaded()) {\r\n            console.info('Waiting for images to load...');\r\n            setTimeout(this.render.bind(this), 100);\r\n        }\r\n        else {\r\n            this.clearScreen();\r\n            this.childs.forEach(function (child) { return child.render(); });\r\n            this.camera.update();\r\n        }\r\n    };\r\n    return Scene;\r\n}());\r\nexports[\"default\"] = Scene;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\n// Imaginary canvas\r\nvar canvas = document.createElement('canvas');\r\nvar context = canvas.getContext('2d');\r\nvar Picture = /** @class */ (function (_super) {\r\n    __extends(Picture, _super);\r\n    function Picture(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.type = \"img\";\r\n        _this.ready = false;\r\n        _this.todo = [];\r\n        _this.params = [];\r\n        _this.image = new Image();\r\n        _this.image.src = data.src;\r\n        _this.image.addEventListener('load', function () {\r\n            _this.ready = true;\r\n            _this.todo.forEach(function (met, i) {\r\n                met.apply(void 0, _this.params[i]);\r\n            });\r\n        });\r\n        _this.image.addEventListener('error', function () {\r\n            console.error('Error loading the image...');\r\n        });\r\n        _this.angle = data.angle ? data.angle : 0;\r\n        _this.opacity = data.opacity ? data.opacity : 1;\r\n        _this.width = data.width ? data.width : _this.image.width;\r\n        _this.height = data.height ? data.height : _this.image.height;\r\n        return _this;\r\n    }\r\n    Picture.prototype.filter = function () {\r\n    };\r\n    Picture.prototype.getImageData = function () {\r\n        context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        context.drawImage(this.image, 0, 0, this.width, this.height);\r\n        return context.getImageData(0, 0, this.width, this.height);\r\n    };\r\n    Picture.prototype.removeColor = function (color) {\r\n        if (this.ready) {\r\n            var image = void 0;\r\n            if (!this.data) {\r\n                image = this.getImageData();\r\n            }\r\n            else {\r\n                image = this.data;\r\n            }\r\n            for (var pixel = 0; pixel < image.data.length; pixel += 4) {\r\n                if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n                    image.data[pixel + 3] = 0;\r\n                }\r\n            }\r\n            this.data = image;\r\n            this.render = this.renderData;\r\n        }\r\n        else {\r\n            this.todo.push(this.removeColor.bind(this));\r\n            this.params.push([color]);\r\n        }\r\n    };\r\n    Picture.prototype.onClick = function (func) {\r\n    };\r\n    Picture.prototype.realPosition = function () {\r\n        return new Vector_1[\"default\"](this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height));\r\n    };\r\n    Picture.prototype.renderData = function () {\r\n        //  console.log('here')\r\n        //console.log(this.data)\r\n        this.context.beginPath();\r\n        this.context.save();\r\n        // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n        //this.context.rotate(this.angle)\r\n        // this.context.globalAlpha = this.opacity\r\n        // console.log(this.data)\r\n        this.context.putImageData(this.data, this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height)); // -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n        // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n        this.context.restore();\r\n    };\r\n    Picture.prototype.render = function () {\r\n        this.context.beginPath();\r\n        this.context.save();\r\n        this.context.translate(this.position.x, this.position.y);\r\n        this.context.rotate(this.angle);\r\n        this.context.globalAlpha = this.opacity;\r\n        this.context.drawImage(this.image, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height);\r\n        // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n        this.context.restore();\r\n    };\r\n    return Picture;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Picture;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Video = /** @class */ (function (_super) {\r\n    __extends(Video, _super);\r\n    function Video(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.type = \"img\";\r\n        _this.ready = false;\r\n        _this.todo = [];\r\n        _this.params = [];\r\n        _this.filterEnable = false;\r\n        _this.filterColors = [];\r\n        _this.video = document.createElement('video');\r\n        _this.video.src = data.src;\r\n        _this.video.play();\r\n        _this.video.crossOrigin = \"Anonymous\";\r\n        _this.video.addEventListener('loadedmetadata', function () {\r\n            _this.ready = true;\r\n            console.info(\"Video \" + data.src + \" correctly loaded.\");\r\n            console.log(_this.todo);\r\n            console.log(_this.params);\r\n            _this.todo.forEach(function (met, i) {\r\n                met.apply(void 0, _this.params[i]);\r\n            });\r\n        });\r\n        _this.video.addEventListener('error', function () {\r\n            console.error('Error loading the video...');\r\n        });\r\n        _this.angle = data.angle ? data.angle : 0;\r\n        _this.opacity = data.opacity ? data.opacity : 1;\r\n        _this.width = data.width ? data.width : _this.video.width;\r\n        _this.height = data.height ? data.height : _this.video.height;\r\n        return _this;\r\n    }\r\n    Video.prototype.filter = function () {\r\n    };\r\n    Video.prototype.getImageData = function () {\r\n        var canvas = document.createElement('canvas');\r\n        // console.log(canvas)\r\n        document.body.appendChild(canvas);\r\n        var context = canvas.getContext('2d');\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n        context.translate((this.anchor.x * this.width), (this.anchor.y * this.height));\r\n        context.rotate(this.angle);\r\n        context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height);\r\n        document.body.removeChild(canvas);\r\n        // return context.getImageData( -this.width / 2 , - this.height/2, this.width + this.width/2, this.height + this.height/2)\r\n        return context.getImageData(0, 0, this.width, this.height);\r\n    };\r\n    /*\r\n      removeColor(color: Array<number>) {\r\n        if (this.ready) {\r\n          let image\r\n          if (!this.data) {\r\n            image = this.getImageData()\r\n          } else {\r\n            image = this.data\r\n          }\r\n    \r\n          for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n            if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n              image.data[pixel + 3] = 0\r\n            }\r\n          }\r\n    \r\n          this.data = image\r\n          this.render = this.renderData\r\n        } else {\r\n          this.todo.push(this.removeColor.bind(this))\r\n          this.params.push([color])\r\n        }\r\n      }\r\n    */\r\n    Video.prototype.onClick = function (func) {\r\n    };\r\n    Video.prototype.realPosition = function () {\r\n        return new Vector_1[\"default\"](this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height));\r\n    };\r\n    Video.prototype.renderData = function () {\r\n        if (this.filterEnable) {\r\n            this.filterColor(this.filterColors[0], this.filterColors[1], this.filterColors[2]);\r\n        }\r\n        //  console.log('here')\r\n        //console.log(this.data)\r\n        this.context.beginPath();\r\n        this.context.save();\r\n        // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n        // this.context.rotate(this.angle)\r\n        // this.context.globalAlpha = this.opacity\r\n        // console.log(this.data)\r\n        this.context.putImageData(this.data, this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height)); // -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n        // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n        this.context.restore();\r\n    };\r\n    Video.prototype.filterColor = function (r, g, b) {\r\n        if (this.ready) {\r\n            this.filterEnable = true;\r\n            this.filterColors = [r, g, b];\r\n            var image = this.getImageData();\r\n            for (var pixel = 0; pixel < image.data.length; pixel += 4) {\r\n                image.data[pixel] += r;\r\n                image.data[pixel + 1] += g;\r\n                image.data[pixel + 2] += b;\r\n                // image.data[pixel + 3]\r\n            }\r\n            this.data = image;\r\n            this.render = this.renderData;\r\n        }\r\n        else {\r\n            this.todo.push(this.filterColor.bind(this));\r\n            this.params.push([r, g, b]);\r\n        }\r\n    };\r\n    Video.prototype.render = function () {\r\n        this.context.beginPath();\r\n        this.context.save();\r\n        this.context.translate(this.position.x, this.position.y);\r\n        this.context.rotate(this.angle);\r\n        this.context.globalAlpha = this.opacity;\r\n        this.context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height);\r\n        // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n        this.context.restore();\r\n    };\r\n    return Video;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Video;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar LinearGradient = /** @class */ (function (_super) {\r\n    __extends(LinearGradient, _super);\r\n    function LinearGradient(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.context = config.context;\r\n        _this.size = config.size ? config.size : new Vector_1[\"default\"](100, 100);\r\n        _this.gradient = _this.context.createLinearGradient(_this.position.x, _this.position.y, _this.size.x, _this.size.y);\r\n        var counter = 0;\r\n        for (var _i = 0, _a = config.colors; _i < _a.length; _i++) {\r\n            var color = _a[_i];\r\n            _this.gradient.addColorStop(counter, color);\r\n            // console.log(1 / config.colors.length)\r\n            counter += 1 / config.colors.length;\r\n        }\r\n        return _this;\r\n    }\r\n    return LinearGradient;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = LinearGradient;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar CircleEvents = /** @class */ (function (_super) {\r\n    __extends(CircleEvents, _super);\r\n    function CircleEvents(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        // Private\r\n        _this.mouseDownEnabled = false;\r\n        _this.dragStartEnabled = false;\r\n        _this.dragEndEnabled = false;\r\n        _this.dragingEnabled = false;\r\n        _this.mouseUpEnabled = false;\r\n        _this.hoverEnabled = false;\r\n        _this.moveEnabled = false;\r\n        _this.moveMethods = [];\r\n        _this.mouseDownMethods = [];\r\n        _this.mouseUpMethods = [];\r\n        _this.hoverMethods = [];\r\n        _this.dragStartMethods = [];\r\n        _this.dragEndMethods = [];\r\n        _this.dragingMethods = [];\r\n        if (configuration) {\r\n            if (configuration.radius)\r\n                _this.radius = configuration.radius;\r\n        }\r\n        return _this;\r\n    }\r\n    CircleEvents.prototype.checkIfInside = function (point) {\r\n        return this.position.distance(point) < this.radius;\r\n    };\r\n    CircleEvents.prototype.enableEvent = function (eventName, methods) {\r\n        var _this = this;\r\n        var mouse;\r\n        document.addEventListener(eventName, function (event) {\r\n            mouse = new Vector_1[\"default\"](event.clientX, event.clientY);\r\n            if (_this.checkIfInside(mouse)) {\r\n                methods.forEach(function (method) { return method(mouse); });\r\n            }\r\n        });\r\n    };\r\n    CircleEvents.prototype.mouseDown = function (func) {\r\n        if (!this.mouseDownEnabled) {\r\n            this.mouseDownEnabled = !this.mouseDownEnabled;\r\n            this.enableEvent('mousedown', this.mouseDownMethods);\r\n        }\r\n        this.mouseDownMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.mouseUp = function (func) {\r\n        if (!this.mouseUpEnabled) {\r\n            this.mouseUpEnabled = !this.mouseUpEnabled;\r\n            this.enableEvent('mouseup', this.mouseUpMethods);\r\n        }\r\n        this.mouseUpMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.hover = function (func) {\r\n        if (!this.hoverEnabled) {\r\n            this.hoverEnabled = !this.hoverEnabled;\r\n            this.enableEvent('mousemove', this.hoverMethods);\r\n        }\r\n        this.hoverMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.mouseMove = function (func) {\r\n        var _this = this;\r\n        if (!this.moveEnabled) {\r\n            this.moveEnabled = !this.moveEnabled;\r\n            var mouse_1;\r\n            document.addEventListener('mousemove', function (event) {\r\n                mouse_1 = new Vector_1[\"default\"](event.clientX, event.clientY);\r\n                _this.moveMethods.forEach(function (method) { return method(mouse_1); });\r\n            });\r\n        }\r\n        func = func.bind(this);\r\n        this.moveMethods.push(func);\r\n    };\r\n    CircleEvents.prototype.dragStart = function (func) {\r\n        this.dragStartMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.draging = function (func) {\r\n        this.dragingMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.dragEnd = function (func) {\r\n        this.dragEndMethods.push(func.bind(this));\r\n    };\r\n    CircleEvents.prototype.enableMouseDrag = function () {\r\n        var _this = this;\r\n        var isDraging = false;\r\n        var distance = new Vector_1[\"default\"]();\r\n        document.addEventListener('mousemove', function (event) {\r\n            if (isDraging) {\r\n                _this.position = Vector_1[\"default\"].add(distance, new Vector_1[\"default\"](event.clientX, event.clientY));\r\n                _this.dragingMethods.forEach(function (meth) { return meth(); });\r\n            }\r\n        });\r\n        this.mouseDown(function (mouse) {\r\n            if (!isDraging) {\r\n                document.body.style.cursor = 'pointer';\r\n                isDraging = true;\r\n                distance = Vector_1[\"default\"].sub(_this.position, mouse);\r\n                _this.position = Vector_1[\"default\"].add(distance, mouse);\r\n                _this.dragStartMethods.forEach(function (meth) { return meth(); });\r\n            }\r\n        });\r\n        this.mouseUp(function () {\r\n            if (isDraging) {\r\n                document.body.style.cursor = 'default';\r\n                isDraging = false;\r\n                _this.dragEndMethods.forEach(function (meth) { return meth(); });\r\n            }\r\n        });\r\n    };\r\n    return CircleEvents;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = CircleEvents;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Event = /** @class */ (function () {\r\n    function Event() {\r\n        this.events = {\r\n            // Mouse\r\n            mousemove: [],\r\n            mouseup: [],\r\n            mousedown: [],\r\n            mousemoveActive: false,\r\n            mousedownActive: false,\r\n            mouseupActive: false,\r\n            // KeyBoard\r\n            keypress: [],\r\n            keyup: [],\r\n            keydown: [],\r\n            keypressActive: false,\r\n            keydownActive: false,\r\n            keyupActive: false\r\n        };\r\n    }\r\n    Event.prototype.initEvent = function (name) {\r\n        var _this = this;\r\n        document.addEventListener(name, function (event) {\r\n            _this.events[name].forEach(function (func) { return func(_this, event); });\r\n        });\r\n    };\r\n    return Event;\r\n}());\r\nexports[\"default\"] = Event;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar index_1 = __webpack_require__(2);\r\nvar Camera = /** @class */ (function () {\r\n    function Camera(context) {\r\n        this.keyMap = { up: 'w', down: 's', left: 'a', right: 'd' };\r\n        this.position = new Vector_1[\"default\"](0, 0);\r\n        this.fLastPosition = new Vector_1[\"default\"](0, 0);\r\n        this.followingX = false;\r\n        this.followingY = false;\r\n        this.keyTranslateEnabled = false;\r\n        this.velocity = new Vector_1[\"default\"](0, 0);\r\n        this.acceleration = new Vector_1[\"default\"](0, 0);\r\n        this.friction = 0.9;\r\n        this.context = context;\r\n    }\r\n    Camera.prototype.addForce = function (force) {\r\n        this.acceleration.add(force);\r\n    };\r\n    /*\r\n      enable() {\r\n        document.addEventListener('mousemove', (e) => {\r\n          this.mouse.position.x = e.clientX\r\n          this.mouse.position.y = e.clientY\r\n        })\r\n      }\r\n    */\r\n    Camera.prototype.getMouse = function () {\r\n        return Vector_1[\"default\"].add(index_1.mouse.position, this.position);\r\n    };\r\n    Camera.prototype.disableKeyTranslate = function () {\r\n    };\r\n    Camera.prototype.enableKeyTranslate = function () {\r\n        var _this = this;\r\n        this.keyTranslateEnabled = true;\r\n        document.addEventListener('keypress', function (e) {\r\n            if (e.key.toLowerCase() === _this.keyMap.up) {\r\n                _this.addForce(new Vector_1[\"default\"](0, 10));\r\n            }\r\n            if (e.key.toLowerCase() === _this.keyMap.down) {\r\n                _this.addForce(new Vector_1[\"default\"](0, -10));\r\n            }\r\n            if (e.key.toLowerCase() === _this.keyMap.left) {\r\n                _this.addForce(new Vector_1[\"default\"](10, 0));\r\n            }\r\n            if (e.key.toLowerCase() === _this.keyMap.right) {\r\n                _this.addForce(new Vector_1[\"default\"](-10, 0));\r\n            }\r\n        });\r\n    };\r\n    Camera.prototype.follow = function (graphic) {\r\n        this.followedPosition = graphic.position;\r\n        this.fLastPosition = this.followedPosition.copy();\r\n        this.followingX = true;\r\n        this.followingY = true;\r\n    };\r\n    Camera.prototype.followX = function (graphic) {\r\n        this.followedPosition = graphic.position;\r\n        this.followingX = true;\r\n    };\r\n    Camera.prototype.followY = function (graphic) {\r\n        this.followedPosition = graphic.position;\r\n        this.followingY = true;\r\n    };\r\n    Camera.prototype.stopFollowing = function () {\r\n        this.followingX = false;\r\n        this.followingY = false;\r\n    };\r\n    Camera.prototype.stopFollowingX = function () {\r\n        this.followingX = false;\r\n    };\r\n    Camera.prototype.stopFollowingY = function () {\r\n        this.followingY = false;\r\n    };\r\n    Camera.prototype.zoom = function (where, howMuch) {\r\n        this.context.translate(where.x, where.y);\r\n        this.context.scale(howMuch.x, howMuch.y);\r\n        this.context.translate(-where.x, -where.y);\r\n    };\r\n    Camera.prototype.translate = function (x, y) {\r\n        this.position.x -= x;\r\n        this.position.y -= y;\r\n        this.context.translate(x, y);\r\n    };\r\n    Camera.prototype.update = function () {\r\n        if (this.keyTranslateEnabled) {\r\n            this.velocity.add(this.acceleration);\r\n            this.velocity.mult(this.friction);\r\n            this.translate(this.velocity.x, this.velocity.y);\r\n            this.position.add(this.velocity);\r\n            this.acceleration.zero();\r\n        }\r\n        if (this.followingX || this.followingY) {\r\n            var change = Vector_1[\"default\"].sub(this.fLastPosition, this.followedPosition);\r\n            this.fLastPosition = this.followedPosition.copy();\r\n            this.translate(change.x, change.y);\r\n        }\r\n    };\r\n    return Camera;\r\n}());\r\nexports[\"default\"] = Camera;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar LineCap;\r\n(function (LineCap) {\r\n    LineCap[\"butt\"] = \"butt\";\r\n    LineCap[\"square\"] = \"square\";\r\n    LineCap[\"round\"] = \"round\";\r\n})(LineCap = exports.LineCap || (exports.LineCap = {}));\r\nvar LineJoin;\r\n(function (LineJoin) {\r\n    LineJoin[\"bevel\"] = \"bevel\";\r\n    LineJoin[\"round\"] = \"round\";\r\n    LineJoin[\"miter\"] = \"miter\";\r\n})(LineJoin = exports.LineJoin || (exports.LineJoin = {}));\r\nvar Pattern;\r\n(function (Pattern) {\r\n    Pattern[\"repeat\"] = \"repeat\";\r\n    Pattern[\"repeat_x\"] = \"repeat-x\";\r\n    Pattern[\"repeat_y\"] = \"repeat-y\";\r\n    Pattern[\"no_repeat\"] = \"no-repeat\";\r\n})(Pattern = exports.Pattern || (exports.Pattern = {}));\r\nvar weights;\r\n(function (weights) {\r\n    weights[\"lighter\"] = \"lighter\";\r\n    weights[\"normal\"] = \"normal\";\r\n    weights[\"bolder\"] = \"bolder\";\r\n    weights[\"bold\"] = \"bold\";\r\n})(weights = exports.weights || (exports.weights = {}));\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Scene_1 = __webpack_require__(3);\r\nvar Render = /** @class */ (function () {\r\n    function Render(canvas, width, height) {\r\n        var _this = this;\r\n        if (canvas)\r\n            this.canvas = canvas;\r\n        else {\r\n            this.canvas = document.createElement('canvas');\r\n            document.body.appendChild(this.canvas);\r\n        }\r\n        if (width && height) {\r\n            this.canvas.width = width;\r\n            this.canvas.height = height;\r\n        }\r\n        else {\r\n            this.canvas.width = window.innerWidth;\r\n            this.canvas.height = window.innerHeight;\r\n        }\r\n        window.addEventListener('resize', function () {\r\n            _this.canvas.width = window.innerWidth;\r\n            _this.canvas.height = window.innerHeight;\r\n        });\r\n        this.context = this.canvas.getContext('2d');\r\n        var scene = new Scene_1[\"default\"](this);\r\n        this.setScene(scene);\r\n    }\r\n    Render.prototype.add = function (element) {\r\n        this.scene.add(element);\r\n    };\r\n    Render.prototype.remove = function (element) {\r\n        this.scene.remove(element);\r\n    };\r\n    Render.prototype.addMultiple = function (e) {\r\n        var _this = this;\r\n        e.forEach(function (m) { return _this.add(m); });\r\n    };\r\n    Render.prototype.autoUpdateRender = function (func) {\r\n        this.scene.autoRender(func);\r\n    };\r\n    Render.prototype.getWidth = function () {\r\n        return this.canvas.width;\r\n    };\r\n    Render.prototype.getHeight = function () {\r\n        return this.canvas.height;\r\n    };\r\n    Render.prototype.getSize = function () {\r\n        return new Vector_1[\"default\"](this.canvas.width, this.canvas.height);\r\n    };\r\n    Render.prototype.getCenter = function () {\r\n        return new Vector_1[\"default\"](this.canvas.width / 2, this.canvas.height / 2);\r\n    };\r\n    Render.prototype.getCanvasImage = function () {\r\n        return this.canvas.toDataURL();\r\n    };\r\n    /*\r\n      filter () {\r\n        let image = new Image()\r\n        image.src = this.getCanvasImage()\r\n    \r\n      }\r\n    */\r\n    Render.prototype.fullScreen = function () {\r\n        var _this = this;\r\n        var isFull = false;\r\n        document.addEventListener('click', function () {\r\n            if (!isFull) {\r\n                _this.canvas.webkitRequestFullScreen();\r\n            }\r\n        });\r\n    };\r\n    Render.prototype.render = function () {\r\n        this.scene.render();\r\n    };\r\n    Render.prototype.setScene = function (scene) {\r\n        this.scene = scene;\r\n        this.scene.renderer = this;\r\n        this.scene.context = this.context;\r\n        this.scene.smoth(false);\r\n    };\r\n    return Render;\r\n}());\r\nexports[\"default\"] = Render;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Group = /** @class */ (function () {\r\n    function Group() {\r\n        this.childs = [];\r\n        this.position = new Vector_1[\"default\"](0, 0); // la posicion tu la tenias publica, asi que no tiene sentido ese metodo de translate que querias hacer\r\n        this.scale = new Vector_1[\"default\"](1, 1);\r\n    }\r\n    Group.prototype.add = function (child) {\r\n        this.childs.push(child);\r\n    };\r\n    Group.prototype.scaleObject = function (child) {\r\n        var _this = this;\r\n        if (child.type == \"arc\") {\r\n            child.radius *= this.scale.x;\r\n            child.render();\r\n            child.radius /= this.scale.x;\r\n        }\r\n        else if (child.type == \"line\") {\r\n            child.end = new Vector_1[\"default\"](child.end.x * this.scale.x, child.end.y * this.scale.y);\r\n            child.render();\r\n            child.end = new Vector_1[\"default\"](child.end.x / this.scale.x, child.end.y / this.scale.y);\r\n        }\r\n        else if (child.type == \"img\" || child.type == \"rect\") {\r\n            child.width *= this.scale.x;\r\n            child.height *= this.scale.y;\r\n            child.render();\r\n            child.width /= this.scale.x;\r\n            child.height /= this.scale.y;\r\n        }\r\n        else if (child.type == \"poligon\") {\r\n            child.cords.filter(function (pnt) {\r\n                return new Vector_1[\"default\"](pnt.x * _this.scale.x, pnt.y * _this.scale.y);\r\n            });\r\n            child.render();\r\n            child.cords.filter(function (pnt) {\r\n                return new Vector_1[\"default\"](pnt.x / _this.scale.x, pnt.y / _this.scale.y);\r\n            });\r\n        }\r\n        else if (child.type == \"circle\") {\r\n            child.radius *= this.scale.x;\r\n            child.render();\r\n            child.radius /= this.scale.x;\r\n        }\r\n        else {\r\n            throw \"error, no se puede escalar dicho objeto\";\r\n        }\r\n        return child;\r\n    };\r\n    Group.prototype.render = function () {\r\n        var _this = this;\r\n        // this.context.save()\r\n        this.childs.forEach(function (child) {\r\n            child.position.add(_this.position);\r\n            child.context = _this.context;\r\n            child.render();\r\n            child.position.sub(_this.position);\r\n        });\r\n        // this.context.restore()\r\n    };\r\n    return Group;\r\n}());\r\nexports[\"default\"] = Group;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nexports.__esModule = true;\r\nvar Color = /** @class */ (function () {\r\n    function Color(red, green, blue, alpha) {\r\n        if (red === void 0) { red = 0; }\r\n        if (green === void 0) { green = 0; }\r\n        if (blue === void 0) { blue = 0; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        this.red = Math.round(red * 255);\r\n        this.green = Math.round(green * 255);\r\n        this.blue = Math.round(blue * 255);\r\n        this.alpha = alpha;\r\n        if (this.red > 255)\r\n            this.red = 255;\r\n        else if (this.red < 0)\r\n            this.red = 0;\r\n        if (this.green > 255)\r\n            this.green = 255;\r\n        else if (this.green < 0)\r\n            this.green = 0;\r\n        if (this.blue > 255)\r\n            this.blue = 255;\r\n        else if (this.blue < 0)\r\n            this.blue = 0;\r\n        if (this.alpha > 1)\r\n            this.alpha = 1;\r\n        else if (this.alpha < 0)\r\n            this.alpha = 0;\r\n    }\r\n    Color.prototype.setRed = function (color) {\r\n        if (color > 255) {\r\n            this.red = 255;\r\n        }\r\n        else if (color < 0) {\r\n            this.red = 0;\r\n        }\r\n        else {\r\n            this.red = color;\r\n        }\r\n    };\r\n    Color.prototype.setGree = function (color) {\r\n        if (color > 255) {\r\n            this.green = 255;\r\n        }\r\n        else if (color < 0) {\r\n            this.green = 0;\r\n        }\r\n        else {\r\n            this.green = color;\r\n        }\r\n    };\r\n    Color.prototype.setBlue = function (color) {\r\n        if (color > 255) {\r\n            this.blue = 255;\r\n        }\r\n        else if (color < 0) {\r\n            this.blue = 0;\r\n        }\r\n        else {\r\n            this.blue = color;\r\n        }\r\n    };\r\n    Color.prototype.rgba = function () {\r\n        return \"rgba(\" + this.red + \", \" + this.green + \", \" + this.blue + \", \" + this.alpha + \")\";\r\n    };\r\n    Color.prototype.rgb = function () {\r\n        return \"rgb(\" + this.red + \", \" + this.green + \", \" + this.blue + \")\";\r\n    };\r\n    Color.random = function () {\r\n        return new Color(Math.random(), Math.random(), Math.random());\r\n    };\r\n    return Color;\r\n}());\r\nexports[\"default\"] = Color;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Animation = /** @class */ (function (_super) {\r\n    __extends(Animation, _super);\r\n    function Animation(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        _this.loop = true;\r\n        _this.size = new Vector_1[\"default\"](32, 32);\r\n        _this.frame = new Vector_1[\"default\"](0, 0);\r\n        _this.animationPlaying = false;\r\n        _this.load(configuration.src);\r\n        _this.loop = configuration.loop ? configuration.loop : true;\r\n        _this.size = configuration.size ? configuration.size : new Vector_1[\"default\"](32, 32);\r\n        _this.scale = configuration.scale ? configuration.scale : new Vector_1[\"default\"](1, 1);\r\n        _this.frameRate = configuration.frameRate ? configuration.frameRate : 24;\r\n        _this.animations = configuration.animations;\r\n        _this.x = 0;\r\n        _this.y = 0;\r\n        return _this;\r\n    }\r\n    Animation.prototype.playAnimation = function (name) {\r\n        if (!this.animationPlaying) {\r\n            this.animationPlaying = true;\r\n            this.frame.x = 0;\r\n            this.frame.y = this.animations[name][1];\r\n            this.reproduceAnimation(name);\r\n        }\r\n    };\r\n    Animation.prototype.reproduceAnimation = function (name) {\r\n        var _this = this;\r\n        this.x = this.size.x * this.frame.x;\r\n        this.y = this.size.y * this.frame.y;\r\n        this.frame.x += 1;\r\n        if (this.frame.x >= this.animations[name][0]) {\r\n            this.animationPlaying = false;\r\n        }\r\n        else {\r\n            setTimeout(function () { return _this.reproduceAnimation(name); }, this.frameRate);\r\n        }\r\n    };\r\n    Animation.prototype.mouseDown = function () {\r\n    };\r\n    Animation.prototype.onClick = function (func) { };\r\n    Animation.prototype.load = function (src) {\r\n        this.image = new Image();\r\n        this.image.src = src;\r\n    };\r\n    Animation.prototype.getSize = function () {\r\n        return new Vector_1[\"default\"](this.size.x * this.scale.x, this.size.y * this.scale.y);\r\n    };\r\n    Animation.prototype.render = function () {\r\n        this.context.drawImage(this.image, this.x, this.y, this.size.x, this.size.y, this.position.x, this.position.y, this.size.x * this.scale.x, this.size.y * this.scale.y);\r\n    };\r\n    Animation.prototype.destroy = function () {\r\n        clearInterval(this.interval);\r\n    };\r\n    return Animation;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Animation;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar LinearGradient_1 = __webpack_require__(6);\r\nvar Ellipse = /** @class */ (function (_super) {\r\n    __extends(Ellipse, _super);\r\n    function Ellipse(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        _this.radiusX = 10;\r\n        _this.radiusY = 5;\r\n        if (configuration) {\r\n            _this.lineWidth = configuration.lineWidth ? configuration.lineWidth : _this.lineWidth;\r\n            _this.lineColor = configuration.lineColor ? configuration.lineColor : _this.lineColor;\r\n            _this.radiusX = configuration.radiusX ? configuration.radiusX : _this.radiusX;\r\n            _this.radiusY = configuration.radiusY ? configuration.radiusY : _this.radiusY;\r\n            _this.stroke = configuration.stroke ? configuration.stroke : _this.stroke;\r\n            _this.color = configuration.color ? configuration.color : _this.color;\r\n            _this.fill = configuration.fill ? configuration.fill : _this.fill;\r\n            if (configuration.linearGradient) {\r\n                _this.linearGradient = configuration.linearGradient;\r\n                // this.render = this.renderGradient\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Ellipse.prototype.renderGradient = function () {\r\n        this.color = new LinearGradient_1[\"default\"]({\r\n            context: this.context,\r\n            colors: this.linearGradient,\r\n            size: new Vector_1[\"default\"](this.position.x, this.position.y + this.radiusY),\r\n            position: new Vector_1[\"default\"](this.position.x, this.position.y - this.radiusY / 2)\r\n        }).gradient;\r\n        if (this.fill) {\r\n            this.context.beginPath();\r\n            this.context.fillStyle = this.color;\r\n            this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI);\r\n            this.context.fill();\r\n        }\r\n        if (this.stroke) {\r\n            this.context.lineWidth = this.lineWidth;\r\n            this.context.strokeStyle = this.lineColor;\r\n            this.context.stroke();\r\n        }\r\n    };\r\n    Ellipse.prototype.render = function () {\r\n        this.renderGradient();\r\n        /*\r\n        if (this.fill) {\r\n          this.context.beginPath()\r\n          this.context.fillStyle = this.color\r\n          this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n          this.context.fill()\r\n        }\r\n        if (this.stroke) {\r\n          this.context.lineWidth = this.lineWidth\r\n          this.context.strokeStyle = this.lineColor\r\n          this.context.stroke()\r\n        }\r\n        */\r\n    };\r\n    return Ellipse;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Ellipse;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Poligon = /** @class */ (function (_super) {\r\n    __extends(Poligon, _super);\r\n    function Poligon(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        if (configuration.color)\r\n            _this.color = configuration.color;\r\n        if (configuration.stroke)\r\n            _this.stroke = configuration.stroke;\r\n        if (configuration.cords)\r\n            _this.cords = configuration.cords.slice(1, configuration.cords.length);\r\n        if (configuration.fill)\r\n            _this.fill = configuration.fill;\r\n        _this.position = configuration.cords.slice[0];\r\n        _this.cords.filter(function (pnt) {\r\n            return new Vector_1[\"default\"](pnt.x - _this.position.x, pnt.y - _this.position.y);\r\n        });\r\n        return _this;\r\n    }\r\n    Poligon.prototype.render = function () {\r\n        this.context.beginPath();\r\n        this.context.strokeStyle = this.lineColor;\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.fillStyle = this.color;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.moveTo(this.cords[0].x, this.cords[0].y);\r\n        for (var i = 0; i < this.cords.length; i++) {\r\n            this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y);\r\n        }\r\n        this.context.closePath();\r\n        this.context.fill();\r\n        if (this.stroke)\r\n            this.context.stroke;\r\n    };\r\n    return Poligon;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Poligon;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar CircleEvents_1 = __webpack_require__(7);\r\nvar Circle = /** @class */ (function (_super) {\r\n    __extends(Circle, _super);\r\n    function Circle(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.radius = 5;\r\n        if (config) {\r\n            _this.radius = config.radius ? config.radius : 5;\r\n        }\r\n        return _this;\r\n    }\r\n    Circle.prototype.selfRender = function () {\r\n        this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\r\n        if (this.fill)\r\n            this.context.fill();\r\n        if (this.stroke)\r\n            this.context.stroke();\r\n    };\r\n    return Circle;\r\n}(CircleEvents_1[\"default\"]));\r\nexports[\"default\"] = Circle;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Rect = /** @class */ (function (_super) {\r\n    __extends(Rect, _super);\r\n    function Rect(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.width = 1;\r\n        _this.height = 1;\r\n        if (data.color)\r\n            _this.color = data.color;\r\n        if (data.width)\r\n            _this.width = data.width;\r\n        if (data.height)\r\n            _this.height = data.height;\r\n        if (data.fill)\r\n            _this.fill = data.fill;\r\n        if (data.stroke)\r\n            _this.stroke = data.stroke;\r\n        if (data.lineWidth)\r\n            _this.lineWidth = data.lineWidth;\r\n        if (data.lineColor)\r\n            _this.lineColor = data.lineColor;\r\n        return _this;\r\n    }\r\n    Rect.prototype.render = function () {\r\n        this.context.fillStyle = this.color;\r\n        this.context.beginPath();\r\n        if (this.fill) {\r\n            this.context.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n        }\r\n        if (this.stroke) {\r\n            this.context.strokeStyle = this.lineColor;\r\n            this.context.lineWidth = this.lineWidth;\r\n            this.context.strokeRect(this.position.x, this.position.y, this.width, this.height);\r\n        }\r\n    };\r\n    return Rect;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Rect;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Line = /** @class */ (function (_super) {\r\n    __extends(Line, _super);\r\n    function Line(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.start = new Vector_1[\"default\"](0, 0);\r\n        _this.end = new Vector_1[\"default\"](1, 1);\r\n        if (data.start)\r\n            _this.start = data.start;\r\n        if (data.end)\r\n            _this.end = data.end;\r\n        if (data.color)\r\n            _this.color = data.color;\r\n        _this.width = 5;\r\n        _this.position = data.start;\r\n        _this.end = new Vector_1[\"default\"](_this.end.x - _this.start.x, _this.end.y - _this.start.y);\r\n        return _this;\r\n    }\r\n    Line.prototype.render = function () {\r\n        this.context.beginPath();\r\n        this.context.strokeStyle = this.color;\r\n        this.context.lineWidth = this.width;\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.moveTo(this.position.x, this.position.y);\r\n        this.context.lineTo(this.end.x + this.position.x, this.end.y + this.position.y);\r\n        this.context.stroke();\r\n    };\r\n    return Line;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Line;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        _this.fontConfig = '';\r\n        _this.lineHeight = 12;\r\n        _this.maxWidth = 500;\r\n        _this.textAlign = configuration.textAlign ? configuration.textAlign : 'center';\r\n        _this.textBaseline = configuration.textBaseline ? configuration.textBaseline : 'middle';\r\n        _this.size = configuration.size ? configuration.size : 12;\r\n        _this.family = configuration.family ? configuration.family : 'Arial';\r\n        _this.content = configuration.content ? configuration.content : '';\r\n        return _this;\r\n    }\r\n    Text.prototype.wrapText = function () {\r\n        var x = this.position.x;\r\n        var y = this.position.y;\r\n        var words = this.content.split(' ');\r\n        var line = '';\r\n        for (var n = 0; n < words.length; n++) {\r\n            var testLine = line + words[n] + ' ';\r\n            var metrics = this.context.measureText(testLine);\r\n            var testWidth = metrics.width;\r\n            if (testWidth > this.maxWidth && n > 0) {\r\n                this.context.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += this.lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.context.fillText(line, x, y);\r\n    };\r\n    Text.prototype.render = function () {\r\n        this.context.fillStyle = this.color;\r\n        this.context.font = this.weight + \" \" + this.size + \"px \" + this.family;\r\n        this.context.textAlign = this.textAlign;\r\n        this.context.textBaseline = this.textBaseline;\r\n        if (this.stroke) {\r\n            this.context.strokeText(this.content, this.position.x, this.position.y);\r\n        }\r\n        this.context.fillText(this.content, this.position.x, this.position.y);\r\n    };\r\n    return Text;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = Text;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar CircleEvents_1 = __webpack_require__(7);\r\nvar Arc = /** @class */ (function (_super) {\r\n    __extends(Arc, _super);\r\n    function Arc(configuration) {\r\n        var _this = _super.call(this, configuration) || this;\r\n        if (configuration) {\r\n            _this.eAngl = configuration.eAngl ? configuration.eAngl : 0;\r\n            _this.aAngl = configuration.aAngl ? configuration.aAngl : Math.PI;\r\n        }\r\n        else {\r\n            _this.eAngl = 0;\r\n            _this.aAngl = Math.PI;\r\n        }\r\n        return _this;\r\n    }\r\n    Arc.prototype.renderChild = function () {\r\n        var _this = this;\r\n        this.childs.forEach(function (c) { return c.context = _this.context; });\r\n        this.childs.forEach(function (c) { return c.render(); });\r\n        this.context.beginPath();\r\n        this.context.arc(0, 0, this.radius, this.eAngl, this.aAngl, true);\r\n        if (this.fill) {\r\n            this.context.fillStyle = this.color;\r\n            this.context.fill();\r\n        }\r\n        if (this.stroke) {\r\n            this.context.strokeStyle = this.lineColor;\r\n            this.context.lineWidth = this.lineWidth;\r\n            this.context.stroke();\r\n        }\r\n    };\r\n    return Arc;\r\n}(CircleEvents_1[\"default\"]));\r\nexports[\"default\"] = Arc;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar BezierCurve = /** @class */ (function (_super) {\r\n    __extends(BezierCurve, _super);\r\n    function BezierCurve(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.cords = config.cords ? config.cords : [[10, 10], [80, 20], [30, 30]];\r\n        return _this;\r\n    }\r\n    BezierCurve.prototype.render = function () {\r\n        this.context.save();\r\n        this.context.beginPath();\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.lineWidth = this.lineWidth;\r\n        this.context.strokeStyle = this.lineColor;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.translate(this.position.x, this.position.y);\r\n        this.context.bezierCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1], this.cords[2][0], this.cords[2][1]);\r\n        this.context.stroke();\r\n        this.context.restore();\r\n    };\r\n    return BezierCurve;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = BezierCurve;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Graphic_1 = __webpack_require__(1);\r\nvar QuadraticCurve = /** @class */ (function (_super) {\r\n    __extends(QuadraticCurve, _super);\r\n    function QuadraticCurve(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.color = config.color ? config.color : 'black';\r\n        _this.width = config.width ? config.width : 5;\r\n        _this.cords = config.cords ? config.cords : [[20, 100], [200, 20]];\r\n        return _this;\r\n    }\r\n    QuadraticCurve.prototype.render = function () {\r\n        this.context.save();\r\n        this.context.beginPath();\r\n        this.context.lineCap = this.lineCap;\r\n        this.context.lineJoin = this.lineJoin;\r\n        this.context.lineWidth = this.width;\r\n        this.context.strokeStyle = this.color;\r\n        this.context.moveTo(this.position.x, this.position.y);\r\n        this.context.quadraticCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1]);\r\n        this.context.stroke();\r\n        this.context.restore();\r\n    };\r\n    return QuadraticCurve;\r\n}(Graphic_1[\"default\"]));\r\nexports[\"default\"] = QuadraticCurve;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Vector_1 = __webpack_require__(0);\r\nvar Event_1 = __webpack_require__(8);\r\nvar Mouse = /** @class */ (function (_super) {\r\n    __extends(Mouse, _super);\r\n    function Mouse() {\r\n        var _this = _super.call(this) || this;\r\n        _this.position = new Vector_1[\"default\"](0, 0);\r\n        _this.clicked = false;\r\n        _this.move(function (self, event) {\r\n            _this.position.x = event.clientX;\r\n            _this.position.y = event.clientY;\r\n        });\r\n        return _this;\r\n    }\r\n    Mouse.prototype.move = function (func) {\r\n        if (!this.events.mousemoveActive) {\r\n            this.initEvent('mousemove');\r\n            this.events.mousemoveActive = true;\r\n        }\r\n        this.events.mousemove.push(func);\r\n    };\r\n    Mouse.prototype.up = function (func) {\r\n        if (!this.events.mouseupActive) {\r\n            this.initEvent('mouseup');\r\n            this.events.mouseupActive = true;\r\n        }\r\n    };\r\n    Mouse.prototype.down = function (func) {\r\n        if (!this.events.mousedownActive) {\r\n            this.initEvent('mousedown');\r\n            this.events.mousedownActive = true;\r\n        }\r\n    };\r\n    return Mouse;\r\n}(Event_1[\"default\"]));\r\nexports[\"default\"] = Mouse;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexports.__esModule = true;\r\nvar Event_1 = __webpack_require__(8);\r\nvar KeyBoard = /** @class */ (function (_super) {\r\n    __extends(KeyBoard, _super);\r\n    function KeyBoard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.keys = [];\r\n        return _this;\r\n    }\r\n    KeyBoard.prototype.press = function (key, func) {\r\n        var _this = this;\r\n        var func2 = function (self, event) {\r\n            // console.log(event.key === key)\r\n            // console.log(event.key, key)\r\n            if (event.key === key) {\r\n                // console.log(func)\r\n                func(_this, event);\r\n            }\r\n        };\r\n        if (!this.events.keypressActive) {\r\n            this.events.keypressActive = true;\r\n            this.initEvent('keypress');\r\n        }\r\n        this.events.keypress.push(func2);\r\n    };\r\n    KeyBoard.prototype.down = function (key, func) {\r\n        var _this = this;\r\n        func = function (self, event) {\r\n            if (event.key === key)\r\n                func(_this, event);\r\n        };\r\n        if (!this.events.keydownActive) {\r\n            this.events.keydownActive = true;\r\n            this.initEvent('keydown');\r\n        }\r\n        this.events.keydown.push(func);\r\n    };\r\n    KeyBoard.prototype.up = function (key, func) {\r\n        var _this = this;\r\n        var func2 = function (self, event) {\r\n            if (event.key === key)\r\n                func(_this, event);\r\n        };\r\n        if (!this.events.keyupActive) {\r\n            this.events.keyupActive = true;\r\n            this.initEvent('keyup');\r\n        }\r\n        this.events.keyup.push(func2);\r\n    };\r\n    return KeyBoard;\r\n}(Event_1[\"default\"]));\r\nexports[\"default\"] = KeyBoard;\r\n\n\n/***/ })\n/******/ ]);\n});","\r\nimport GameObject from '../Managers/GameObject'\r\n\r\nclass ScriptManager {\r\n  private methods   : Object = {}\r\n  private gameObject: GameObject\r\n\r\n  constructor (gameObject: GameObject) {\r\n    this.gameObject = gameObject\r\n  }\r\n\r\n  add (scripts: Array<Object>): void {\r\n    for (let script of scripts) {\r\n      this.one(script)\r\n    }\r\n  }\r\n\r\n  one (script): void {\r\n    for (let method of Object.keys(script)) {\r\n      if (!this.methods[method]) {\r\n        this.methods[method] = []\r\n      }\r\n      this.methods[method].push(script[method].bind(this.gameObject))\r\n    }\r\n  }\r\n\r\n  run (name, params): void {\r\n    if (this.methods[name]) {\r\n      for (let method of this.methods[name]) {\r\n        method(...params)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScriptManager\r\n","\r\nimport {Animation} from 'dibujo'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nclass AnimationComponent {\r\n\r\n  private src: string\r\n  private size: Vector2D\r\n  private frameRate: number\r\n  private loop: boolean\r\n\r\n  constructor(config) {\r\n    this.src = config.src\r\n    this.loop = config.loop\r\n    this.size = config.size ? config.size : 100\r\n    this.frameRate = config.frameRate ? config.frameRate : 1000 / 60\r\n  }\r\n\r\n  load(gameObject, Scene) {\r\n    const animation = new Animation(\r\n      this.src,\r\n      gameObject.Transform.scale,\r\n      gameObject.Transform.position,\r\n      this.frameRate,\r\n      this.size)\r\n    Scene.stage.add(animation)\r\n  }\r\n} \r\n\r\nexport default AnimationComponent\r\n","\r\n//import id from '../utils/id'\r\n\r\nclass Identifier {\r\n  public tags : Array<string>\r\n  public id//   : string = id()\r\n  public name : string\r\n\r\n  constructor (name?, tags?) {\r\n    this.name = name\r\n    this.tags = tags\r\n  }\r\n}\r\n\r\nexport default Identifier\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vector\"] = factory();\n\telse\n\t\troot[\"Vector\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar Vector2D_1 = __webpack_require__(1);\r\nexports.Vector2D = Vector2D_1[\"default\"];\r\nvar Vector3D_1 = __webpack_require__(2);\r\nexports.Vector3D = Vector3D_1[\"default\"];\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar Vector2D = (function () {\r\n    function Vector2D(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Vector2D.prototype.add = function (vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n    };\r\n    Vector2D.prototype.sub = function (vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n    };\r\n    Vector2D.prototype.mult = function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n    };\r\n    Vector2D.prototype.div = function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n    };\r\n    Vector2D.prototype.inverse = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n    };\r\n    Vector2D.prototype.mag = function () {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    };\r\n    Vector2D.prototype.dot = function (vector) {\r\n        return this.x * vector.x + this.y * vector.y;\r\n    };\r\n    Vector2D.prototype.distance = function (vector) {\r\n        return Vector2D.sub(this, vector).mag();\r\n    };\r\n    Vector2D.prototype.angle = function () {\r\n        return Math.atan2(this.y, this.x);\r\n    };\r\n    Vector2D.prototype.copy = function () {\r\n        return new Vector2D(this.x, this.y);\r\n    };\r\n    Vector2D.prototype.normalize = function () {\r\n        this.div(this.mag());\r\n    };\r\n    Vector2D.prototype.setMag = function (mag) {\r\n        this.normalize();\r\n        this.mult(mag);\r\n    };\r\n    Vector2D.prototype.setAngle = function (angle) {\r\n        var magnitude = this.mag();\r\n        this.x = magnitude * Math.cos(angle);\r\n        this.y = magnitude * Math.sin(angle);\r\n    };\r\n    Vector2D.prototype.addAngle = function (angle) {\r\n        this.setAngle(this.angle() + angle);\r\n    };\r\n    Vector2D.prototype.limit = function (scalar) {\r\n        if (this.mag() > scalar) {\r\n            this.setMag(scalar);\r\n        }\r\n    };\r\n    Vector2D.prototype.moveTowards = function (vector, speed, stop) {\r\n        if (this.distance(vector) > stop) {\r\n            var unit = Vector2D.normalize(vector);\r\n            unit.mult(speed);\r\n            this.add(unit);\r\n        }\r\n    };\r\n    Vector2D.prototype.zero = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    };\r\n    Vector2D.add = function (vector1, vector2) {\r\n        return new Vector2D(vector1.x + vector2.x, vector1.y + vector2.y);\r\n    };\r\n    Vector2D.sub = function (vector1, vector2) {\r\n        return new Vector2D(vector1.x - vector2.x, vector1.y - vector2.y);\r\n    };\r\n    Vector2D.mult = function (vector, scalar) {\r\n        return new Vector2D(vector.x * scalar, vector.y * scalar);\r\n    };\r\n    Vector2D.div = function (vector, scalar) {\r\n        return new Vector2D(vector.x / scalar, vector.y / scalar);\r\n    };\r\n    Vector2D.inverse = function (vector) {\r\n        return new Vector2D(vector.x * -1, vector.y * -1);\r\n    };\r\n    Vector2D.distance = function (vector1, vector2) {\r\n        return this.sub(vector1, vector2).mag();\r\n    };\r\n    Vector2D.normalize = function (vector) {\r\n        return this.div(vector, vector.mag());\r\n    };\r\n    Vector2D.cross = function (vector1, vector2) {\r\n        return vector1.x * vector2.y - vector2.x * vector1.y;\r\n    };\r\n    Vector2D.random = function (x, y) {\r\n        if (Math.random() > 0.5) {\r\n            return new Vector2D(x * Math.random(), y * Math.random());\r\n        }\r\n        else {\r\n            return new Vector2D(-x * Math.random(), -y * Math.random());\r\n        }\r\n    };\r\n    return Vector2D;\r\n}());\r\nexports.__esModule = true;\r\nexports[\"default\"] = Vector2D;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar Vector3D = (function () {\r\n    function Vector3D(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    Vector3D.prototype.add = function (vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n    };\r\n    Vector3D.prototype.sub = function (vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n    };\r\n    Vector3D.prototype.mult = function (scalar) {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n        this.z *= scalar;\r\n    };\r\n    Vector3D.prototype.div = function (scalar) {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n        this.z /= scalar;\r\n    };\r\n    Vector3D.prototype.inverse = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        this.z *= -1;\r\n    };\r\n    Vector3D.prototype.mag = function () {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    };\r\n    Vector3D.prototype.dot = function (vector) {\r\n        return this.x * vector.x + this.y * vector.y + this.z * vector.z;\r\n    };\r\n    Vector3D.prototype.distance = function (vector) {\r\n        return Vector3D.sub(this, vector).mag();\r\n    };\r\n    Vector3D.prototype.angle = function () {\r\n        return Math.atan2(this.y, this.x);\r\n    };\r\n    Vector3D.prototype.copy = function () {\r\n        return new Vector3D(this.x, this.y, this.z);\r\n    };\r\n    Vector3D.prototype.normalize = function () {\r\n        this.div(this.mag());\r\n    };\r\n    Vector3D.prototype.setMag = function (mag) {\r\n        this.normalize();\r\n        this.mult(mag);\r\n    };\r\n    Vector3D.prototype.setAngle = function (angle) {\r\n        var magnitude = this.mag();\r\n        this.x = magnitude * Math.cos(angle);\r\n        this.y = magnitude * Math.sin(angle);\r\n    };\r\n    Vector3D.prototype.addAngle = function (angle) {\r\n        this.setAngle(this.angle() + angle);\r\n    };\r\n    Vector3D.prototype.limit = function (scalar) {\r\n        if (this.mag() > scalar) {\r\n            this.setMag(scalar);\r\n        }\r\n    };\r\n    Vector3D.prototype.moveTowards = function (vector, speed, stop) {\r\n        if (this.distance(vector) > stop) {\r\n            var unit = Vector3D.normalize(vector);\r\n            unit.mult(speed);\r\n            this.add(unit);\r\n        }\r\n    };\r\n    Vector3D.prototype.zero = function () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    };\r\n    Vector3D.add = function (vector1, vector2) {\r\n        return new Vector3D(vector1.x + vector2.x, vector1.y + vector2.y, vector1.z + vector2.z);\r\n    };\r\n    Vector3D.sub = function (vector1, vector2) {\r\n        return new Vector3D(vector1.x - vector2.x, vector1.y - vector2.y, vector1.z - vector2.z);\r\n    };\r\n    Vector3D.mult = function (vector, scalar) {\r\n        return new Vector3D(vector.x * scalar, vector.y * scalar, vector.z * scalar);\r\n    };\r\n    Vector3D.div = function (vector, scalar) {\r\n        return new Vector3D(vector.x / scalar, vector.y / scalar, vector.z / scalar);\r\n    };\r\n    Vector3D.inverse = function (vector) {\r\n        return new Vector3D(vector.x * -1, vector.y * -1, vector.z * -1);\r\n    };\r\n    Vector3D.distance = function (vector1, vector2) {\r\n        return this.sub(vector1, vector2).mag();\r\n    };\r\n    Vector3D.normalize = function (vector) {\r\n        return this.div(vector, vector.mag());\r\n    };\r\n    Vector3D.cross = function (vector1, vector2) {\r\n        return vector1.x * vector2.y - vector2.x * vector1.y;\r\n    };\r\n    Vector3D.random = function (x, y, z) {\r\n        if (Math.random() > 0.5) {\r\n            return new Vector3D(x * Math.random(), y * Math.random(), z * Math.random());\r\n        }\r\n        else {\r\n            return new Vector3D(-x * Math.random(), -y * Math.random(), -z * Math.random());\r\n        }\r\n    };\r\n    return Vector3D;\r\n}());\r\nexports.__esModule = true;\r\nexports[\"default\"] = Vector3D;\r\n\n\n/***/ })\n/******/ ]);\n});","\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Transform {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number = 0\r\n\r\n  constructor(configuration?) {\r\n    if (configuration) {\r\n      if (configuration.position) this.position = configuration.position\r\n      if (configuration.rotation) this.rotation = configuration.rotation\r\n      if (configuration.scale) this.scale = configuration.scale\r\n    }\r\n  }\r\n\r\n  rotate(rotation): void {\r\n    this.rotation += rotation\r\n  }\r\n\r\n  setPosition(x, y): void {\r\n    this.position = new Vector2D(x, y)\r\n  }\r\n\r\n  globalTranslate(x, y): void {\r\n    this.position.add(new Vector2D(x, y))\r\n  }\r\n\r\n  translate(x, y): void {\r\n    const translationY = Vector2D.angleMagnitude(this.rotation, y)\r\n    const translationX = Vector2D.angleMagnitude(this.rotation + Math.PI / 2, x)\r\n    this.position.add(new Vector2D(translationY[0], translationY[1]))\r\n    this.position.add(new Vector2D(translationX[0], translationX[1]))\r\n  }\r\n}\r\n\r\nexport default Transform \r\n","\r\nimport Sprite from 'dibujo'\r\nimport { Vector2D } from 'vector_class'\r\nimport GameObject from '../Managers/GameObject'\r\nimport GameScene from '../Managers/GameScene'\r\n\r\nclass SpriteComponent {\r\n  private src: string\r\n  public sprite: Sprite\r\n\r\n  constructor(src) {\r\n    this.src = src\r\n  }\r\n\r\n  load(gameObject: GameObject, Scene: GameScene): void {\r\n    console.log(this.src,\r\n      gameObject.Transform.position,\r\n      gameObject.Transform.scale,\r\n      gameObject.Transform.rotation)\r\n    this.sprite = new Sprite(\r\n      this.src,\r\n      gameObject.Transform.position,\r\n      gameObject.Transform.scale,\r\n      gameObject.Transform.rotation,\r\n      new Vector2D(0, 0))\r\n    Scene.stage.add(this.sprite)\r\n  }\r\n}\r\n\r\nexport default SpriteComponent\r\n","!function(t,i){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define([],i):\"object\"==typeof exports?exports.DibujoJs=i():t.DibujoJs=i()}(window,function(){return function(t){var i={};function o(n){if(i[n])return i[n].exports;var e=i[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,o),e.l=!0,e.exports}return o.m=t,o.c=i,o.d=function(t,i,n){o.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:n})},o.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.t=function(t,i){if(1&i&&(t=o(t)),8&i)return t;if(4&i&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&i&&\"string\"!=typeof t)for(var e in t)o.d(n,e,function(i){return t[i]}.bind(null,e));return n},o.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(i,\"a\",i),i},o.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},o.p=\"\",o(o.s=10)}([function(t,i,o){!function(i,o){t.exports=o()}(0,function(){return function(t){var i={};function o(n){if(i[n])return i[n].exports;var e=i[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,o),e.l=!0,e.exports}return o.m=t,o.c=i,o.d=function(t,i,n){o.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},o.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(i,\"a\",i),i},o.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},o.p=\"\",o(o.s=0)}([function(t,i,o){\"use strict\";var n=o(1);i.Vector2D=n.default;var e=o(2);i.Vector3D=e.default},function(t,i,o){\"use strict\";var n=function(){function t(t,i){this.x=t,this.y=i}return t.prototype.add=function(t){this.x+=t.x,this.y+=t.y},t.prototype.sub=function(t){this.x-=t.x,this.y-=t.y},t.prototype.mult=function(t){this.x*=t,this.y*=t},t.prototype.div=function(t){this.x/=t,this.y/=t},t.prototype.inverse=function(){this.x*=-1,this.y*=-1},t.prototype.mag=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.distance=function(i){return t.sub(this,i).mag()},t.prototype.angle=function(){return Math.atan2(this.y,this.x)},t.prototype.copy=function(){return new t(this.x,this.y)},t.prototype.normalize=function(){this.div(this.mag())},t.prototype.setMag=function(t){this.normalize(),this.mult(t)},t.prototype.setAngle=function(t){var i=this.mag();this.x=i*Math.cos(t),this.y=i*Math.sin(t)},t.prototype.addAngle=function(t){this.setAngle(this.angle()+t)},t.prototype.limit=function(t){this.mag()>t&&this.setMag(t)},t.prototype.moveTowards=function(i,o,n){if(this.distance(i)>n){var e=t.normalize(i);e.mult(o),this.add(e)}},t.prototype.zero=function(){this.x=0,this.y=0},t.add=function(i,o){return new t(i.x+o.x,i.y+o.y)},t.sub=function(i,o){return new t(i.x-o.x,i.y-o.y)},t.mult=function(i,o){return new t(i.x*o,i.y*o)},t.div=function(i,o){return new t(i.x/o,i.y/o)},t.inverse=function(i){return new t(-1*i.x,-1*i.y)},t.distance=function(t,i){return this.sub(t,i).mag()},t.normalize=function(t){return this.div(t,t.mag())},t.cross=function(t,i){return t.x*i.y-i.x*t.y},t.random=function(i,o){return Math.random()>.5?new t(i*Math.random(),o*Math.random()):new t(-i*Math.random(),-o*Math.random())},t}();i.__esModule=!0,i.default=n},function(t,i,o){\"use strict\";var n=function(){function t(t,i,o){this.x=t,this.y=i,this.z=o}return t.prototype.add=function(t){this.x+=t.x,this.y+=t.y,this.z+=t.z},t.prototype.sub=function(t){this.x-=t.x,this.y-=t.y,this.z-=t.z},t.prototype.mult=function(t){this.x*=t,this.y*=t,this.z*=t},t.prototype.div=function(t){this.x/=t,this.y/=t,this.z/=t},t.prototype.inverse=function(){this.x*=-1,this.y*=-1,this.z*=-1},t.prototype.mag=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},t.prototype.distance=function(i){return t.sub(this,i).mag()},t.prototype.angle=function(){return Math.atan2(this.y,this.x)},t.prototype.copy=function(){return new t(this.x,this.y,this.z)},t.prototype.normalize=function(){this.div(this.mag())},t.prototype.setMag=function(t){this.normalize(),this.mult(t)},t.prototype.setAngle=function(t){var i=this.mag();this.x=i*Math.cos(t),this.y=i*Math.sin(t)},t.prototype.addAngle=function(t){this.setAngle(this.angle()+t)},t.prototype.limit=function(t){this.mag()>t&&this.setMag(t)},t.prototype.moveTowards=function(i,o,n){if(this.distance(i)>n){var e=t.normalize(i);e.mult(o),this.add(e)}},t.prototype.zero=function(){this.x=0,this.y=0,this.z=0},t.add=function(i,o){return new t(i.x+o.x,i.y+o.y,i.z+o.z)},t.sub=function(i,o){return new t(i.x-o.x,i.y-o.y,i.z-o.z)},t.mult=function(i,o){return new t(i.x*o,i.y*o,i.z*o)},t.div=function(i,o){return new t(i.x/o,i.y/o,i.z/o)},t.inverse=function(i){return new t(-1*i.x,-1*i.y,-1*i.z)},t.distance=function(t,i){return this.sub(t,i).mag()},t.normalize=function(t){return this.div(t,t.mag())},t.cross=function(t,i){return t.x*i.y-i.x*t.y},t.random=function(i,o,n){return Math.random()>.5?new t(i*Math.random(),o*Math.random(),n*Math.random()):new t(-i*Math.random(),-o*Math.random(),-n*Math.random())},t}();i.__esModule=!0,i.default=n}])})},function(t,i,o){\"use strict\";var n=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var o in i)i.hasOwnProperty(o)&&(t[o]=i[o])};return function(i,o){function n(){this.constructor=i}t(i,o),i.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();i.__esModule=!0;var e=o(0),s=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return n(i,t),i.prototype.separate=function(t,i){var o=e.Vector2D.normalize(t);o.mult(this.radius+i.radius),o.sub(t),this.position.add(o)},i.prototype.checkCollision=function(t){var i=e.Vector2D.sub(this.position,t.position);if(i.mag()<this.radius+t.radius&&i.mag())return i},i.prototype.collision=function(t){var i=this.checkCollision(t);return!!i&&(this.separate(i,t),!0)},i}(o(7).default);i.default=s},function(t,i,o){\"use strict\";i.__esModule=!0;var n=o(0),e=function(){return function(t,i){this.position=new n.Vector2D(0,0),this.size=new n.Vector2D(10,10),this.position=t,this.size=i}}();i.default=e},function(t,i,o){\"use strict\";var n=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var o in i)i.hasOwnProperty(o)&&(t[o]=i[o])};return function(i,o){function n(){this.constructor=i}t(i,o),i.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();i.__esModule=!0;var e=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return n(i,t),i.prototype.check=function(t){return this.position.x<t.position.x+t.size.x&&this.position.x+this.size.x>t.position.x&&this.position.y<t.position.y+t.size.y&&this.size.y+this.position.y>t.position.y},i}(o(2).default);i.default=e},function(t,i,o){\"use strict\";i.__esModule=!0;var n=function(){function t(){this.maxPositionX=window.innerWidth,this.minPositionX=0,this.maxPositionY=window.innerHeight,this.minPositionY=0,this.particles=[]}return t.prototype.setBounds=function(t,i,o,n){this.maxPositionX=t,this.minPositionX=i,this.maxPositionY=o,this.minPositionY=n},t.prototype.add=function(t){this.particles.push(t)},t.prototype.remove=function(t){this.particles.slice(this.particles.indexOf(t),1)},t.prototype.update=function(){var t=this;this.particles.forEach(function(i){i.dynamic&&(t.insideWorldBounds(i),i.update()),t.particles.forEach(function(t){i.check(t)})})},t.prototype.insideWorldBounds=function(t){t.position.x+t.radius>this.maxPositionX?(t.position.x=this.maxPositionX-t.radius,t.velocity.x*=-1):t.position.x-t.radius<this.minPositionX&&(t.position.x=this.minPositionX+t.radius,t.velocity.x*=-1),t.position.y+t.radius>this.maxPositionY?(t.position.y=this.maxPositionY-t.radius,t.velocity.y*=-1):t.position.y-t.radius<this.minPositionY&&(t.position.y=this.minPositionY+t.radius,t.velocity.y*=-1)},t}();i.default=n},function(t,i,o){\"use strict\";i.__esModule=!0;var n=o(4);i.World=n.default;var e=o(3);i.RectCollider=e.default},function(t,i,o){\"use strict\";var n=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var o in i)i.hasOwnProperty(o)&&(t[o]=i[o])};return function(i,o){function n(){this.constructor=i}t(i,o),i.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}();i.__esModule=!0;var e=o(0),s=function(t){function i(i,o,n){var s=t.call(this,i,n)||this;return s.velocity=new e.Vector2D(0,0),s.acceleration=new e.Vector2D(0,0),s.restitution=1,s.dynamic=!0,s.mass=Math.PI*Math.pow(s.radius,2),s.restitution=o,s}return n(i,t),i.prototype.addForce=function(t){this.acceleration.add(t)},i.prototype.momentum=function(){return e.Vector2D.mult(this.velocity,this.mass)},i.prototype.inelasticCollision=function(t){var i=this.velocity,o=t.velocity,n=t.momentum();n.add(this.momentum());var s=this.mass+t.mass;this.velocity=e.Vector2D.sub(o,i),this.velocity.mult(this.restitution*t.mass),this.velocity.add(n),this.velocity.div(s),t.velocity=e.Vector2D.sub(i,o),t.velocity.mult(t.restitution*this.mass),t.velocity.add(n),t.velocity.div(s)},i.prototype.update=function(){this.acceleration.div(this.mass),this.velocity.add(this.acceleration),this.position.add(this.velocity),this.acceleration.zero()},i.prototype.check=function(i){t.prototype.collision.call(this,i)&&(i.dynamic?this.inelasticCollision(i):this.velocity.inverse)},i}(o(1).default);i.default=s},function(t,i,o){\"use strict\";i.__esModule=!0;var n=o(0),e=function(){return function(t,i){this.position=new n.Vector2D(0,0),this.radius=5,this.position=t,this.radius=i}}();i.default=e},function(t,i,o){\"use strict\";i.__esModule=!0;var n=function(){function t(){this.maxPositionX=window.innerWidth,this.minPositionX=0,this.maxPositionY=window.innerHeight,this.minPositionY=0,this.dynamicParticles=[],this.particles=[]}return t.prototype.setBounds=function(t,i,o,n){this.maxPositionX=t,this.minPositionX=i,this.maxPositionY=o,this.minPositionY=n},t.prototype.add=function(t){this.particles.push(t),t.dynamic&&this.dynamicParticles.push(t)},t.prototype.remove=function(t){},t.prototype.insideWorldBounds=function(t){t.position.x+t.radius>this.maxPositionX?(t.position.x=this.maxPositionX-t.radius,t.velocity.x*=-1):t.position.x-t.radius<this.minPositionX&&(t.position.x=this.minPositionX+t.radius,t.velocity.x*=-1),t.position.y+t.radius>this.maxPositionY?(t.position.y=this.maxPositionY-t.radius,t.velocity.y*=-1):t.position.y-t.radius<this.minPositionY&&(t.position.y=this.minPositionY+t.radius,t.velocity.y*=-1)},t.prototype.update=function(){var t=this;this.dynamicParticles.forEach(function(i){i.update(),t.particles.forEach(function(t){return i.check(t)})})},t}();i.default=n},function(t,i,o){\"use strict\";i.__esModule=!0;var n=o(8);i.World=n.default;var e=o(1);i.Collider=e.default;var s=o(6);i.Dynamic=s.default},function(t,i,o){\"use strict\";i.__esModule=!0;var n=o(9);i.CircleSystem=n;var e=o(5);i.RectSystem=e}])});","\r\nimport { Vector2D } from 'vector_class'\r\nimport { Rect } from 'fisica'\r\nimport GameObject from '../Managers/GameObject'\r\nimport GameScene from '../Managers/GameScene'\r\n\r\nclass Collider {\r\n\r\n  private static: boolean\r\n  private restitution: Vector2D\r\n  private collision: Function\r\n  private gameObject: GameObject\r\n  private collider: Rect.Dynamic | Rect.Collider\r\n  public size\r\n\r\n  constructor(configuration) {\r\n    this.restitution = configuration.restitution\r\n    this.size = configuration.size\r\n    this.static = configuration.static\r\n  }\r\n\r\n  load(gameObject: GameObject, Scene: GameScene) {\r\n    if (this.size === 'fit') {\r\n      if (this.static) {\r\n        if (gameObject.Components.Sprite) {\r\n          this.collider = new Rect.Collider(\r\n            gameObject.Transform.position,\r\n            gameObject.Transform.scale)\r\n        } else {\r\n          this.collider = new Rect.Collider(\r\n            gameObject.Transform.position,\r\n            new Vector2D(50, 50)/*\r\n            gameObject.sprite.getSize()*/\r\n          )\r\n        }\r\n      }\r\n      else {\r\n        this.collider = new Rect.Dynamic(\r\n          gameObject.Transform.position,\r\n          this.restitution,\r\n          new Vector2D(50, 50)\r\n          /*\r\n          gameObject.sprite.getSize()\r\n          */\r\n        )\r\n      }\r\n    }\r\n\r\n    else {\r\n      if (this.static) {\r\n        this.collider = new Rect.Collider(\r\n          gameObject.Transform.position,\r\n          this.size\r\n        )\r\n      }\r\n      else {\r\n        this.collider = new Rect.Dynamic(\r\n          gameObject.Transform.position,\r\n          this.restitution,\r\n          this.size\r\n        )\r\n      }\r\n    }\r\n    /*\r\n        if (!gameObject.sprite.animation) {\r\n          gameObject.sprite.scale = new Vector2D(\r\n            this.size.x / gameObject.sprite.image.width,\r\n            this.size.y / gameObject.sprite.image.height)\r\n        }\r\n      */\r\n    this.collision = (other) => {\r\n      gameObject.run('collision', [other])\r\n    }\r\n    //  gameObject.collider = this.collider\r\n\r\n    // if (gameObject.collider) {\r\n    //   gameObject.collider.load(gameObject)\r\n    Scene.world.add(this.collider)\r\n    // }\r\n\r\n  }\r\n}\r\n\r\nexport default Collider\r\n","import Script from './ScriptComponent'\r\nimport Animation from './AnimationComponent'\r\nimport Identifier from './IdentifierComponent'\r\nimport Transform from './TransformComponent'\r\nimport Sprite from './SpriteComponent'\r\nimport Collider from './ColliderComponent'\r\n\r\nexport {\r\n  Animation,\r\n  Script,\r\n  Identifier,\r\n  Transform,\r\n  Sprite,\r\n  Collider\r\n}","\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Transform {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number = 0\r\n\r\n  constructor(configuration?) {\r\n    if (configuration) {\r\n      if (configuration.position) this.position = configuration.position\r\n      if (configuration.rotation) this.rotation = configuration.rotation\r\n      if (configuration.scale) this.scale = configuration.scale\r\n    }\r\n  }\r\n\r\n  rotate(rotation): void {\r\n    this.rotation += rotation\r\n  }\r\n\r\n  setPosition(x, y): void {\r\n    this.position = new Vector2D(x, y)\r\n  }\r\n\r\n  globalTranslate(x, y): void {\r\n    this.position.add(new Vector2D(x, y))\r\n  }\r\n\r\n  translate(x, y): void {\r\n    const translationY = Vector2D.angleMagnitude(this.rotation, y)\r\n    const translationX = Vector2D.angleMagnitude(this.rotation + Math.PI / 2, x)\r\n    this.position.add(new Vector2D(translationY[0], translationY[1]))\r\n    this.position.add(new Vector2D(translationX[0], translationX[1]))\r\n  }\r\n}\r\n\r\nexport default Transform \r\n","\r\n//import id from '../utils/id'\r\n\r\nclass Identifier {\r\n  public tags : Array<string>\r\n  public id//   : string = id()\r\n  public name : string\r\n\r\n  constructor (name?, tags?) {\r\n    this.name = name\r\n    this.tags = tags\r\n  }\r\n}\r\n\r\nexport default Identifier\r\n","\r\nimport GameObject from '../Managers/GameObject'\r\n\r\nclass ScriptManager {\r\n  private methods   : Object = {}\r\n  private gameObject: GameObject\r\n\r\n  constructor (gameObject: GameObject) {\r\n    this.gameObject = gameObject\r\n  }\r\n\r\n  add (scripts: Array<Object>): void {\r\n    for (let script of scripts) {\r\n      this.one(script)\r\n    }\r\n  }\r\n\r\n  one (script): void {\r\n    for (let method of Object.keys(script)) {\r\n      if (!this.methods[method]) {\r\n        this.methods[method] = []\r\n      }\r\n      this.methods[method].push(script[method].bind(this.gameObject))\r\n    }\r\n  }\r\n\r\n  run (name, params): void {\r\n    if (this.methods[name]) {\r\n      for (let method of this.methods[name]) {\r\n        method(...params)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScriptManager\r\n","\r\nconsole.log('gameobject')\r\n\r\nimport Scene from './GameScene'\r\nconsole.log('gmobj 2')\r\nimport TransformComponent from '../Components/TransformComponent'\r\nconsole.log('gmobj 2')\r\nimport IdentifierComponent from '../Components/IdentifierComponent'\r\nconsole.log('gmobj 2')\r\nimport ScriptComponent from '../Components/ScriptComponent'\r\nconsole.log('gmobj 2')\r\n\r\nclass GameObject {\r\n  public Transform: TransformComponent = new TransformComponent()\r\n  public Identifier: IdentifierComponent = new IdentifierComponent()\r\n  public Script: ScriptComponent = new ScriptComponent(this)\r\n  public Scene: Scene\r\n  public Components\r\n\r\n  constructor(components) {\r\n    this.Components = components\r\n  }\r\n\r\n  run(name: string, params?: Array<any>): void {\r\n    this.Script.run(name, params)\r\n  }\r\n\r\n  destroy(): void {\r\n    this.Components.forEach(component => {\r\n      component.destroy()\r\n    })\r\n    this.Scene.remove(this)\r\n  }\r\n}\r\n\r\nexport default GameObject\r\n","\r\nimport * as Component from './components/components'\r\nimport GameObject from './Managers/GameObject'\r\n\r\nfunction load(configuration): GameObject {\r\n  let result = {}\r\n  let Transform\r\n  let Script\r\n  if (configuration) {\r\n    for (let component of Object.keys(configuration)) {\r\n      if (component === 'Transform') {\r\n        Transform = new Component[component](configuration[component])\r\n      } else if (component === 'Script') {\r\n        Script = configuration[component]\r\n      } else {\r\n        result[component] = new Component[component](configuration[component])\r\n      }\r\n    }\r\n  }\r\n  const gm = new GameObject(result)\r\n  gm['Transform'].position = Transform.position\r\n  gm['Transform'].rotation = Transform.rotation\r\n  gm['Transform'].scale = Transform.scale\r\n  if (Script) {\r\n    gm.Script.one(Script)\r\n  }\r\n  return gm\r\n}\r\n\r\nexport default load\r\n","\r\nimport load from '../loader'\r\nimport { Scene } from 'dibujo'\r\nimport * as fisica from 'fisica'\r\nimport GameObject from './GameObject'\r\n\r\nclass GameScene {\r\n\r\n  public stage: Scene\r\n  public world: fisica.Rect.World// = new fisica.Rect.World()\r\n  private paused: boolean = false\r\n  private background: string = '#000000'\r\n  private gameObjects: Array<GameObject> = []\r\n\r\n  constructor(configuration?) {\r\n    this.world = new fisica.Rect.World(config.gravity)\r\n    if (config) {\r\n      if (config.background) {\r\n        this.background = config.background\r\n      }\r\n      if (config.manager) {\r\n        this.stage = new Scene(config.manager)\r\n      }\r\n      if (config.bounds) {\r\n        this.world.setBounds(config.bounds)\r\n      }\r\n      if (config.gameObjects) {\r\n        this.add(config.gameObjects)\r\n      }\r\n    }\r\n  }\r\n\r\n  add(gameObjects) {\r\n    for (let gameObject of gameObjects) {\r\n      const loaded = load(gameObject)\r\n      this.addGameObject(loaded)\r\n    }\r\n  }\r\n\r\n  addGameObject(gameObject: GameObject): void {\r\n    gameObject.Scene = this\r\n\r\n    for (let component in gameObject.Components) {\r\n      const compo = gameObject.Components[component]\r\n      if (compo.load) {\r\n        compo.load(gameObject, this)\r\n      }\r\n    }\r\n\r\n    gameObject.run('init')\r\n    this.gameObjects.push(gameObject)\r\n  }\r\n\r\n  find(property: string, value: string): Array<GameObject> {\r\n    let found = []\r\n    for (let gameObject of this.gameObjects) {\r\n      if (gameObject.Identifier) {\r\n        if (gameObject.Identifier[property] === value) {\r\n          found.push(gameObject)\r\n        }\r\n      }\r\n    }\r\n    return found\r\n  }\r\n\r\n  remove(gameObject: GameObject): void {\r\n    this.gameObjects = this.gameObjects.filter(other => {\r\n      return gameObject.Identifier.id !== other.Identifier.id\r\n    })\r\n  }\r\n\r\n  run(method: string, params?: Array<any>): void {\r\n    for (let gameObject of this.gameObjects) {\r\n      gameObject.run(method, params)\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.stage.clear(this.background)\r\n    this.world.update()\r\n    this.stage.update()\r\n    this.run('update')\r\n  }\r\n}\r\n\r\nexport default GameScene\r\n","\r\nimport { Render } from 'dibujo'\r\nimport GameScene from './GameScene'\r\nimport { Vector2D } from 'vector_class'\r\n\r\n/**\r\n * has 3 optional parameters in the configuration\r\n * id the id of the canvas\r\n * width and height\r\n */\r\nclass GameManager {\r\n\r\n  public render: Render\r\n  public gameScene: GameScene\r\n\r\n  constructor(configuration) {\r\n    const id = configuration.id ? configuration.id : undefined\r\n    const width = configuration.width ? configuration.width : undefined\r\n    const height = configuration.height ? configuration.height : undefined\r\n\r\n    this.render = new Render(id, width, height)\r\n    this.gameScene = new GameScene(this.render)\r\n    this.initEvents()\r\n  }\r\n\r\n  initEvents() {\r\n    let keys = {}\r\n\r\n    setInterval(() => {\r\n      Object.keys(keys).some((key) => {\r\n        if (keys[key]) {\r\n          if (!this.gameScene.paused) {\r\n            this.gameScene.run('keyPress', [keys])\r\n          }\r\n          return true\r\n        }\r\n      })\r\n    }, 20)\r\n  \r\n    document.addEventListener('mousedown', function (event) {\r\n      if (!this.gameScene.paused) {\r\n        this.gameScene.run('globalMouseDown', [new Vector2D(event.clientX, event.clientY)])\r\n        this.gameScene.runMouseDown(event, [new Vector2D(event.clientX, event.clientY)])\r\n      }\r\n    })\r\n  \r\n    document.addEventListener('mousemove', function (event) {\r\n      if (!this.gameScene.paused) {\r\n        this.gameScene.run('globalMouseMove', [new Vector2D(event.clientX, event.clientY)])\r\n      }\r\n    })\r\n  \r\n    document.addEventListener('mouseup', function (event) {\r\n      if (!this.gameScene.paused) {\r\n        this.gameScene.run('globalMouseUp', [new Vector2D(event.clientX, event.clientY)])\r\n      }\r\n    })\r\n  \r\n    document.addEventListener('keydown', function (event) {\r\n      keys[event.key] = true\r\n      if (!this.gameScene.paused) {\r\n        this.gameScene.run('keyDown', [event.key])\r\n      }\r\n    })\r\n  \r\n    document.addEventListener('keyup', function (event) {\r\n      keys[event.key] = false\r\n      if (!this.gameScene.paused) {\r\n        this.gameScene.run('keyUp', [event.key])\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n  /*\r\n  getTranslation(): Vector2D {\r\n    return this.gameScene.stage.translation\r\n  }\r\n\r\n  start(): void {\r\n    setInterval(() => {\r\n      this.gameScene.update()\r\n    })\r\n  }\r\n*/\r\n\r\n\r\n\r\n\r\nfunction mouseDown(manager: GameManager, mouse: Vector2D) {\r\n  const translation = manager.gameScene.stage.translation\r\n  this.gameObjects.forEach(gameObject => {\r\n    if (gameObject.collider) {\r\n      if (mouse.x > gameObject.Transform.position.x + translation.x &&\r\n        mouse.x < gameObject.Transform.position.x + translation.x + gameObject.collider.size.x &&\r\n        mouse.y > gameObject.Transform.position.y + translation.y &&\r\n        mouse.y < gameObject.Transform.position.y + translation.y + gameObject.collider.size.y) {\r\n        gameObject.run('mouseDown', mouse)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default GameManager\r\n","\r\nconsole.log('hola')\r\n\r\nimport { Vector2D } from 'vector_class'\r\nimport GameObject from './Managers/GameObject'\r\nimport Scene from './Managers/GameScene'\r\nimport Manager from './Managers/GameManager'\r\nimport { Color } from 'dibujo'\r\nimport { Graphic } from 'dibujo'\r\n\r\n\r\nconst mg = new Manager()\r\nconsole.log(mg)\r\n\r\n/*\r\nexport {\r\n  Graphic,\r\n  Vector2D,\r\n  GameObject,\r\n  Scene,\r\n  Manager,\r\n  Color\r\n}\r\n*/\r\n"]}