{"version":3,"sources":["node_modules\\vector_class\\src\\Vector2D.ts","node_modules\\vector_class\\src\\Vector3D.ts","node_modules\\vector_class\\src\\index.ts","node_modules\\fisica\\src\\RigidBody.ts","node_modules\\fisica\\src\\Rect\\Collider.ts","node_modules\\fisica\\src\\Rect\\RigidBody.ts","node_modules\\fisica\\src\\Circle\\Collider.ts","node_modules\\fisica\\src\\Circle\\RigidBody.ts","node_modules\\fisica\\src\\World.ts","node_modules\\fisica\\src\\Circle\\Trigger.ts","node_modules\\fisica\\src\\Rect\\Trigger.ts","node_modules\\fisica\\src\\index.ts","node_modules\\dibujo\\src\\Camera.ts","node_modules\\dibujo\\src\\Properties.ts","node_modules\\dibujo\\src\\graphics\\Graphic.ts","node_modules\\dibujo\\src\\Media\\Picture.ts","node_modules\\dibujo\\src\\Media\\Video.ts","node_modules\\dibujo\\src\\Scene.ts","node_modules\\dibujo\\src\\Render.ts","node_modules\\dibujo\\src\\LinearGradient.ts","node_modules\\dibujo\\src\\Color.ts","node_modules\\dibujo\\src\\GUI\\Window.ts","node_modules\\dibujo\\src\\Media\\Animation.ts","node_modules\\dibujo\\src\\graphics\\Ellipse.ts","node_modules\\dibujo\\src\\graphics\\Poligon.ts","node_modules\\dibujo\\src\\Events\\CircleEvents.ts","node_modules\\dibujo\\src\\graphics\\Circle.ts","node_modules\\dibujo\\src\\graphics\\Rect.ts","node_modules\\dibujo\\src\\graphics\\Line.ts","node_modules\\dibujo\\src\\graphics\\Text.ts","node_modules\\dibujo\\src\\graphics\\Arc.ts","node_modules\\dibujo\\src\\graphics\\BezierCurve.ts","node_modules\\dibujo\\src\\graphics\\QuadraticCurve.ts","node_modules\\dibujo\\src\\Events\\Event.ts","node_modules\\dibujo\\src\\Events\\Mouse.ts","node_modules\\dibujo\\src\\Events\\KeyBoard.ts","node_modules\\dibujo\\src\\index.ts","src\\Managers\\GameScene.ts","src\\Managers\\GameManager.ts","src\\Components\\IdentifierComponent.ts","src\\Components\\TransformComponent.ts","src\\Components\\SpriteComponent.ts","src\\Components\\ScriptComponent.ts","src\\Managers\\GameObject.ts","src\\lienzo.ts"],"names":[],"mappings":"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","file":"lienzo.6a863ef6.map","sourceRoot":"..","sourcesContent":["class Vector {\r\n  public x: number\r\n  public y: number\r\n\r\n  constructor (x: number = 0, y: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  add (vector: Vector): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  sub (vector: Vector): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  dot (vector: Vector): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  distance (vector: Vector): number {\r\n    return Vector.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle: number): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector, speed: number = 1, stop: number = 1): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector.normalize(Vector.sub(vector, this))\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  static add (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x + vector2.x, vector1.y + vector2.y)\r\n  }\r\n\r\n  static sub (vector1: Vector, vector2: Vector): Vector {\r\n    return new Vector(vector1.x - vector2.x, vector1.y - vector2.y)\r\n  }\r\n\r\n  static mult (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  static div (vector: Vector, scalar: number): Vector {\r\n    return new Vector(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector): Vector {\r\n    return new Vector(vector.x * -1, vector.y * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector, vector2: Vector): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector): Vector {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector, vector2: Vector): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static randomP (x: number, y: number): Vector {\r\n    return new Vector(x * Math.random(), y * Math.random())\r\n  }\r\n\r\n  static random (x: number = 1, y: number = 1): Vector {\r\n    let s1 = 1\r\n    let s2 = 1\r\n    if (Math.random() > 0.5) s1 = -1\r\n    if (Math.random() > 0.5) s2 = -1\r\n    return new Vector(x * Math.random() * s1, y * Math.random() * s2)\r\n  }\r\n}\r\n\r\nexport default Vector\r\n  ","\r\nclass Vector3D {\r\n  public x: number\r\n  public y: number\r\n  public z: number\r\n\r\n  constructor (x: number, y: number, z: number) {\r\n    this.x = x\r\n    this.y = y\r\n    this.z = z\r\n  }\r\n\r\n  add (vector: Vector3D): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n    this.z += vector.z\r\n  }\r\n\r\n  sub (vector: Vector3D): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n    this.z -= vector.z\r\n  }\r\n\r\n  mult (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n    this.z *= scalar\r\n  }\r\n\r\n  div (scalar: number): void {\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n    this.z /= scalar\r\n  }\r\n\r\n  inverse (): void {\r\n    this.x *= -1\r\n    this.y *= -1\r\n    this.z *= -1\r\n  }\r\n\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n  }\r\n\r\n  dot (vector: Vector3D): number {\r\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z\r\n  }\r\n\r\n  distance (vector: Vector3D): number {\r\n    return Vector3D.sub(this, vector).mag()\r\n  }\r\n\r\n  angle (): number {\r\n    return Math.atan2(this.y, this.x)\r\n  }\r\n\r\n  copy (): Vector3D {\r\n    return new Vector3D(this.x, this.y, this.z)\r\n  }\r\n\r\n  normalize (): void {\r\n    this.div(this.mag())\r\n  }\r\n\r\n  setMag (mag: number): void {\r\n    this.normalize()\r\n    this.mult(mag)\r\n  }\r\n\r\n  setAngle (angle): void {\r\n    const magnitude = this.mag()\r\n\r\n    this.x = magnitude * Math.cos(angle)\r\n    this.y =  magnitude * Math.sin(angle)\r\n  }\r\n\r\n  addAngle (angle: number): void {\r\n    this.setAngle(this.angle() + angle)\r\n  }\r\n\r\n  limit (scalar: number): void {\r\n    if (this.mag() > scalar) {\r\n      this.setMag(scalar)\r\n    }\r\n  }\r\n\r\n  moveTowards (vector: Vector3D, speed: number, stop: number): void {\r\n    if (this.distance(vector) > stop) {\r\n      const unit = Vector3D.normalize(vector)\r\n      unit.mult(speed)\r\n      this.add(unit)\r\n    }\r\n  }\r\n\r\n  zero (): void {\r\n    this.x = 0\r\n    this.y = 0\r\n    this.z = 0\r\n  }\r\n\r\n  static add (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x + vector2.x, vector1.y + vector2.y, vector1.z + vector2.z)\r\n  }\r\n\r\n  static sub (vector1: Vector3D, vector2: Vector3D): Vector3D {\r\n    return new Vector3D(vector1.x - vector2.x, vector1.y - vector2.y, vector1.z - vector2.z)\r\n  }\r\n\r\n  static mult (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x * scalar, vector.y * scalar, vector.z * scalar)\r\n  }\r\n\r\n  static div (vector: Vector3D, scalar: number): Vector3D {\r\n    return new Vector3D(vector.x / scalar, vector.y / scalar, vector.z / scalar)\r\n  }\r\n\r\n  static inverse (vector: Vector3D): Vector3D {\r\n    return new Vector3D(vector.x * -1, vector.y * -1, vector.z * -1)\r\n  }\r\n\r\n  static distance (vector1: Vector3D, vector2: Vector3D): number {\r\n    return this.sub(vector1, vector2).mag()\r\n  }\r\n\r\n  static normalize (vector: Vector3D): Vector3D {\r\n    return this.div(vector, vector.mag())\r\n  }\r\n\r\n  static cross (vector1: Vector3D, vector2: Vector3D): number {\r\n    return vector1.x * vector2.y - vector2.x * vector1.y\r\n  }\r\n\r\n  static random (x: number, y: number, z: number): Vector3D {\r\n    if (Math.random() > 0.5) {\r\n      return new Vector3D(x * Math.random(), y * Math.random(), z * Math.random())\r\n    } else {\r\n      return new Vector3D(-x * Math.random(), -y * Math.random(), -z * Math.random())\r\n    }\r\n  }\r\n}\r\n\r\nexport default Vector3D\r\n\r\n/*\r\n\r\nTO ADD\r\n\r\nimport vector from '../vector'\r\n\r\nfunction rotate (x, y, z, center, vec) {\r\n  let vecR\r\n  vecR = vector.sub(vec, center)\r\n  vecR = rotateX(vecR, x)\r\n  vecR = rotateY(vecR, y)\r\n  vecR = rotateZ(vecR, z)\r\n  vecR = vector.add(vecR, center)\r\n  return vecR\r\n}\r\n\r\nfunction rotateX (vec, t) {\r\n  let vecR = vec\r\n  let newy = vec[1] * Math.cos(t) - vec[2] * Math.sin(t)\r\n  let newz = vec[1] * Math.sin(t) + vec[2] * Math.cos(t)\r\n  vecR[1] = newy\r\n  vecR[2] = newz\r\n  return vecR\r\n}\r\n\r\nfunction rotateY (vec, t) {\r\n  let vecR = vec\r\n  let newz = vec[2] * Math.cos(t) - vec[0] * Math.sin(t)\r\n  let newx = vec[2] * Math.sin(t) + vec[0] * Math.cos(t)\r\n  vecR[2] = newz\r\n  vecR[0] = newx\r\n  return vecR\r\n}\r\n\r\nfunction rotateZ (vec, t) {\r\n  let vecR = vec\r\n  let newx = vec[0] * Math.cos(t) - vec[1] * Math.sin(t)\r\n  let newy = vec[0] * Math.sin(t) + vec[1] * Math.cos(t)\r\n  vecR[0] = newx\r\n  vecR[1] = newy\r\n  return vecR\r\n}\r\n\r\nconst memlength = (vec) => Math.pow(Math.pow(vec[0], 2) + Math.pow(vec[1], 2) + Math.pow(vec[2], 2), 0.5)\r\n\r\nconst normal = (v1, v2, v3) => vector.cross(vector.sub(v2, v1), vector.sub(v3, v1))\r\n\r\nfunction isInTriangle (vec, triangle) {\r\n  let u = vector.sub(triangle.v2, triangle.v1)\r\n  let v = vector.sub(triangle.v3, triangle.v1)\r\n  let w = vector.sub(vec, triangle.v1)\r\n\r\n  let vCrossW = vector.cross(v, w)\r\n  let vCrossU = vector.cross(v, u)\r\n\r\n  if (vector3.dot(vCrossW, vCrossU) < 0) return false\r\n\r\n  let uCrossW = vector.cross(u, w)\r\n  let uCrossV = vector.cross(u, v)\r\n\r\n  if (vector3.dot(uCrossW, uCrossV) < 0) return false\r\n\r\n  let denom = memlength(uCrossV)\r\n  let r = memlength(vCrossW) / denom\r\n  let t = memlength(uCrossW) / denom\r\n\r\n  return (r + t <= 1)\r\n}\r\n\r\nfunction getTriangleArea (triangle) {\r\n  let temp = vector.cross(vector.sub(triangle.v3, triangle.v1), vector.sub(triangle.v3, triangle.v2))\r\n  let x = Math.pow(temp[0], 2)\r\n  let y = Math.pow(temp[1], 2)\r\n  let z = Math.pow(temp[2], 2)\r\n  return Math.pow(x + y + z, 0.5) / 2\r\n}\r\n\r\nfunction dot (vec1, vec2) {\r\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1] + vec1[2] * vec2[2]\r\n}\r\n\r\nfunction getPlaneIntersect (line1, line2, triangle) {\r\n  let normal = triangle.normal\r\n  let u = vector3.dot(normal, vector.sub(triangle.v1, line1)) / vector3.dot(normal, vector.sub(line2, line1))\r\n  return vector.add(line1, vector.mult(vector.sub(line2, line1), u))\r\n}\r\n\r\nconst vector3 = { dot, rotate, normal, isInTriangle, getTriangleArea, getPlaneIntersect, memlength }\r\n\r\nexport default vector3\r\n\r\n*/","\r\nimport Vector2D from './Vector2D'\r\nimport Vector3D from './Vector3D'\r\n\r\nexport {\r\n  Vector2D,\r\n  Vector3D\r\n}\r\n","\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass RigidBody {\r\n\r\n    public mass: number\r\n    public restitution: number\r\n    public velocity: Vector2D = new Vector2D(0, 0)\r\n    public position: Vector2D = new Vector2D(0, 0)\r\n    public acceleration: Vector2D = new Vector2D(0, 0)\r\n\r\n    constructor(position, restitution, mass = 1) {\r\n        this.position = position\r\n        this.restitution = restitution\r\n        this.mass = mass\r\n    }\r\n\r\n    addForce(force: Vector2D): void {\r\n        this.acceleration.add(force)\r\n    }\r\n\r\n    momentum(): Vector2D {\r\n        return Vector2D.mult(this.velocity, this.mass)\r\n    }\r\n\r\n    inelasticCollision(other): void {\r\n        const velocity1 = this.velocity\r\n        const velocity2 = other.velocity\r\n        const totalMomentum = other.momentum()\r\n        totalMomentum.add(this.momentum())\r\n        const totalMass = this.mass + other.mass\r\n\r\n        // This velocity\r\n        this.velocity = Vector2D.sub(velocity2, velocity1)\r\n        this.velocity.mult(this.restitution * other.mass)\r\n        this.velocity.add(totalMomentum)\r\n        this.velocity.div(totalMass)\r\n\r\n        // Other velocity\r\n        other.velocity = Vector2D.sub(velocity1, velocity2)\r\n        other.velocity.mult(other.restitution * this.mass)\r\n        other.velocity.add(totalMomentum)\r\n        other.velocity.div(totalMass)\r\n    }\r\n\r\n    update(): void {\r\n        this.acceleration.div(this.mass)\r\n        this.velocity.add(this.acceleration)\r\n        this.position.add(this.velocity)\r\n        this.acceleration.zero()\r\n    }\r\n}\r\n\r\nexport default RigidBody\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport RigidBody from './RigidBody'\r\nimport World from '../World'\r\n\r\nclass Collider {\r\n\r\n    public position: Vector2D\r\n    public size: Vector2D\r\n    public onCollision: Function\r\n    public onTriggerEnter: Function\r\n    public onTriggerStay: Function\r\n    public onTriggerExit: Function\r\n    public World: World\r\n\r\n    constructor(position: Vector2D, size: Vector2D) {\r\n        this.position = position\r\n        this.size = size\r\n    }\r\n\r\n    collidesWith(other: Collider | RigidBody): boolean {\r\n        return (this.position.x < other.position.x + other.size.x &&\r\n            this.position.x + this.size.x > other.position.x &&\r\n            this.position.y < other.position.y + other.size.y &&\r\n            this.size.y + this.position.y > other.position.y)\r\n    }\r\n/*\r\n    translate(movement: Vector2D) {\r\n        this.World.particles.forEach((particle) => {\r\n            \r\n            if (this.collidesWith(particle)) {\r\n                this.position.add(direction)\r\n            }\r\n        })\r\n        \r\n        this.position.add(movement)\r\n    }\r\n*/\r\n}\r\n\r\nexport default Collider\r\n/*\r\nfloat w = 0.5 * (A.width() + B.width());\r\nfloat h = 0.5 * (A.height() + B.height());\r\nfloat dx = A.centerX() - B.centerX();\r\nfloat dy = A.centerY() - B.centerY();\r\n\r\nif (abs(dx) <= w && abs(dy) <= h)\r\n{\r\n    // collision! \r\n    float wy = w * dy;\r\n    float hx = h * dx;\r\n\r\n    if (wy > hx)\r\n        if (wy > -hx)\r\n            //collision at the top \r\n        else\r\n            // on the left \r\n    else\r\n        if (wy > -hx)\r\n            // on the right \r\n        else\r\n            // at the bottom \r\n}\r\n*/","\r\nimport { Vector2D } from 'vector_class'\r\nimport _RigidBody from './../RigidBody'\r\nimport Collider from './Collider'\r\n\r\nclass RigidBody extends _RigidBody {\r\n\r\n  public size: Vector2D = new Vector2D(10, 10)\r\n  public onCollision: Function\r\n  public onTriggerEnter: Function\r\n  public onTriggerStay: Function\r\n  public onTriggerExit: Function\r\n\r\n  constructor(position = new Vector2D(0, 0), size = new Vector2D(10, 10), restitution = 1) {\r\n    super(position, restitution)\r\n    this.size = size\r\n    this.mass = this.size.x * this.size.y\r\n  }\r\n\r\n  collidesWith(other: RigidBody | Collider) {\r\n    if (this.position.x < other.position.x + other.size.x &&\r\n      this.position.x + this.size.x > other.position.x &&\r\n      this.position.y < other.position.y + other.size.y &&\r\n      this.size.y + this.position.y > other.position.y) {\r\n\r\n      if (this.onCollision) {\r\n        this.onCollision(other)\r\n      }\r\n      if (other.onCollision) {\r\n        other.onCollision(this)\r\n      }\r\n\r\n      if (other instanceof RigidBody) {\r\n        this.inelasticCollision(other)\r\n      }\r\n\r\n      if (other instanceof Collider) {\r\n        this.velocity.inverse()\r\n        this.velocity.mult(this.restitution)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RigidBody\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport RigidBody from './RigidBody'\r\nimport World from '../World'\r\n\r\nclass Collider {\r\n\r\n    public position: Vector2D\r\n    public radius: number\r\n    public onCollision: Function\r\n    public onTriggerEnter: Function\r\n    public onTriggerStay: Function\r\n    public onTriggerExit: Function\r\n    public World: World\r\n\r\n    constructor(position: Vector2D, radius: number) {\r\n        this.position = position\r\n        this.radius = radius\r\n    }\r\n\r\n    collidesWith(other: Collider | RigidBody): boolean {\r\n        return (Vector2D.distance(this.position, other.position) < this.radius + other.radius)\r\n    }\r\n\r\n    translate(movement: Vector2D) {\r\n        this.World.particles.forEach((particle) => {\r\n            const distance = Vector2D.distance(this.position, particle.position)\r\n            if (distance.mag() < this.radius + particle.radius) {\r\n                const direction = Vector2D.normalize(distance)\r\n                direction.mult(this.radius + particle.radius)\r\n                this.position.add(direction)        \r\n            }\r\n        })\r\n        this.position.add(movement)\r\n    }\r\n}\r\n\r\nexport default Collider\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport _RigidBody from './../RigidBody'\r\nimport Collider from './Collider'\r\n\r\nclass RigidBody extends _RigidBody {\r\n\r\n  public radius: number\r\n  public onCollision: Function\r\n  public onTriggerEnter: Function\r\n  public onTriggerStay: Function\r\n  public onTriggerExit: Function\r\n\r\n  constructor(position = new Vector2D(0, 0), radius = 5, restitution = 1) {\r\n    super(position, restitution)\r\n    this.radius = radius\r\n    this.mass = Math.PI * Math.pow(this.radius, 2)\r\n  }\r\n\r\n  collidesWith(other: RigidBody | Collider) {\r\n    const distance = Vector2D.distance(this.position, other.position)\r\n\r\n    if (distance.mag() < this.radius + other.radius) {\r\n      const direction = Vector2D.normalize(distance)\r\n      direction.mult(this.radius + other.radius)\r\n      this.position.add(direction)\r\n\r\n      if (this.onCollision) {\r\n        this.onCollision(other)\r\n      }\r\n      if (other.onCollision) {\r\n        other.onCollision(this)\r\n      }\r\n\r\n      if (other instanceof RigidBody) {\r\n        this.inelasticCollision(other)\r\n      }\r\n\r\n      if (other instanceof Collider) {\r\n        this.velocity.inverse()\r\n        this.velocity.mult(this.restitution)\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default RigidBody\r\n","\r\nimport DynamicRect from './Rect/RigidBody'\r\nimport DynamicCircle from './Circle/RigidBody'\r\n\r\nclass World {\r\n\r\n  public maxPositionX: number = 800\r\n  public minPositionX: number = 0\r\n  public maxPositionY: number = 600\r\n  public minPositionY: number = 0\r\n\r\n  public particles: Array<any> = []\r\n  public dynamicParticles: Array<any> = []\r\n\r\n  setBounds(maxX: number, minX: number, maxY: number, minY: number): void {\r\n    this.maxPositionX = maxX\r\n    this.minPositionX = minX\r\n    this.maxPositionY = maxY\r\n    this.minPositionY = minY\r\n  }\r\n\r\n  add(particle): void {\r\n    if ((particle instanceof DynamicRect) || (particle instanceof DynamicCircle)) {\r\n      this.dynamicParticles.push(particle)\r\n    } else {\r\n      particle.World = this\r\n      this.particles.push(particle)\r\n    }\r\n  }\r\n\r\n  remove(particle): void {\r\n    if ((particle instanceof DynamicRect) || (particle instanceof DynamicCircle)) {\r\n      const index = this.dynamicParticles.indexOf(particle)\r\n      if (index > -1) {\r\n        this.dynamicParticles = this.dynamicParticles.slice(index, 1)\r\n      }\r\n    } else {\r\n      const index = this.particles.indexOf(particle)\r\n      if (index > -1) {\r\n        this.particles = this.particles.slice(index, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  insideWorldBounds(particle): void {\r\n    if (particle.position.x > this.maxPositionX) {\r\n      particle.position.x = this.maxPositionX\r\n      particle.velocity.x *= -1\r\n    } else if (particle.position.x < this.minPositionX) {\r\n      particle.position.x = this.minPositionX\r\n      particle.velocity.x *= -1\r\n    }\r\n\r\n    if (particle.position.y > this.maxPositionY) {\r\n      particle.position.y = this.maxPositionY\r\n      particle.velocity.y *= -1\r\n    } else if (particle.position.y < this.minPositionY) {\r\n      particle.position.y = this.minPositionY\r\n      particle.velocity.y *= -1\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    for (let index = 0; index < this.dynamicParticles.length; index++) {\r\n      const particle = this.dynamicParticles[index]\r\n\r\n      for (let index2 = 0; index2 < this.particles.length; index2++) {\r\n        const particle2 = this.particles[index2]\r\n        particle.collidesWith(particle2)\r\n      }\r\n\r\n      for (let index2 = 0; index2 < this.dynamicParticles.length; index2++) {\r\n        if (index !== index2) {\r\n          const particle2 = this.dynamicParticles[index2]\r\n          particle.collidesWith(particle2)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default World\r\n","\r\nimport Collider from './Collider'\r\nimport RigidBody from './RigidBody'\r\n\r\nclass Trigger extends Collider {\r\n\r\n  public particles: Array<any> = []\r\n\r\n  isInside(other: Collider | RigidBody) {\r\n    return this.collidesWith(other)\r\n  }\r\n\r\n  isInList(other: Collider | RigidBody) {\r\n    return includes(this.particles, other)\r\n  }\r\n\r\n  update(other: Collider | RigidBody): void {\r\n\r\n    if (this.collidesWith(other)) // Is inside\r\n    {\r\n      if (!this.isInList(other)) // Is not in the list\r\n      {\r\n        if (other.onTriggerEnter) {\r\n          other.onTriggerEnter(this)\r\n        }\r\n        this.particles.push(other)\r\n      }\r\n      else // Is in the list\r\n      {\r\n        if (other.onTriggerStay) {\r\n          other.onTriggerStay(this)\r\n        }\r\n      }\r\n    } else { // Is outside\r\n      if (this.isInList(other)) { // Is outside but is in the list\r\n        this.particles.splice(this.particles.indexOf(other), 1)\r\n        if (other.onTriggerExit) {\r\n          other.onTriggerExit(this)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction includes(arr, element) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i] === element) return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport default Trigger\r\n","\r\nimport Collider from './Collider'\r\nimport RigidBody from './RigidBody'\r\n\r\nclass Trigger extends Collider {\r\n\r\n  public particles: Array<any> = []\r\n\r\n  isInside(other: Collider | RigidBody) {\r\n    return this.collidesWith(other)\r\n  }\r\n\r\n  isInList(other: Collider | RigidBody) {\r\n    return includes(this.particles, other)\r\n  }\r\n\r\n  update(other: Collider | RigidBody): void {\r\n\r\n    if (this.collidesWith(other)) // Is inside\r\n    {\r\n      if (!this.isInList(other)) // Is not in the list\r\n      {\r\n        if (other.onTriggerEnter) {\r\n          other.onTriggerEnter(this)\r\n        }\r\n        this.particles.push(other)\r\n      }\r\n      else // Is in the list\r\n      {\r\n        if (other.onTriggerStay) {\r\n          other.onTriggerStay(this)\r\n        }\r\n      }\r\n    } else { // Is outside\r\n      if (this.isInList(other)) { // Is outside but is in the list\r\n        this.particles.splice(this.particles.indexOf(other), 1)\r\n        if (other.onTriggerExit) {\r\n          other.onTriggerExit(this)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction includes(arr, element) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i] === element) return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport default Trigger\r\n","\r\nimport World from './World'\r\nimport { Vector2D } from 'vector_class'\r\n\r\n// --------------- Circle ---------------\r\nimport _RigidBody from './Circle/RigidBody'\r\nimport _Collider from './Circle/Collider'\r\nimport _Trigger from './Circle/Trigger'\r\n\r\nconst Circle = {\r\n  RigidBody: _RigidBody,\r\n  Collider: _Collider,\r\n  Trigger: _Trigger,\r\n  World\r\n}\r\n\r\n// --------------- Rect ---------------\r\nimport Collider from './Rect/Collider'\r\nimport RigidBody from './Rect/RigidBody'\r\nimport Trigger from './Rect/Trigger'\r\n\r\nconst Rect = {\r\n  Collider,\r\n  Trigger,\r\n  RigidBody,\r\n  World\r\n}\r\n\r\n/*\r\n\r\n// --------------- Mesh ---------------\r\nimport DynamicCircle from './Mesh/DynamicCircle'\r\nimport DynamicRect from './Mesh/DynamicRect'\r\nimport DynamicMesh from './Mesh/DynamicMesh'\r\nimport WorldMesh from './Mesh/World'\r\n\r\nconst Mesh = {\r\n  World: WorldMesh,\r\n  DynamicMesh,\r\n  DynamicCircle,\r\n  DynamicRect\r\n}\r\n\r\n// --------------- Rect Circle ---------------\r\nimport DynamicRectRC from './RectCircle/DynamicRect'\r\nimport DynamicCricleRC from './RectCircle/DynamicCircle'\r\nimport StaticRectRC from './RectCircle/StaticRect'\r\nimport StaticCircleRC from './RectCircle/StaticCircle'\r\nimport WorldRC from './RectCircle/World'\r\n\r\nconst RectCircle = {\r\n  DynamicRect: DynamicRectRC,\r\n  DynamicCircle: DynamicCricleRC,\r\n  StaticRectRC: StaticRectRC,\r\n  StaticCricle: StaticCircleRC,\r\n  World: WorldRC\r\n}\r\n\r\n*/\r\n\r\n// EXPORT\r\n\r\nexport {\r\n  Circle,\r\n  Rect,\r\n  Vector2D\r\n  /*\r\n  Mesh,\r\n  RectCircle,\r\n  */\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport Graphic from './graphics/Graphic'\r\nimport Scene from './Scene'\r\nimport {mouse} from './index'\r\n\r\nclass Camera {\r\n  public context: CanvasRenderingContext2D\r\n  public keyMap = { up: 'w', down: 's', left: 'a', right: 'd' }\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  private followedPosition: Vector2D\r\n  private fLastPosition: Vector2D = new Vector2D(0, 0)\r\n  private followingX: boolean = false\r\n  private followingY: boolean = false\r\n  private keyTranslateEnabled: boolean = false\r\n  private velocity: Vector2D = new Vector2D(0, 0)\r\n  private acceleration: Vector2D = new Vector2D(0, 0)\r\n  private friction: number = 0.9\r\n\r\n  constructor (context: CanvasRenderingContext2D) {\r\n    this.context = context\r\n  }\r\n\r\n  addForce(force: Vector2D): void {\r\n    this.acceleration.add(force)\r\n  }\r\n/*\r\n  enable() {\r\n    document.addEventListener('mousemove', (e) => {\r\n      this.mouse.position.x = e.clientX\r\n      this.mouse.position.y = e.clientY\r\n    })\r\n  }\r\n*/\r\n  getMouse () {\r\n    return Vector2D.add(mouse.position, this.position)\r\n  }\r\n\r\n  disableKeyTranslate() {\r\n\r\n  }\r\n\r\n  enableKeyTranslate() {\r\n    this.keyTranslateEnabled = true\r\n    document.addEventListener('keypress', (e) => {\r\n      if (e.key.toLowerCase() === this.keyMap.up) {\r\n        this.addForce(new Vector2D(0, 10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.down) {\r\n        this.addForce(new Vector2D(0, -10))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.left) {\r\n        this.addForce(new Vector2D(10, 0))\r\n      }\r\n      if (e.key.toLowerCase() === this.keyMap.right) {\r\n        this.addForce(new Vector2D(-10, 0))\r\n      }\r\n    })\r\n  }\r\n\r\n  follow(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.fLastPosition = this.followedPosition.copy()\r\n    this.followingX = true\r\n    this.followingY = true\r\n  }\r\n\r\n  followX(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingX = true\r\n  }\r\n\r\n  followY(graphic: Graphic): void {\r\n    this.followedPosition = graphic.position\r\n    this.followingY = true\r\n  }\r\n\r\n  stopFollowing(): void {\r\n    this.followingX = false\r\n    this.followingY = false\r\n  }\r\n\r\n  stopFollowingX(): void {\r\n    this.followingX = false\r\n  }\r\n\r\n  stopFollowingY(): void {\r\n    this.followingY = false\r\n  }\r\n\r\n  zoom(where: Vector2D, howMuch: Vector2D): void {\r\n    this.context.translate(where.x, where.y)\r\n    this.context.scale(howMuch.x, howMuch.y)\r\n    this.context.translate(-where.x, -where.y)\r\n  }\r\n\r\n  translate(x: number, y: number): void {\r\n    this.position.x -= x\r\n    this.position.y -= y\r\n    this.context.translate(x, y)\r\n  }\r\n\r\n  update() {\r\n    if (this.keyTranslateEnabled) {\r\n      this.velocity.add(this.acceleration)\r\n      this.velocity.mult(this.friction)\r\n      this.translate(this.velocity.x, this.velocity.y)\r\n      this.position.add(this.velocity)\r\n      this.acceleration.zero()\r\n    }\r\n    if (this.followingX || this.followingY) {\r\n      const change = Vector2D.sub(this.fLastPosition, this.followedPosition)\r\n      this.fLastPosition = this.followedPosition.copy()\r\n      this.translate(change.x, change.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Camera\r\n","export enum LineCap {\r\n  butt = 'butt',\r\n  square = 'square',\r\n  round = 'round'\r\n}\r\n\r\nexport enum LineJoin {\r\n  bevel = 'bevel',\r\n  round = 'round',\r\n  miter = 'miter'\r\n}\r\n\r\nexport enum Pattern {\r\n  repeat = 'repeat',\r\n  repeat_x = 'repeat-x',\r\n  repeat_y = 'repeat-y',\r\n  no_repeat = 'no-repeat'\r\n}\r\n\r\nexport enum weights {\r\n  lighter = 'lighter',\r\n  normal = 'normal',\r\n  bolder = 'bolder',\r\n  bold = 'bold'\r\n}\r\n","import { Vector2D } from 'vector_class'\r\nimport { weights, LineCap, LineJoin } from '../Properties'\r\n\r\nclass Graphic {\r\n  public weight: weights = weights.normal\r\n  public context: any\r\n  public linearGradient: any\r\n  public fill: Boolean = true\r\n  public stroke: Boolean = false\r\n  public anchor: Vector2D = new Vector2D(0.5, 0.5)\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public color: String = 'grey'\r\n  public family: String = 'Arial'\r\n  public lineCap: String = LineCap.round\r\n  public lineJoin: String = LineJoin.round\r\n  public lineColor: String = 'rgb(0, 0, 0)'\r\n  public textAlign: String = 'center'\r\n  public shadowColor: String = 'rgba(0, 0, 0, 0)'\r\n  public textBaseline: String = 'middle'\r\n  public size: Number = 12\r\n  public rotation: Number = 0\r\n  public z_index: Number = 1\r\n  public lineWidth: Number = 1\r\n  public miterLimit: Number = 10\r\n  public shadowBlur: Number = 0\r\n  public shadowOffsetX: Number = 0\r\n  public shadowOffsetY: Number = 0\r\n  public childs: Array<any> = []\r\n\r\n  constructor(data?: any) {\r\n    if (data) {\r\n      if (data.stroke !== undefined) {\r\n        if (typeof data.stroke === 'boolean') {\r\n          this.stroke = data.stroke\r\n        } else {\r\n          console.info(`Type of stroke is not boolean`)\r\n        }\r\n      } else {\r\n        this.stroke = false\r\n      }\r\n      if (data.fill !== undefined) {\r\n        if (typeof data.fill === 'boolean') {\r\n          this.fill = data.fill\r\n        } else {\r\n          console.info(`Type of fill is not boolean`)\r\n        }\r\n      } else {\r\n        this.fill = true\r\n      }\r\n      this.weight = data.weights ? data.weights : weights.normal\r\n      this.anchor = data.anchor ? data.anchor : new Vector2D(0.5, 0.5)\r\n      this.position = data.position ? data.position : new Vector2D(0, 0)\r\n      this.z_index = data.z_index ? data.z_index : 1\r\n      this.shadowBlur = data.shadowBlur ? data.shadowBlur : 0\r\n      this.shadowOffsetX = data.shadowOffsetX ? data.shadowOffsetX : 0\r\n      this.shadowOffsetY = data.shadowOffsetY ? data.shadowOffsetY : 0\r\n      this.shadowColor = data.shadowColor ? data.shadowColor : 'rgba(0,0,0,0)'\r\n      this.miterLimit = data.miterLimit ? data.miterLimit : 10\r\n      this.lineCap = data.lineCap ? data.lineCap : LineCap.round\r\n      this.color = data.color ? data.color : 'grey'\r\n      this.family = data.family ? data.family : 'Arial'\r\n      this.lineJoin = data.lineJoin ? data.lineJoin : LineJoin.round\r\n      this.lineColor = data.lineColor ? data.lineColor : 'rgb(50, 50, 50)'\r\n      this.textAlign = data.textAlign ? data.textAlign : 'center'\r\n      this.textBaseline = data.textBaseline ? data.textBaseline : 'middle'\r\n      this.size = data.size ? data.size : 12\r\n      this.rotation = data.rotation ? data.rotation : 0\r\n      this.lineWidth = data.lineWidth ? data.lineWidth : 1\r\n    }\r\n  }\r\n\r\n  add(child: any): void {\r\n    child.context = this.context\r\n    this.childs.push(child)\r\n  }\r\n\r\n  remove(child: any): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  getFont() {\r\n    return `${this.weight} ${this.size}px ${this.family}`\r\n  }\r\n\r\n  setStyle(): void {\r\n    this.context.font = this.getFont()\r\n    this.context.fillStyle = this.color\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.textAlign = this.textAlign\r\n    this.context.shadowColor = this.shadowColor\r\n    this.context.textBaseline = this.textBaseline\r\n    this.context.miterLimit = this.miterLimit\r\n    this.context.shadowBlur = this.shadowBlur\r\n    this.context.shadowOffsetX = this.shadowOffsetX\r\n    this.context.shadowOffsetY = this.shadowOffsetY\r\n  }\r\n\r\n  /*\r\n      Most be somewhere here\r\n  \r\n      this.childs.forEach(c => c.context = this.context)\r\n      this.childs.forEach(c => c.render())\r\n  \r\n  \r\n  */\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.context.beginPath()\r\n    // if (this.context.fill || this.context.stroke) {\r\n    this.setStyle()\r\n    this.selfRender()\r\n    // }\r\n    // this.context.restore()\r\n  }\r\n\r\n  selfRender() { }\r\n}\r\n\r\nexport default Graphic\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n-------------------------------- GRUPO --------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Graphic from './graphics/Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nexport default class Group {\r\n  private childs: Array<Graphic> = []\r\n  private context: CanvasRenderingContext2D\r\n  public position: Vector2D = new Vector2D(0, 0) // la posicion tu la tenias publica, asi que no tiene sentido ese metodo de translate que querias hacer\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number\r\n\r\n  add(child: Graphic): void {\r\n    this.childs.push(child)\r\n  }\r\n\r\n  scaleObject(child: any) {\r\n    if (child.type == \"arc\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else if (child.type == \"line\") {\r\n      child.end = new Vector(child.end.x * this.scale.x, child.end.y * this.scale.y)\r\n      child.render()\r\n      child.end = new Vector(child.end.x / this.scale.x, child.end.y / this.scale.y)\r\n    } else if (child.type == \"img\" || child.type == \"rect\") {\r\n      child.width *= this.scale.x\r\n      child.height *= this.scale.y\r\n      child.render()\r\n      child.width /= this.scale.x\r\n      child.height /= this.scale.y\r\n    } else if (child.type == \"poligon\") {\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x * this.scale.x, pnt.y * this.scale.y)\r\n      })\r\n      child.render()\r\n      child.cords.filter((pnt: any) => {\r\n        return new Vector(pnt.x / this.scale.x, pnt.y / this.scale.y)\r\n      })\r\n    } else if (child.type == \"circle\") {\r\n      child.radius *= this.scale.x\r\n      child.render()\r\n      child.radius /= this.scale.x\r\n    } else {\r\n      throw \"error, no se puede escalar dicho objeto\"\r\n    }\r\n    return child\r\n  }\r\n\r\n  render(): void {\r\n    // this.context.save()\r\n    this.childs.forEach((child) => {\r\n      child.position.add(this.position)\r\n      child.context = this.context\r\n      child.render()\r\n      child.position.sub(this.position)\r\n    })\r\n    // this.context.restore()\r\n  }\r\n}\r\n\r\n*/","import Graphic from '../graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\n// Imaginary canvas\r\nconst canvas = document.createElement('canvas')\r\nconst context = canvas.getContext('2d')    \r\n\r\nclass Picture extends Graphic {\r\n  public width: number\r\n  public height: number\r\n  public opacity: number\r\n  public image: HTMLImageElement\r\n  public angle: number\r\n  public type: string = \"img\"\r\n  public data: any\r\n  public ready: boolean = false\r\n  public todo: Array<Function> = []\r\n  public params: Array<any> = []\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.image = new Image()\r\n    this.image.src = data.src\r\n    document.body.appendChild(this.image)\r\n    this.image.addEventListener('load', () => {\r\n      this.ready = true\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n/*\r\n    this.image.addEventListener('error', (err) => {\r\n      console.log(err)\r\n      console.log(this.image)\r\n      console.error('Error loading the image...')\r\n    })\r\n*/\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.image.width\r\n    this.height = data.height ? data.height : this.image.height\r\n  }\r\n\r\n  filter() {\r\n\r\n  }\r\n\r\n  getImageData() {\r\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight)\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.drawImage(this.image, 0, 0, this.width, this.height)\r\n    return context.getImageData(0, 0, this.width, this.height)\r\n  }\r\n\r\n  removeColor(color: Array<number>) {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n\r\n  onClick(func: Function): void {\r\n\r\n  }\r\n  realPosition() {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n\r\n  renderData(): void {\r\n  //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    //this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.image, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Picture\r\n","import Graphic from '../graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Video extends Graphic {\r\n  public width: number\r\n  public height: number\r\n  public opacity: number\r\n  public video: HTMLVideoElement\r\n  public angle: number\r\n  public type: string = \"img\"\r\n  public data: any\r\n  public ready: boolean = false\r\n  public todo: Array<Function> = []\r\n  public params: Array<any> = []\r\n  public filterEnable: boolean = false\r\n  public filterColors: Array<number> = []\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    this.video = document.createElement('video')\r\n    this.video.src = data.src\r\n    this.video.play()\r\n    this.video.crossOrigin = \"Anonymous\"\r\n\r\n    this.video.addEventListener('loadedmetadata', () => {\r\n      this.ready = true\r\n      console.info(`Video ${data.src} correctly loaded.`)\r\n      console.log(this.todo)\r\n      console.log(this.params)\r\n      this.todo.forEach((met, i) => {\r\n        met(...this.params[i])\r\n      })\r\n    })\r\n\r\n    this.video.addEventListener('error', () => {\r\n      console.error('Error loading the video...')\r\n    })\r\n    this.angle = data.angle ? data.angle : 0\r\n    this.opacity = data.opacity ? data.opacity : 1\r\n    this.width = data.width ? data.width : this.video.width\r\n    this.height = data.height ? data.height : this.video.height\r\n  }\r\n\r\n  filter() {\r\n\r\n  }\r\n\r\n  getImageData() {\r\n    const canvas = document.createElement('canvas')\r\n    // console.log(canvas)\r\n    document.body.appendChild(canvas)\r\n    const context = canvas.getContext('2d')\r\n    canvas.width = this.width\r\n    canvas.height = this.height\r\n    context.translate((this.anchor.x * this.width), (this.anchor.y * this.height))\r\n    context.rotate(this.angle)\r\n    context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    document.body.removeChild(canvas)\r\n    // return context.getImageData( -this.width / 2 , - this.height/2, this.width + this.width/2, this.height + this.height/2)\r\n    return context.getImageData( 0, 0, this.width, this.height)\r\n  }\r\n/*\r\n  removeColor(color: Array<number>) {\r\n    if (this.ready) {\r\n      let image\r\n      if (!this.data) {\r\n        image = this.getImageData()\r\n      } else {\r\n        image = this.data\r\n      }\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        if (image.data[pixel] === color[0] && image.data[pixel + 1] === color[1] && image.data[pixel + 2] === color[2]) {\r\n          image.data[pixel + 3] = 0\r\n        }\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.removeColor.bind(this))\r\n      this.params.push([color])\r\n    }\r\n  }\r\n*/\r\n  onClick(func: Function): void {\r\n\r\n  }\r\n  realPosition() {\r\n    return new Vector2D(this.position.x - (this.anchor.x * this.width), this.position.y - (this.anchor.y * this.height))\r\n  }\r\n\r\n  renderData(): void {\r\n    if (this.filterEnable) {\r\n      this.filterColor(this.filterColors[0], this.filterColors[1], this.filterColors[2])\r\n    }\r\n  //  console.log('here')\r\n    //console.log(this.data)\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    // this.context.translate(this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))\r\n    // this.context.rotate(this.angle)\r\n    // this.context.globalAlpha = this.opacity\r\n    // console.log(this.data)\r\n    this.context.putImageData(this.data, this.position.x -(this.anchor.x *  this.width), this.position.y -(this.anchor.y *  this.height))// -(this.anchor.x *  this.width), -(this.anchor.y *  this.height), this.position.x, this.position.y, this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n\r\n  filterColor(r: number, g: number, b: number) {\r\n    if (this.ready) {\r\n      this.filterEnable = true\r\n      this.filterColors = [r, g, b]\r\n      let image = this.getImageData()\r\n\r\n      for (let pixel = 0; pixel < image.data.length; pixel += 4) {\r\n        image.data[pixel] += r\r\n        image.data[pixel + 1] += g\r\n        image.data[pixel + 2] += b\r\n        // image.data[pixel + 3]\r\n      }\r\n\r\n      this.data = image\r\n      this.render = this.renderData\r\n    } else {\r\n      this.todo.push(this.filterColor.bind(this))\r\n      this.params.push([r, g, b])\r\n    }\r\n    \r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.save()\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.rotate(this.angle)\r\n    this.context.globalAlpha = this.opacity\r\n    this.context.drawImage(this.video, -(this.anchor.x * this.width), -(this.anchor.y * this.height), this.width, this.height)\r\n    // this.context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default Video\r\n","import Render from './Render'\r\nimport Graphic from './graphics/Graphic'\r\nimport Camera from './Camera'\r\nimport Picture from './Media/Picture'\r\nimport Video from './Media/Video'\r\n\r\n/**\r\n * This is the detail about the constructor\r\n * @class This is the detail about the class\r\n * @memberOf namespace\r\n * @param {Render} renderer The first argument\r\n */\r\nclass Scene {\r\n\r\n  public context: CanvasRenderingContext2D\r\n  public backgroundColor: string = 'black'\r\n  public camera: Camera\r\n  public renderer: Render\r\n  public childs: Array<any> = []\r\n  public frameRate: number = 0\r\n  public ready: boolean = false\r\n  public interval: any\r\n\r\n  constructor(renderer: Render) {\r\n    this.renderer = renderer\r\n    this.context = this.renderer.context\r\n    this.camera = new Camera(this.context)\r\n  }\r\n\r\n  dataLoaded(): boolean {\r\n    // Gets all the pictures and videos from the scene.\r\n    const elements = this.childs.filter((child) => {\r\n      if (child instanceof Picture) return true\r\n      if (child instanceof Video) return true\r\n      return false\r\n    })\r\n\r\n    // If there is an image that is not loaded returns false\r\n    return !elements.some((element) => !element.ready)\r\n  }\r\n\r\n  /**\r\n   * This method adds one element to the scene\r\n   * @param {Graphic} element any graphic object\r\n   * @returns {void}\r\n   */\r\n  add(element: any): void {\r\n    element.context = this.context\r\n    this.childs.push(element)\r\n    this.organizeByZindex()\r\n  }\r\n\r\n  /**\r\n   * Removes an element from the scene\r\n   * @param {Graphic} element any graphic object\r\n   * @returns {void}\r\n   */\r\n  remove(element: Graphic): void {\r\n    let index = this.childs.indexOf(element)\r\n    if (index >= 0) {\r\n      this.childs.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method clears the screen\r\n   */\r\n  clearScreen(): void {\r\n    this.context.save()\r\n    this.context.setTransform(1, 0, 0, 1, 0, 0)\r\n    this.context.fillStyle = this.backgroundColor\r\n    this.context.fillRect(0, 0, window.innerWidth, window.innerHeight)\r\n    this.context.restore()\r\n  }\r\n\r\n  /**\r\n   * This method enables or disables the image smoothing\r\n   * @param {boolean} state enable or disable\r\n   */\r\n  smoth(state: boolean): void {\r\n    if (this.context.imageSmoothingEnabled) {\r\n      this.context.imageSmoothingEnabled = state\r\n    } else if (this.context.mozImageSmoothingEnabled) {\r\n      this.context.mozImageSmoothingEnabled = state\r\n    } else if (this.context.webkitImageSmoothingEnabled) {\r\n      this.context.webkitImageSmoothingEnabled = state\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method organizes the childs of the scene by their property z_indez\r\n   */\r\n  organizeByZindex(): void {\r\n    this.childs.sort((a, b) => a.z_index - b.z_index)\r\n  }\r\n\r\n  /**\r\n   * This method renders the screne ultil you call stopAutoRender\r\n   */\r\n  autoRender(func?: Function): void {\r\n    this.interval = setInterval(() => {\r\n      if (func) func()\r\n      this.render()\r\n    }, this.frameRate)\r\n  }\r\n\r\n  /**\r\n   * This method stops autoRender\r\n   */\r\n  stopAutoRender(): void {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  /**\r\n   * This method renders the screne\r\n   */\r\n  render(): void {\r\n    if (!this.dataLoaded()) {\r\n      console.info('Waiting for images to load...')\r\n      setTimeout(this.render.bind(this), 100)\r\n    } else {\r\n      this.clearScreen()\r\n      this.childs.forEach(child => child.render())\r\n      this.camera.update()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Scene\r\n","\r\nimport Scene from './Scene'\r\nimport Graphic from './graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Render {\r\n  \r\n  public scene: Scene\r\n  public canvas: HTMLCanvasElement\r\n  public context: CanvasRenderingContext2D\r\n  public interval: any\r\n  public frameRate: number = 1000 / 60\r\n\r\n  constructor(canvas?: string, width?: number, height?: number) {\r\n\r\n    if (canvas) {\r\n      const _canvas = document.getElementById(canvas)\r\n      if (_canvas !== null) {\r\n        if (_canvas.tagName === 'CANVAS') {\r\n          this.canvas = _canvas\r\n        } else {\r\n          console.error('The ID provided is not a of canvas elements')\r\n        }\r\n      } else {\r\n        console.error('The ID provided is not in the DOM')\r\n      }\r\n    } else {\r\n      this.canvas = document.createElement('canvas')\r\n      document.body.appendChild(this.canvas)\r\n    }\r\n\r\n    if (width && height) {\r\n      this.canvas.width = width\r\n      this.canvas.height = height\r\n    } else {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    })\r\n\r\n    this.context = this.canvas.getContext('2d')\r\n    const scene = new Scene(this)\r\n    this.setScene(scene)\r\n  }\r\n\r\n  add(element: any): void {\r\n    this.scene.add(element)\r\n  }\r\n\r\n  remove(element: Graphic): void {\r\n    this.scene.remove(element)\r\n  }\r\n\r\n  addMultiple(e: Array<Graphic>): void {\r\n    e.forEach((m) => this.add(m))\r\n  }\r\n\r\n  /*\r\n  autoUpdateRender (func?: Function) {\r\n    this.scene.autoRender(func)\r\n  }\r\n  */\r\n\r\n  getWidth(): number {\r\n    return this.canvas.width\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.canvas.height\r\n  }\r\n\r\n  getSize(): Vector2D {\r\n    return new Vector2D(\r\n      this.canvas.width,\r\n      this.canvas.height)\r\n  }\r\n\r\n  getCenter(): Vector2D {\r\n    return new Vector2D(\r\n      this.canvas.width / 2,\r\n      this.canvas.height / 2)\r\n  }\r\n\r\n  getCanvasImage() {\r\n    return this.canvas.toDataURL()\r\n  }\r\n  /*\r\n    filter () {\r\n      let image = new Image()\r\n      image.src = this.getCanvasImage() \r\n  \r\n    }\r\n  */\r\n  fullScreen(): void {\r\n    let isFull = false\r\n    document.addEventListener('click', () => {\r\n      if (!isFull) {\r\n        this.canvas.webkitRequestFullScreen()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * This method renders the screne ultil you call stopAutoRender\r\n   */\r\n  autoRender(func?: Function): void {\r\n    this.interval = setInterval(() => {\r\n      if (func) func()\r\n      this.render()\r\n    }, this.frameRate)\r\n  }\r\n\r\n  render(): void {\r\n    this.scene.render()\r\n  }\r\n\r\n  setScene(scene: Scene): void {\r\n    this.scene = scene\r\n    this.scene.renderer = this\r\n    this.scene.context = this.context\r\n    this.scene.smoth(false)\r\n  }\r\n}\r\n\r\nexport default Render\r\n","import Graphic from './graphics/Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass LinearGradient {\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D\r\n  public gradient: any\r\n  public size: Vector2D\r\n\r\n  constructor(config?: any) {\r\n    this.context = config.context\r\n    this.size = config.size ? config.size : new Vector2D(100, 100)\r\n    this.gradient = this.context.createLinearGradient(this.position.x, this.position.y, this.size.x, this.size.y)\r\n    let counter = 0\r\n    for (let color of config.colors) {\r\n      this.gradient.addColorStop(counter, color)\r\n      // console.log(1 / config.colors.length)\r\n      counter += 1 / config.colors.length\r\n    }\r\n  }\r\n}\r\n\r\nexport default LinearGradient\r\n","class Color {\r\n  public red  : number\r\n  public green: number\r\n  public blue : number\r\n  public alpha: number\r\n\r\n  constructor (red = 0, green = 0, blue = 0, alpha = 1) {\r\n    this.red   = Math.round(red * 255)\r\n    this.green = Math.round(green * 255)\r\n    this.blue  = Math.round(blue * 255)\r\n    this.alpha = alpha\r\n  \r\n    if (this.red > 255) this.red = 255\r\n    else if (this.red < 0) this.red = 0\r\n\r\n    if (this.green > 255) this.green = 255\r\n    else if (this.green < 0) this.green = 0\r\n\r\n    if (this.blue > 255) this.blue = 255\r\n    else if (this.blue < 0) this.blue = 0\r\n\r\n    if (this.alpha > 1) this.alpha = 1\r\n    else if (this.alpha < 0) this.alpha = 0\r\n  }\r\n\r\n  setRed (color: number) {\r\n    if (color > 255) {\r\n      this.red = 255\r\n    } else if (color < 0) {\r\n      this.red = 0\r\n    } else {\r\n      this.red = color\r\n    }\r\n  }\r\n\r\n  setGreen (color: number) {\r\n    if (color > 255) {\r\n      this.green = 255\r\n    } else if (color < 0) {\r\n      this.green = 0\r\n    } else {\r\n      this.green = color\r\n    }\r\n  }\r\n\r\n  setBlue (color: number) {\r\n    if (color > 255) {\r\n      this.blue = 255\r\n    } else if (color < 0) {\r\n      this.blue = 0\r\n    } else {\r\n      this.blue = color\r\n    }\r\n  }\r\n\r\n  rgba () {\r\n    return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`\r\n  }\r\n\r\n  rgb () {\r\n    return `rgb(${this.red}, ${this.green}, ${this.blue})`\r\n  }\r\n\r\n  static random () {\r\n    return new Color(Math.random(), Math.random(), Math.random())\r\n  }\r\n}\r\n\r\nexport default Color\r\n","\r\nclass Wind {\r\n    public name\r\n    public sizeX\r\n    public sizeY \r\n    public positionX\r\n    public positionY\r\n    public element\r\n    public msg\r\n\r\n    constructor (name, sizeX, sizeY, positionX, positionY) {\r\n        this.name = name\r\n        this.sizeX = sizeX\r\n        this.sizeY = sizeY\r\n        this.positionX = positionX\r\n        this.positionY = positionY\r\n        this.element = document.createElement('div')\r\n        this.element.setAttribute('class', 'wind')\r\n\r\n        this.element.setAttribute('style', `\r\n            width: ${this.sizeX}px;\r\n            height: ${this.sizeY}px;\r\n            top: ${this.positionX}px;\r\n            left: ${this.positionY}px\r\n        `)\r\n\r\n        this.render()\r\n        document.body.appendChild(this.element)        \r\n        dragElement(this.element)\r\n    }\r\n\r\n    public setMsg(msg : string) {\r\n        this.msg = msg\r\n        this.render()\r\n    }\r\n\r\n    remove() {\r\n        document.body.removeChild(this.element)\r\n    }\r\n\r\n    render() {\r\n        let btn  = document.createElement('button')\r\n        btn.innerHTML = 'Close'\r\n        btn.onclick = this.remove.bind(this)\r\n        this.element.innerHTML = `\r\n        <div style='\r\n        background: #222;\r\n        padding: 5px;\r\n        '>${this.name}</div>\r\n        <hr>\r\n        <br>\r\n        <p>${this.msg}</p>\r\n        <br>\r\n        `\r\n        this.element.appendChild(btn)\r\n    }\r\n}\r\n\r\nfunction dragElement(elmnt) {\r\n    var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n    if (document.getElementById(elmnt.id + \"header\")) {\r\n      /* if present, the header is where you move the DIV from:*/\r\n      document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\r\n    } else {\r\n      /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n      elmnt.onmousedown = dragMouseDown;\r\n    }\r\n  \r\n    function dragMouseDown(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      // get the mouse cursor position at startup:\r\n      pos3 = e.clientX;\r\n      pos4 = e.clientY;\r\n      document.onmouseup = closeDragElement;\r\n      // call a function whenever the cursor moves:\r\n      document.onmousemove = elementDrag;\r\n    }\r\n  \r\n    function elementDrag(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      // calculate the new cursor position:\r\n      pos1 = pos3 - e.clientX;\r\n      pos2 = pos4 - e.clientY;\r\n      pos3 = e.clientX;\r\n      pos4 = e.clientY;\r\n      // set the element's new position:\r\n      elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n      elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n    }\r\n  \r\n    function closeDragElement() {\r\n      /* stop moving when mouse button is released:*/\r\n      document.onmouseup = null;\r\n      document.onmousemove = null;\r\n    }\r\n  }\r\n\r\nexport default Wind\r\n","import { Vector2D } from 'vector_class'\r\n\r\nclass Animation {\r\n  public loop: boolean = true\r\n  public size: Vector2D = new Vector2D(32, 32)\r\n  public scale: Vector2D\r\n  public frameRate: number\r\n  public x: number\r\n  public y: number\r\n  public image: HTMLImageElement\r\n  public interval: any\r\n  public frame:Vector2D = new Vector2D(0, 0)\r\n  public animations: any\r\n  public animationPlaying: boolean = false\r\n  public context: CanvasRenderingContext2D\r\n  public position: Vector2D  \r\n  constructor(configuration: any) {\r\n    this.load(configuration.src)\r\n    this.loop = configuration.loop ? configuration.loop : true\r\n    this.size = configuration.size ? configuration.size : new Vector2D(32, 32)\r\n    this.scale = configuration.scale ? configuration.scale : new Vector2D(1, 1)\r\n    this.frameRate = configuration.frameRate ? configuration.frameRate : 24\r\n    this.animations = configuration.animations\r\n    this.x = 0\r\n    this.y = 0\r\n  }\r\n\r\n  playAnimation (name: string): void {    \r\n    if (!this.animationPlaying) {\r\n      this.animationPlaying = true\r\n      this.frame.x = 0\r\n      this.frame.y = this.animations[name][1]\r\n      this.reproduceAnimation(name)\r\n    }\r\n  }\r\n\r\n  reproduceAnimation (name: string): void {\r\n    this.x = this.size.x * this.frame.x\r\n    this.y = this.size.y * this.frame.y\r\n    this.frame.x += 1\r\n    if (this.frame.x >= this.animations[name][0]) {\r\n      this.animationPlaying = false\r\n    } else {\r\n      setTimeout(() => this.reproduceAnimation(name), this.frameRate)\r\n    }\r\n  }\r\n\r\n  mouseDown() {\r\n\r\n  }\r\n\r\n  onClick(func: Function): void { }\r\n\r\n  load(src: string): void {\r\n    this.image = new Image()\r\n    this.image.src = src\r\n  }\r\n\r\n  getSize() {\r\n    return new Vector2D(this.size.x * this.scale.x, this.size.y * this.scale.y)\r\n  }\r\n\r\n  render() {\r\n    this.context.drawImage(\r\n      this.image,\r\n      this.x,\r\n      this.y,\r\n      this.size.x, this.size.y,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size.x * this.scale.x,\r\n      this.size.y * this.scale.y\r\n    )\r\n  }\r\n\r\n  destroy() {\r\n    clearInterval(this.interval)\r\n  }\r\n}\r\n\r\nexport default Animation\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\nimport LinearGradient from '../LinearGradient'\r\n\r\nclass Ellipse extends Graphic {\r\n  public radiusX: number = 10\r\n  public radiusY: number = 5\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.lineWidth = configuration.lineWidth ? configuration.lineWidth : this.lineWidth\r\n      this.lineColor = configuration.lineColor ? configuration.lineColor : this.lineColor\r\n      this.radiusX = configuration.radiusX ? configuration.radiusX : this.radiusX\r\n      this.radiusY = configuration.radiusY ? configuration.radiusY : this.radiusY\r\n      this.stroke = configuration.stroke ? configuration.stroke : this.stroke\r\n      this.color = configuration.color ? configuration.color : this.color\r\n      this.fill = configuration.fill ? configuration.fill : this.fill\r\n      if (configuration.linearGradient) {\r\n        this.linearGradient = configuration.linearGradient\r\n        // this.render = this.renderGradient\r\n      }\r\n    }\r\n  }\r\n\r\n  renderGradient () {\r\n    this.color = new LinearGradient({\r\n      context: this.context,\r\n      colors: this.linearGradient,\r\n      size: new Vector2D(this.position.x, this.position.y + this.radiusY),\r\n      position: new Vector2D(this.position.x, this.position.y - this.radiusY / 2)\r\n    }).gradient\r\n\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    this.renderGradient()\r\n    /*\r\n    if (this.fill) {\r\n      this.context.beginPath()\r\n      this.context.fillStyle = this.color\r\n      this.context.ellipse(this.position.x, this.position.y, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)\r\n      this.context.fill()\r\n    }\r\n    if (this.stroke) {\r\n      this.context.lineWidth = this.lineWidth\r\n      this.context.strokeStyle = this.lineColor\r\n      this.context.stroke()\r\n    }\r\n    */\r\n  }\r\n}\r\n\r\nexport default Ellipse\r\n","import Graphic from './Graphic'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass Poligon extends Graphic {\r\n  public cords: Array<Vector2D>\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration.color) this.color = configuration.color\r\n    if (configuration.stroke) this.stroke = configuration.stroke\r\n    if (configuration.cords) this.cords = configuration.cords.slice(1, configuration.cords.length)\r\n    if (configuration.fill) this.fill = configuration.fill\r\n    this.position = configuration.cords.slice[0]\r\n    this.cords.filter((pnt) => {\r\n      return new Vector2D(pnt.x - this.position.x, pnt.y - this.position.y)\r\n    })\r\n  }\r\n\r\n  render(): void {\r\n    this.context.beginPath()\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineCap = this.lineCap\r\n    this.context.fillStyle = this.color\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.moveTo(this.cords[0].x, this.cords[0].y)\r\n    for (var i = 0; i < this.cords.length; i++) {\r\n      this.context.lineTo(this.cords[i].x + this.position.x, this.cords[i].y + this.position.y)\r\n    }\r\n\r\n    this.context.closePath()\r\n    this.context.fill()\r\n    if (this.stroke) this.context.stroke\r\n  }\r\n}\r\n\r\nexport default Poligon\r\n","import Graphic from '../graphics/Graphic'\r\nimport Events from '../Events'\r\nimport { Vector2D } from 'vector_class'\r\n\r\nclass CircleEvents extends Graphic implements Events {\r\n  public radius: number\r\n  // Private\r\n  private mouseDownEnabled: boolean = false\r\n  private dragStartEnabled: boolean = false\r\n  private dragEndEnabled: boolean = false\r\n  private dragingEnabled: boolean = false\r\n  private mouseUpEnabled: boolean = false\r\n  private hoverEnabled: boolean = false\r\n  private moveEnabled: boolean = false\r\n\r\n  private moveMethods: Array<Function> = []\r\n  private mouseDownMethods: Array<Function> = []\r\n  private mouseUpMethods: Array<Function> = []\r\n  private hoverMethods: Array<Function> = []\r\n  private dragStartMethods: Array<Function> = []\r\n  private dragEndMethods: Array<Function> = []\r\n  private dragingMethods: Array<Function> = []\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      if (configuration.radius) this.radius = configuration.radius\r\n    }\r\n  }\r\n\r\n  checkIfInside(point: Vector2D): boolean {\r\n    return this.position.distance(point) < this.radius\r\n  }\r\n\r\n  private enableEvent (eventName: string, methods: Array<Function>): void {\r\n    let mouse: Vector2D\r\n    document.addEventListener(eventName, (event) => {\r\n      mouse = new Vector2D(event.clientX, event.clientY)\r\n      if (this.checkIfInside(mouse)) {\r\n        methods.forEach((method: Function) => method(mouse))\r\n      }\r\n    })\r\n  }\r\n\r\n  mouseDown(func: Function): void {\r\n    if (!this.mouseDownEnabled) {\r\n      this.mouseDownEnabled = !this.mouseDownEnabled\r\n      this.enableEvent('mousedown', this.mouseDownMethods)\r\n    }\r\n    this.mouseDownMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseUp(func: Function): void {\r\n    if (!this.mouseUpEnabled) {\r\n      this.mouseUpEnabled = !this.mouseUpEnabled\r\n      this.enableEvent('mouseup', this.mouseUpMethods)\r\n    }\r\n    this.mouseUpMethods.push(func.bind(this))\r\n  }\r\n\r\n  hover(func: Function): void {\r\n    if (!this.hoverEnabled) {\r\n      this.hoverEnabled = !this.hoverEnabled\r\n      this.enableEvent('mousemove', this.hoverMethods)\r\n    }\r\n    this.hoverMethods.push(func.bind(this))\r\n  }\r\n\r\n  mouseMove(func: Function): void {\r\n    if (!this.moveEnabled) {\r\n      this.moveEnabled = !this.moveEnabled\r\n      let mouse: any\r\n      document.addEventListener('mousemove', (event) => {\r\n        mouse = new Vector2D(event.clientX, event.clientY)\r\n        this.moveMethods.forEach((method: Function) => method(mouse))\r\n      })\r\n    }\r\n    func = func.bind(this)\r\n    this.moveMethods.push(func)\r\n  }\r\n\r\n\r\n  dragStart(func: Function): void {\r\n    this.dragStartMethods.push(func.bind(this))\r\n  }\r\n\r\n  draging(func: Function): void {\r\n    this.dragingMethods.push(func.bind(this))\r\n  }\r\n\r\n  dragEnd(func: Function): void {\r\n    this.dragEndMethods.push(func.bind(this))\r\n  }\r\n\r\n  enableMouseDrag() {\r\n    let isDraging = false\r\n    let distance: Vector2D = new Vector2D()\r\n\r\n    document.addEventListener('mousemove', (event) => {\r\n      if (isDraging) {\r\n        this.position = Vector2D.add(distance, new Vector2D(event.clientX, event.clientY))\r\n        this.dragingMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseDown((mouse: Vector2D) => {\r\n      if (!isDraging) {\r\n        document.body.style.cursor = 'pointer'\r\n        isDraging = true\r\n        distance = Vector2D.sub(this.position, mouse)\r\n        this.position = Vector2D.add(distance, mouse)\r\n        this.dragStartMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n\r\n    this.mouseUp(() => {\r\n      if (isDraging) {\r\n        document.body.style.cursor = 'default'\r\n        isDraging = false\r\n        this.dragEndMethods.forEach((meth: Function) => meth())\r\n      }\r\n    })\r\n  }  \r\n}\r\n\r\nexport default CircleEvents\r\n","\r\nimport CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Circle extends CircleEvents {\r\n  public radius: number = 5\r\n\r\n  constructor (config?: any) {\r\n    super(config)\r\n    if (config) {\r\n      this.radius = config.radius ? config.radius : 5\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  } \r\n}\r\n\r\nexport default Circle\r\n","import Graphic from './Graphic'\r\n\r\nclass Rect extends Graphic {\r\n  public width: number = 1\r\n  public height: number = 1\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data.width) this.width = data.width\r\n    if (data.height) this.height = data.height\r\n  }\r\n\r\n  selfRender(): void {\r\n    if (this.fill) {\r\n      this.context.fillRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.strokeRect(\r\n        this.position.x,\r\n        this.position.y,\r\n        this.width,\r\n        this.height\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Rect\r\n","import Graphic from './Graphic'\r\nimport {Vector2D} from 'vector_class'\r\n\r\nclass Line extends Graphic {\r\n  public start: Vector2D = new Vector2D(0, 0)\r\n  public end: Vector2D = new Vector2D(1, 1)\r\n\r\n  constructor(data: any) {\r\n    super(data)\r\n    if (data) {\r\n      if (data.start) this.start = data.start\r\n      if (data.end) this.end = data.end\r\n      if (data.color) this.color = data.color\r\n      if (data.start) this.position = data.start\r\n      this.end = new Vector2D(this.end.x - this.start.x, this.end.y - this.start.y)\r\n    }\r\n  }\r\n\r\n  selfRender(): void {\r\n    /*\r\n    this.context.strokeStyle = this.color\r\n    this.context.lineWidth = this.width\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    */\r\n   this.context.beginPath()\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.lineTo(this.end.x + this.position.x, this.end.y + this.position.y)\r\n    this.context.stroke()\r\n  }\r\n}\r\n\r\nexport default Line\r\n","import Graphic from './Graphic'\r\n\r\nclass Text extends Graphic {\r\n  public content: string\r\n  public fontConfig: string = ''\r\n  public lineHeight: number = 12\r\n  public maxWidth: number = 500\r\n\r\n  constructor(configuration: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.content = configuration.content ? configuration.content : ''\r\n    }\r\n  }\r\n\r\n  wrapText() {\r\n    let x = this.position.x\r\n    let y = this.position.y\r\n    var words = this.content.split(' ')\r\n    var line = ''\r\n  \r\n    for(var n = 0; n < words.length; n++) {\r\n      var testLine = line + words[n] + ' '\r\n      var metrics = this.context.measureText(testLine)\r\n      var testWidth = metrics.width\r\n      if (testWidth > this.maxWidth && n > 0) {\r\n        this.context.fillText(line, x, y)\r\n        line = words[n] + ' '\r\n        y += this.lineHeight\r\n      }\r\n      else {\r\n        line = testLine\r\n      }\r\n    }\r\n    this.context.fillText(line, x, y)\r\n  }\r\n\r\n  render(): void {\r\n    this.context.fillStyle = this.color\r\n    this.context.font = `${this.weight} ${this.size}px ${this.family}`\r\n    this.context.textAlign = this.textAlign\r\n    this.context.textBaseline = this.textBaseline\r\n    if (this.stroke) {\r\n      this.context.strokeText(this.content, this.position.x, this.position.y)\r\n    }\r\n    this.context.fillText(this.content, this.position.x, this.position.y)\r\n  }\r\n}\r\n\r\nexport default Text\r\n","import CircleEvents from '../Events/CircleEvents'\r\n\r\nclass Arc extends CircleEvents {\r\n  public endAngle: number = 0\r\n  public startAngle: number = Math.PI\r\n\r\n  constructor(configuration?: any) {\r\n    super(configuration)\r\n    if (configuration) {\r\n      this.endAngle = configuration.endAngle ? configuration.endAngle : 0\r\n      this.startAngle = configuration.startAngle ? configuration.startAngle : Math.PI\r\n    }\r\n  }\r\n  \r\n  selfRender(): void {\r\n    this.context.arc(0, 0, this.radius, this.endAngle, this.startAngle, true)\r\n\r\n    if (this.fill) {\r\n      this.context.fill()\r\n    }\r\n\r\n    if (this.stroke) {\r\n      this.context.stroke()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Arc\r\n","import Graphic from './Graphic'\r\n\r\nclass BezierCurve extends Graphic {\r\n  public cords: Array<Array<number>>\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.cords = config.cords ? config.cords : [[10, 10], [80, 20], [30, 30]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineWidth = this.lineWidth\r\n    this.context.strokeStyle = this.lineColor\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.translate(this.position.x, this.position.y)\r\n    this.context.bezierCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1], this.cords[2][0], this.cords[2][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default BezierCurve\r\n","import Graphic from './Graphic'\r\n\r\nclass QuadraticCurve extends Graphic {\r\n  public color: string\r\n  public cords: Array<Array<number>>\r\n  public width: number\r\n\r\n  constructor (config: any) {\r\n    super(config)\r\n    this.color = config.color ? config.color : 'black'\r\n    this.width = config.width ? config.width : 5\r\n    this.cords = config.cords ? config.cords : [[20, 100], [200, 20]]\r\n  }\r\n\r\n  render () {\r\n    this.context.save()\r\n    this.context.beginPath()\r\n    this.context.lineCap = this.lineCap\r\n    this.context.lineJoin = this.lineJoin\r\n    this.context.lineWidth = this.width\r\n    this.context.strokeStyle = this.color\r\n    this.context.moveTo(this.position.x, this.position.y)\r\n    this.context.quadraticCurveTo(this.cords[0][0], this.cords[0][1], this.cords[1][0], this.cords[1][1])\r\n    this.context.stroke()\r\n    this.context.restore()\r\n  }\r\n}\r\n\r\nexport default QuadraticCurve\r\n","\r\ninterface EventsManager {\r\n  mousemove: Array<Function>,\r\n  mouseup: Array<Function>,\r\n  mousedown: Array<Function>,\r\n  mousemoveActive: Boolean,\r\n  mouseupActive: Boolean,\r\n  mousedownActive: Boolean,\r\n\r\n  keypress: Array<Function>,\r\n  keyup: Array<Function>,\r\n  keydown: Array<Function>,\r\n  keypressActive: Boolean,\r\n  keyupActive: Boolean,\r\n  keydownActive: Boolean,\r\n}\r\n\r\nclass Event {\r\n  public events: any = {\r\n    // Mouse\r\n    mousemove: [],\r\n    mouseup: [],\r\n    mousedown: [],\r\n    mousemoveActive: false,\r\n    mousedownActive: false,\r\n    mouseupActive: false,\r\n\r\n    // KeyBoard\r\n    keypress: [],\r\n    keyup: [],\r\n    keydown: [],\r\n    keypressActive: false,\r\n    keydownActive: false,\r\n    keyupActive: false\r\n  }\r\n\r\n  public initEvent (name: string): void {\r\n    document.addEventListener(name, (event) => {\r\n      this.events[name].forEach((func: Function) => func(this, event))\r\n    })\r\n  }\r\n}\r\n\r\nexport default Event\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport Event from './Event'\r\n\r\nclass Mouse extends Event {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public clicked: boolean = false\r\n\r\n  constructor () {\r\n    super()\r\n    this.move((self: any, event: any) => {\r\n      this.position.x = event.clientX\r\n      this.position.y = event.clientY\r\n    })\r\n  }\r\n\r\n  move (func: Function): void {\r\n    if (!this.events.mousemoveActive) {\r\n      this.initEvent('mousemove')\r\n      this.events.mousemoveActive = true\r\n    }\r\n    this.events.mousemove.push(func)\r\n  }\r\n\r\n  up (func: Function): void {\r\n    if (!this.events.mouseupActive) {\r\n      this.initEvent('mouseup')\r\n      this.events.mouseupActive = true\r\n    }\r\n  }\r\n\r\n  down (func: Function): void {\r\n    if (!this.events.mousedownActive) {\r\n      this.initEvent('mousedown')\r\n      this.events.mousedownActive = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default Mouse\r\n","\r\nimport Event from './Event'\r\n\r\nclass KeyBoard extends Event{\r\n  public keys: Array<string> = []\r\n\r\n  press (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      // console.log(event.key === key)\r\n      // console.log(event.key, key)\r\n      if (event.key === key) {\r\n        // console.log(func)\r\n        func(this, event)\r\n      }\r\n    }\r\n\r\n    if (!this.events.keypressActive) {\r\n      this.events.keypressActive = true\r\n      this.initEvent('keypress')\r\n    }\r\n    this.events.keypress.push(func2)\r\n  }\r\n\r\n  down (key: string, func: Function) {\r\n    func = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keydownActive) {\r\n      this.events.keydownActive = true\r\n      this.initEvent('keydown')\r\n    }\r\n    this.events.keydown.push(func)\r\n  }\r\n\r\n  up (key: string, func: Function) {\r\n    const func2 = (self: any, event: any) => {\r\n      if (event.key === key) func(this, event)\r\n    }\r\n\r\n    if (!this.events.keyupActive) {\r\n      this.events.keyupActive = true\r\n      this.initEvent('keyup')\r\n    }\r\n    this.events.keyup.push(func2)\r\n  }\r\n}\r\n\r\nexport default KeyBoard\r\n","const defaultCss = document.createElement('style')\r\ndefaultCss.type = 'text/css'\r\ndefaultCss.innerHTML = `\r\n\r\n* {\r\n  margin:0%;\r\n  padding: 0%;\r\n}\r\n\r\ncanvas {\r\n  display: block;\r\n}\r\n\r\n/* \r\n            GUI\r\n*/\r\n\r\n.wind {\r\n  position: fixed;\r\n  background: #333;\r\n  color: white;\r\n  font-family: arial;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  border: 1px solid #111;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border: 1px solid #333;\r\n  color:black;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* \r\n            END GUI\r\n*/\r\n`\r\ndocument.head.appendChild(defaultCss)\r\n\r\nimport Scene from './Scene'\r\nimport Render from './Render'\r\nimport LinearGradient from './LinearGradient'\r\nimport { Vector2D } from 'vector_class'\r\nimport Color from './Color'\r\n\r\nimport Wind from './GUI/Window'\r\n\r\n// Graphics\r\nimport Animation from './Media/Animation'\r\nimport Graphic from './graphics/Graphic'\r\nimport Ellipse from './graphics/Ellipse'\r\nimport Poligon from './graphics/Poligon'\r\nimport Picture from './Media/Picture'\r\nimport Circle from './graphics/Circle'\r\nimport Video from './Media/Video'\r\nimport Rect from './graphics/Rect'\r\nimport Line from './graphics/Line'\r\nimport Text from './graphics/Text'\r\nimport Arc from './graphics/Arc'\r\nimport BezierCurve from './graphics/BezierCurve'\r\nimport QuadraticCurve from './graphics/QuadraticCurve'\r\n\r\n// Events\r\nimport Mouse from './Events/Mouse'\r\nimport KeyBoard from './Events/KeyBoard'\r\n\r\nconst mouse = new Mouse()\r\nconst keyboard = new KeyBoard()\r\n\r\nexport {\r\n  Wind,\r\n  QuadraticCurve,\r\n  Video,\r\n  BezierCurve,\r\n  LinearGradient,\r\n  Ellipse,\r\n  mouse,\r\n  keyboard,\r\n  Color,\r\n  Animation,\r\n  Rect,\r\n  Circle,\r\n  Vector2D,\r\n  Line,\r\n  Poligon,\r\n  Picture,\r\n  Text,\r\n  Arc,\r\n  Graphic,\r\n  Scene,\r\n  Render\r\n}\r\n","import { Rect } from 'fisica'\r\nimport { Scene } from 'dibujo'\r\nimport GameObject from './GameObject'\r\nimport GameManager from './GameManager'\r\n\r\nclass GameScene {\r\n  public renderScene: Scene\r\n  public physicsScene: Rect.World\r\n  private gameObjects: Array<GameObject>\r\n\r\n  constructor(manager: GameManager) {\r\n    this.physicsScene = new Rect.World()\r\n    this.renderScene = new Scene(manager.getRender())\r\n    this.gameObjects = []\r\n  }\r\n\r\n  add(gameObject: GameObject): void {\r\n    this.gameObjects.push(gameObject)\r\n  }\r\n\r\n  remove(gameObject: GameObject): void {\r\n    this.gameObjects = this.gameObjects.filter(other => {\r\n      return gameObject.identifierComponent.id !== other.identifierComponent.id\r\n    })\r\n  }\r\n\r\n  find(property: string, value: string): Array<GameObject> {\r\n    return this.gameObjects.filter((gameObject) => {\r\n      return gameObject.identifierComponent[property] === value\r\n    })\r\n  }\r\n\r\n  run(method: string, params?: Array<any>): void {\r\n    for (let gameObject of this.gameObjects) {\r\n      gameObject.run(method, params)\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.physicsScene.update()\r\n    this.renderScene.render()\r\n    this.run('update')\r\n  }\r\n}\r\n\r\nexport default GameScene\r\n","import { Render } from 'dibujo'\r\nimport GameScene from './GameScene'\r\n\r\nclass GameManager {\r\n  private render: Render\r\n  private scene: GameScene\r\n  private interval\r\n\r\n  constructor(id?: string, width?: number, height?: number) {\r\n    this.render = new Render(id, width, height)\r\n    this.scene = new GameScene(this)\r\n  }\r\n\r\n  setScene(scene: GameScene): void {\r\n    this.scene = scene\r\n  }\r\n\r\n  public getRender(): Render {\r\n    return this.render\r\n  }\r\n\r\n  public start(): void {\r\n    this.scene.run('start')\r\n    this.interval = setInterval(() => {\r\n      this.scene.update()\r\n    })\r\n  }\r\n\r\n  public stop(): void {\r\n    clearInterval(this.interval)\r\n  }\r\n}\r\n\r\nexport default GameManager\r\n","\r\n//import id from '../utils/id'\r\n\r\nclass Identifier {\r\n  public tags: Array<string>\r\n  public id//   : string = id()\r\n  public name: string\r\n\r\n  constructor(name?, tags?) {\r\n    this.name = name\r\n    this.tags = tags\r\n  }\r\n}\r\n\r\nexport default Identifier\r\n","import { Vector2D } from 'vector_class'\r\n\r\nclass Transform {\r\n  public position: Vector2D = new Vector2D(0, 0)\r\n  public scale: Vector2D = new Vector2D(1, 1)\r\n  public rotation: number = 0\r\n\r\n  constructor(configuration?) {\r\n    if (configuration) {\r\n      if (configuration.position) this.position = configuration.position\r\n      if (configuration.rotation) this.rotation = configuration.rotation\r\n      if (configuration.scale) this.scale = configuration.scale\r\n    }\r\n  }\r\n\r\n  rotate(rotation): void {\r\n    this.rotation += rotation\r\n  }\r\n\r\n  setPosition(x, y): void {\r\n    this.position = new Vector2D(x, y)\r\n  }\r\n\r\n  globalTranslate(x, y): void {\r\n    this.position.add(new Vector2D(x, y))\r\n  }\r\n\r\n  translate(x, y): void {\r\n    const translationY = Vector2D.angleMagnitude(this.rotation, y)\r\n    const translationX = Vector2D.angleMagnitude(this.rotation + Math.PI / 2, x)\r\n    this.position.add(new Vector2D(translationY[0], translationY[1]))\r\n    this.position.add(new Vector2D(translationX[0], translationX[1]))\r\n  }\r\n}\r\n\r\nexport default Transform \r\n","\r\nimport { Picture } from 'dibujo'\r\nimport { Scene } from 'dibujo'\r\nimport { Vector2D } from 'vector_class'\r\nimport GameObject from '../Managers/GameObject'\r\nimport GameScene from '../Managers/GameScene'\r\n\r\nclass SpriteComponent extends Picture {\r\n\r\n}\r\n\r\nexport default SpriteComponent\r\n","\r\nimport GameObject from '../Managers/GameObject'\r\n\r\nclass ScriptManager {\r\n\r\n  private methods: Object = {}\r\n  private gameObject: GameObject\r\n\r\n  constructor(gameObject: GameObject) {\r\n    this.gameObject = gameObject\r\n  }\r\n\r\n  add(script): void {\r\n    for (let method of Object.keys(script)) {\r\n      if (!this.methods[method]) {\r\n        this.methods[method] = []\r\n      }\r\n      this.methods[method].push(script[method].bind(this.gameObject))\r\n    }\r\n  }\r\n\r\n  run(name, params): void {\r\n    if (this.methods[name]) {\r\n      for (let method of this.methods[name]) {\r\n        method(...params)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScriptManager\r\n","//import AnimationComponent from '../Components/AnimationComponent'\r\n// import SoundComponent from '../Components/SoundComponent'\r\nimport IdentifierComponent from '../Components/IdentifierComponent'\r\nimport TransformComponent from '../Components/TransformComponent'\r\nimport ColliderComponent from '../Components/ColliderComponent'\r\nimport SpriteComponent from '../Components/SpriteComponent'\r\nimport ScriptComponent from '../Components/ScriptComponent'\r\nimport GameScene from '../Managers/GameScene'\r\n\r\nclass GameObject {  \r\n  // private AnimationComponent: AnimationComponent\r\n  // private SoundComponent: SoundComponent\r\n  public identifierComponent: IdentifierComponent\r\n  public transformComponent: TransformComponent\r\n  public scriptComponent: ScriptComponent\r\n\r\n  private colliderComponent: ColliderComponent\r\n  private spriteComponent: SpriteComponent\r\n\r\n  private scene: GameScene\r\n\r\n  constructor(scene: GameScene) {\r\n    this.identifierComponent = new IdentifierComponent()\r\n    this.transformComponent = new TransformComponent()\r\n    this.scriptComponent = new ScriptComponent(this)\r\n    this.scene = scene\r\n  }\r\n\r\n  setSprite(src: string): void {\r\n    this.spriteComponent = new SpriteComponent({\r\n      src,\r\n      position: this.transformComponent.position,\r\n      rotation: this.transformComponent.rotation,\r\n      scale: this.transformComponent.scale,\r\n    })\r\n    this.scene.renderScene.add(this.spriteComponent)\r\n  }\r\n\r\n  run(name: string, params: Array<any>): void {\r\n    this.scriptComponent.run(name, params)\r\n  }\r\n\r\n  destroy(): void {\r\n//    if (this.AnimationComponent) this.AnimationComponent.destroy(this.scene.getScene())\r\n    if (this.colliderComponent) this.colliderComponent.destroy(this.scene.physicsScene)\r\n    // if (this.spriteComponent) this.spriteComponent.destroy(this.scene.renderScene)\r\n    this.scene.remove(this)\r\n  }\r\n}\r\n\r\nexport default GameObject\r\n","\r\nimport { Vector2D } from 'vector_class'\r\nimport { Color  } from 'dibujo'\r\n\r\n/**\r\n * Managers\r\n */\r\nimport Scene from './Managers/GameScene'\r\nimport Manager from './Managers/GameManager'\r\nimport GameObject from './Managers/GameObject'\r\n\r\n/**\r\n * Components\r\n */\r\nimport SoundComponent from './Components/SoundComponent'\r\nimport SpriteComponent from './Components/SpriteComponent'\r\nimport ColliderComponent from './Components/ColliderComponent'\r\n// import AnimationComponent from './Components/AnimationComponent'\r\n\r\n\r\n// import { Scene, GameObject, SpriteComponent, Manager } from './lienzo'\r\n\r\nconst manager = new Manager()\r\nconst scene = new Scene(manager)\r\nconst player = new GameObject(scene)\r\n\r\nplayer.scriptComponent.add({\r\n    update() {\r\n      console.log('Update call')\r\n        // this.transformComponent.position.x += .1\r\n    }\r\n})\r\nplayer.setSprite('../assets/ball.png')\r\n\r\nscene.add(player)\r\nmanager.setScene(scene)\r\nmanager.start()\r\n/*\r\n\r\n\r\n\r\nexport {\r\n//AnimationComponent,\r\n  ColliderComponent,\r\n  SpriteComponent,\r\n  SoundComponent,\r\n  GameObject,\r\n  Vector2D,\r\n  Manager,\r\n  Scene,\r\n  Color\r\n}\r\n*/"]}